var importViewHot;
var importViewSettings;
var importViewPopupSettings;
var importViewIndex = 9999;
var importViewScrollTp = true;
var importViewLanHot;
var importViewLanSettings;
var importViewSpecHot;
var importViewSpecSettings;
var loadDstnListHot;
var loadDstnPopupSettings;
var ctNoListHot;
var ctNoPopupSettings;
var hotInstance;
var fileNames = [];
var filesList = [];
var tempSavedRows = {};

$( document ).ready(function() {
	 //달력 사용시 반드시 넣어주세요.
    $('.band-calendar').each(function(){ regCal(this) ;})
	  //캘린더 포맷
    $('.datepicker').datepicker("option","dateFormat",calFormat);

	  var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  
	  var today = new Date().toISOString().substring(0,10);
	  var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	  
	  $("#importView_srch2").val(mtoday);
	  $("#importView_srch3").val(today);
	  
	  var importViewElement = document.querySelector('#importViewTable');
	  var importViewElementContainer = importViewElement.parentNode;
	  importViewHot = new Handsontable(importViewElement, importViewSettings);
	  
	  
	  var importViewLanElement = document.querySelector('#importViewLanTable');
	  var importViewLanElementContainer = importViewLanElement.parentNode;
	  importViewLanHot = new Handsontable(importViewLanElement, importViewLanSettings);
	  
	  var importViewSpecElement = document.querySelector('#importViewSpecTable');
	  var importViewSpecElementContainer = importViewSpecElement.parentNode;
	  importViewSpecHot = new Handsontable(importViewSpecElement, importViewSpecSettings);
	  
	  
	  var impViewListPopupElement = document.querySelector('#impViewListPopupTable');
	  var impViewListPopupElementContainer = impViewListPopupElement.parentNode;
	  impViewListPopupSettings = fn_handsonGridImpViewListPopupOption();
	  impViewListHot = new Handsontable(impViewListPopupElement, impViewListPopupSettings);
	  
	  var loadDstnPopupElement = document.querySelector('#loadAddrListPopupTable');
	  var loadDstnPopupElementContainer = loadDstnPopupElement.parentNode;
	  loadDstnPopupSettings = fn_handsonGridLoadDstnListPopupOption();
	  loadDstnListHot = new Handsontable(loadDstnPopupElement, loadDstnPopupSettings);

	  var ctNoPopupElement = document.querySelector('#contNoListPopupTable');
	  var ctNoPopupElementContainer = ctNoPopupElement.parentNode;
	  ctNoPopupSettings = fn_handsonGridCtNoListPopupOption();
	  ctNoListHot = new Handsontable(ctNoPopupElement, ctNoPopupSettings);
	  
	  fn_changeImportView('read');
	  
	  //scroll 이벤트
	  fn_impViewasEventReg();
	  //importViewUseEventReg();
	  $("#impViewTextView").text("전체");
      $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
	  

	  $(document).on("click", '.itemCdClass', function(){
		  alert($(this).index());
	  });
});
/** 이벤트 Start **/


$(document).mousedown(function(e){	
	if(e.target.name == "importView1_date" || e.target.name == "importView2_date" || e.target.name == "toDt" || e.target.name == "fromDt" ){
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			return;
		}
		$(".calendar-popup-container").remove();
		$('.band-calendar').each(function(){ regCal(this);});
	}else{
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			$(".calendar-popup-container").attr("class", "calendar-popup-container");
		}	
	}
});


$("input:radio[name=importView_srch20]").change(function(){
	$("input[name=importViewType][value=read]").prop("checked", true);
	fn_changeImportView("read");
})

// 테이블 타입 변경
$("input[name=importViewType]").change(function(){
	  fn_changeImportView($(this).val());
});


function fn_impViewchgDate1() {
	  var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  var day = date.getDay();
	  
	  var today = new Date().toISOString().substring(0,10);
	  var mtoday = new Date(new Date().setMonth(month - 1)).toISOString().substring(0,10);
	  
	  $("#importView_srch2").val(today);
	  $("#importView_srch3").val(today);
	  //$("#importView_srch3").val(today);
}

function fn_impViewchgDate2() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - day)).toISOString().substring(0,10);
	
	$("#importView_srch2").val(mtoday);
	$("#importView_srch3").val(today);
}

function fn_impViewchgDate3() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - dayday + 1)).toISOString().substring(0,10);
	
	$("#importView_srch2").val(mtoday);
	$("#importView_srch3").val(today);
}
function fn_impViewchgDate4() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	  var startDt = new Date();
	  startDt.setDate(1);
	  startDt.setMonth(startDt.getMonth() - 1);

	  var endDt = new Date();
	  endDt.setMonth(endDt.getMonth(), 1);
	  endDt.setDate(endDt.getDate() - 1);
	
	var today = startDt.toISOString().substring(0,10);
	var mtoday = endDt.toISOString().substring(0,10);
	
	$("#importView_srch2").val(today);
	$("#importView_srch3").val(mtoday);
}

//정렬항목
/*$("select[name=alignImportView]").change(function(){
	  fn_searchImportView();
});
*/
//row 수
$("select[name=importViewPageCnt]").change(function(){
	  fn_searchImportView();
});


function fn_impViewasEventReg(){
	
 $("#importViewTable .wtHolder").scroll(function(){
	  //fn_impViewFileList(row, col)
  	  var scrollTop = $("#importViewTable .wtHolder").scrollTop();
  	  var countPerPage = $("#importViewPageCnt option:selected").val();
  	  var rowHeight = importViewHot.getRowHeight();
  	  var addCnt = 790;
  	  if(countPerPage == "50"){
  		  addCnt = 790;
  	  }else if(countPerPage == "100"){
  		  addCnt = 2040;
  	  }else if(countPerPage == "200"){
  		  addCnt = 3290;
  	  }else if(countPerPage == "500"){
  		  addCnt = 4540;
  	  }

  	  if(importViewScrollTp && importViewIndex != 9999 && scrollTop >= (countPerPage * importViewIndex * rowHeight) + addCnt){
  		  fn_importViewScroll();
  	  }
  });
}
/** 이벤트 End **/
//스크롤
function fn_importViewScroll(){
	if( $("input[name=importViewType]:checked").val() == "enrol")
		return;
	fn_loading(true);
	importViewScrollTp = false;
	importViewIndex++;
	var data = fn_setImportViewForm();
	
	$.ajax({
		type : "POST",
		url : "/import/selectImportViewList.do",
		data : JSON.stringify(data),
		contentType: "application/json; charset=utf-8", 
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	var getData = importViewHot.getSourceData();
        	var meargeJson = getData.concat(data.resultList);
        	importViewHot.loadData(meargeJson);
        	importViewScrollTp = true;
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	//alert(msgSearchError);
        	}
        }
	});
}

//검색
function fn_searchImportView(){
	
	var selectedValue = $("input[name=importView_srch1]:checked").val();
    
    if(selectedValue === "01") {
        $("#impViewTextView").text("전체");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "02") {
        $("#impViewTextView").text("수리");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "03") {
        $("#impViewTextView").text("대기");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "04") {
        $("#impViewTextView").text("결재");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "05") {
        $("#impViewTextView").text("미결");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "06") {
        $("#impViewTextView").text("신고 전");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else {
        $("#impViewTextView").text("신고 후");
        $("#impViewTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    }
    
	importViewIndex = 0;
	var data = fn_setImportViewForm();
	var valid = fn_validateSearchDate(data["srch2"], data["srch3"]);

	if(valid === "false"){
		data["srch2"] = null;
		data["srch3"] = null;
		$("#importView_srch2").val("");
		$("#importView_srch3").val("");
		return;
	} else {
		data["srch2"] = $("#importView_srch2").val();
		data["srch3"] = $("#importView_srch3").val();
	}
	
	if(data["srch2"] == null || data["srch2"] == "" || data["srch3"] == "" || data["srch3"] == null){
		alert("날짜를 입력해 주세요.");
		return;
	}
	fn_loading(true);
	
	$.ajax({
		type : "POST",
		url : "/import/selectImportViewList.do",
		data : JSON.stringify(data),
		contentType: "application/json; charset=utf-8",
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        		importViewHot.loadData([]);
        		importViewSpecHot.loadData([]);
        		importViewLanHot.loadData([]);
            	importViewHot.loadData(data.resultList);
            	var totCnt = (data.resultList.length > 0) ? data.resultList[0].cnt : 0;
            	$("#importViewCnt").text(totCnt); //검색결과 총 갯수
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
};


function fn_searchImportViewLan(rptNo) {
	fn_loading(true);
	rptNo = rptNo.replace(/-/g, '');
	
	var lData = {};
	lData["srch2"] = rptNo;
	
	lData["recordCountPerPage"] = $("#importViewPageCnt option:selected").val();
	lData["pageIndex"] = importViewIndex;
	
	
	$.ajax({
		type : "POST",
		url : "/import/selectImportViewLanList.do",
		data : lData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        		importViewSpecHot.loadData([]);
        		importViewLanHot.loadData([]);
            	importViewLanHot.loadData(data.resultList);
            	importViewLanHot.updateSettings({
            	        autoColumnSize: {samplingRatio: 30}
            	    });
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
};

function fn_searchImportViewSpec(rptNo, ranNo) {
	
	fn_loading(true);
	
	var pData = {};
	pData["srch2"] = rptNo;
	pData["srch3"] = ranNo;
	
	pData["recordCountPerPage"] = $("#importViewPageCnt option:selected").val();
	pData["pageIndex"] = importViewIndex;
	
	
	$.ajax({
		type : "POST",
		url : "/import/selectImportViewSpecList.do",
		data : pData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
		success : function(data) {
				importViewSpecHot.loadData([]);
				importViewSpecHot.loadData(data.resultList);
			fn_loading(false);
		},
		error : function(e, textStatus, errorThrown) {
			if(e.status == 400){
				alert("Your request is up. Please log back in if you wish continue");
				location.href = document.referrer;
			} else {
				console.log(errorThrown);
				alert(msgSearchError);
			}
		}
	});
};


function enterkey() {
	if (window.event.keyCode == 13) {
		fn_searchImportView();
    }
}


//검색조건 생성
function fn_setImportViewForm(){
	var sData = {};
	sData["srch1"] = $("input:radio[name=importView_srch1]:checked").val();
	sData["srch2"] = $("#importView_srch2").val();
	sData["srch3"] = $("#importView_srch3").val();
	sData["srch4"] = $("#importView_srch4").val();
	sData["srch5"] = $("#importView_srch5").val();
	var list2 = sData["srch5"].split(/[, ]+/).map(function(item) {
        return item.trim();
    }).filter(function(item) {
        return item.length > 0;
    });
	sData["list2"] = list2;

	sData["srch8"] = $("#importViewDateType option:selected").val();
	
	sData["recordCountPerPage"] = $("#importViewPageCnt option:selected").val();
	sData["pageIndex"] = importViewIndex;
	
	sData["srchType1"] = $("#importViewSrchType1 option:selected").val();
	sData["srchText1"] = $("#importViewSrchText1").val();
	
	sData["srchType2"] = $("#importViewSrchType2 option:selected").val();
	sData["srchText2"] = $("#importViewSrchText2").val();
	
	
	return sData;
};

//검색조건 초기화
function fn_clearImportView(){
	
	  var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  
	  var today = new Date().toISOString().substring(0,10);
	  var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	
	$("input:radio[name=importView_srch1][value=01]").prop('checked', true);
	$("#importView_srch2").val(mtoday);
	$("#importView_srch3").val(today);
	$("#importView_srch4").val("");
	$("#importView_srch5").val("");
	$("#importViewDateType").val("01");
	
	$("#importViewSrchType1").val("");
	$("#importViewSrchType2").val("");
	
	$("#importViewSrchText1").val("");
	$("#importViewSrchText2").val("");
	
};

function fn_memoSave(row, col){
	var rowData = importViewHot.getSourceDataAtRow(row);
	
	var rptNo = rowData.rptNo;
	var value2 = $("#unreMemo"+row).val();
	
	var sData = {};
	sData["srch1"] = rptNo;
	sData["srch2"] = value2;
	
	if(confirm("저장하시겠습니까?")){
		
		$.ajax({
			type : "POST",
			url : "/import/saveImportMemo.do",
			data : sData,
			beforeSend : function(xmlHttpRequest){
				xmlHttpRequest.setRequestHeader("AJAX", "true");
			},
			dataType: "json",
			success : function(data) {
				alert('저장되었습니다.')
				fn_searchImportView();
				
			},
			error : function(e, textStatus, errorThrown) {
				if(e.status == 400){
					alert("Your request is up. Please log back in if you wish continue");
					location.href = document.referrer;
				} else {
					console.log(errorThrown);
					alert(msgSearchError);
				}
			}
		});
	} else {
		return;
	}
}


//테이블 컬럼
function fn_impViewTableCol(){
	var tableType = $("input:radio[name=importViewType]:checked").val();
	// 사용여부
	var importView_srch20 = $("input:radio[name=importView_srch20]:checked").val(); 

	var impViewFileLoadRenderer = function(instance, td, row, col, prop, value, cellProperties) {
        var $fileButton;
        if (value != '' && value != null) {
            $fileButton = $('<i class="fas fa-search search-icon" style="cursor:pointer;" onclick="fn_impViewFileList('+row+','+col+')"></i>');
        } else {}
        $(td).empty().append($fileButton).append("  " + value);
	};
	
	var cusMemoRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		var $cusMemo = $('<input type="text" style="height:14px;" id="cusMemo" /><div class="btn btn-primary new-button">SAVE</div>');
		$(td).empty().append(value+"	").append($cusMemo).css("text-align", "right");
		};
	
	var unreMemoRenderer = function (instance, td, row, col, prop, value, cellProperties) {
	    var $unreMemoInput = $('<input type="text" class="row-start-3 col-start-2 bg-gray-50 border border-gray-300 rounded-lg" id="unreMemo' + row + '" style="height:8px; width:150px;" value="' + value + '"/>');
	    var $unreMemoButton = $('<button type="button" onclick="fn_memoSave(' + row + ',' + col + ')" class="save-button p-0.5 text-sm rounded text-white hover:opacity-50 duration-150 bg-rose-700 ml-1 hover:bg-rose-500">저장</button>');
	    $(td).empty().append($unreMemoInput).append($unreMemoButton).css("text-align", "right");
	    $unreMemoInput.css({
	        'font-family': '맑은 고딕',
	        'font-size': '13px'
	    });
	    $unreMemoButton.css({
	        'font-family': '맑은 고딕',
	        'font-size': '13px'
	    });
	    $unreMemoInput.val(value);
	};

	
	var chipRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		  Handsontable.renderers.BaseRenderer.apply(this, arguments);
		  td.classList.add('chip-cell');
		  td.classList.add('text-center');
		  switch (value) {
		    case "예":
		    case "접수":
		    case "Y":
		      td.innerHTML = `<span class="chip chip-blue">${value}</span>`
		      break
		    case "수리":
		      td.innerHTML = `<span class="chip chip-green">${value}</span>`
		      break
		    case "N":
		    case "서류 미비":
		      td.innerHTML = `<span class="chip chip-red">${value}</span>`
		      break
		    case "자수":
		      td.innerHTML = `<span class="chip chip-yellow">${value}</span>`
		      break
		    case "":
	    	  td.innerHTML = `<span>${value}</span>`
    		  break
		    default:
		      td.innerHTML = `<span class="chip chip-primary">${value}</span>`
		      break
		  }
	};
	
	var transRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		Handsontable.renderers.BaseRenderer.apply(this, arguments);
		td.classList.add('chip-cell');
		td.classList.add('text-center');
		var receColumnIndex = 2;
		var statue;
	    var receValue = instance.getDataAtCell(row, receColumnIndex);
	    var contCnt = instance.getDataAtCell(row, 33);
	    var tempCnt = instance.getDataAtCell(row, 34);
	    var shipCnt = instance.getDataAtCell(row, 35);
	    if (contCnt === 0 && tempCnt === 0 && shipCnt === 0) {
	    	statue = "의뢰";
	    } else if (shipCnt === 0 && tempCnt !== 0) {
	    	statue = "임시저장"; // shipCnt가 0이고 tempCnt가 0이 아닐 때
	    } else if (contCnt === 0 && shipCnt !== 0) {
	    	statue = "완료"; // contCnt가 0이고 shipCnt가 0이 아닐 때
	    } else if (contCnt !== 0) {
	        // contCnt가 0이 아닐 때
	        if (contCnt === shipCnt) {
	        	statue = "완료"; // contCnt가 shipCnt와 같을 때
	        } else if(contCnt > shipCnt && shipCnt != 0){
	        	statue = "잔여의뢰";
	        } else if (contCnt > shipCnt){
	        	statue = "의뢰";
	        } else{
	        	statue = "기타"; // 그 외의 경우 처리 (선택적)
	        }
	    }
	    var $transRequestButton;
	    if (receValue === "자수" || receValue === "수리" || receValue === "승인" || receValue === "대기") {
	        var $transRequestButton;
	        if(statue !== "완료"){
	        	$transRequestButton = 
	        		$('<button type="button" onclick="fn_shipReqBtn(' + row + ',' + col + 
	        			')" class="save-button p-0.5 text-sm rounded text-white hover:opacity-50 duration-150 bg-primary-700 ml-1 hover:bg-primary-500">'
	        			+ statue + 
	        			'</button>');
	        	$(td).empty().append($transRequestButton);
	        	$transRequestButton.css({
	        		'font-family': '맑은 고딕',
	        		'font-size': '13px'
	        	});
	        } else {
	        	$(td).empty().text('완료');
	        }
	    } else {
	        $(td).empty().text('-');
	    }
	};
	
	
	function saveRenderer(instance, td, row, col, prop, value, cellProperties) {
		  Handsontable.renderers.BaseRenderer.apply(this, arguments);
		  td.classList.add('save-cell');
		  td.classList.add('text-center');
		  td.classList.add('text-center');
		  td.innerHTML = `${value}<button type="button" class="save-button p-0.5 text-sm rounded text-white hover:opacity-50 duration-150 bg-rose-700 ml-1 hover:bg-rose-500">저장</button>`
		}
	
	
	this.impViewCol = [
		{data : 'addr', className : "htCenter", width: 50, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'shipReq', className : "htCenter", width: 80, wordWrap: false, className : "htCenter", readOnly:true, renderer : transRenderer},
		{data : 'rece', className : "htCenter", width: 50,wordWrap: false, className : "htCenter", readOnly:true, renderer : chipRenderer},
		{data : 'cs', className : "htCenter", width: 60,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'rptNo', className : "htCenter", width: 160, wordWrap: false, className : "htCenter", readOnly:true, renderer : impViewFileLoadRenderer},
		{data : 'blno', className : "htCenter", width: 130,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'nabFirm', className : "htCenter",width: 180, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'supFirm', className : "htCenter", width: 200,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'incDay', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'rptDay', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'lisDay', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'excCot', className : "htCenter", width: 110,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'conKiCot', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'conCod', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'freKrw', className : "htCenter", width: 90,wordWrap: false, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'insuKrw', className : "htCenter",width: 90, wordWrap: false, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'totWt', className : "htCenter",width: 120, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'totPackCnt', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'conCur', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'conTotAmt', className : "htCenter",width: 120, wordWrap: false, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'lawCd', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'supSt', className : "htCenter", width: 120,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'fodMark', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'oriStPrfYn', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true,renderer : chipRenderer},
		{data : 'rmv', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true,renderer : chipRenderer},
		{data : 'rptYn', className : "htCenter",width: 110, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'plntCd', className : "htCenter",width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'prOrdr', className : "htCenter", width: 90,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'userMemo', className : "htCenter", width: 250,wordWrap: false, className : "htCenter", readOnly:true, renderer : unreMemoRenderer},
		{data : 'reporter', className : "htCenter", width: 120,wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'nabSdno', className : "htCenter", className : "htCenter", readOnly:true},
		{data : 'managerNm', className : "htCenter", className : "htCenter", readOnly:true},
		{data : 'billEmail', className : "htCenter", className : "htCenter", readOnly:true},
		{data : 'contCnt', className : "htCenter", className : "htCenter", readOnly:true},
		{data : 'tempCnt', className : "htCenter", className : "htCenter", readOnly:true},
		{data : 'shipCnt', className : "htCenter", className : "htCenter", readOnly:true},
	] ;
		

	//판정 사용 내역 컬럼
		
		  Handsontable.renderers.registerRenderer('chip', chipRenderer);
		  Handsontable.renderers.registerRenderer('save', saveRenderer);
}
//테이블 헤더
function fn_impViewTableHeader(){
	var tableType = $("input:radio[name=importViewType]:checked").val();
	// 사용여부
	//var importView_srch20 = $("input:radio[name=importView_srch20]:checked").val(); 
	
	this.impViewHeader = [
		"주소", "운송", "상태", "C/S검사", "신고번호", "B/L번호", "납세의무자", "무역거래처",  "반입일자", "신고일자", "수리일자", "거래구분",
		"결제방법", "인코텀즈", "운임", "보험료", "총중량", "총포장개수", "통화단위", "신고금액",  "요건승인", "해외공급자국가부호", "적출국(부호)", "FTA적용여부", "감면여부", "확정신고대상여부",
		"부서코드", "PO", "사용자메모", "신고인", "납세자번호", "" ,"","컨테이너수", "임시저장수", "오더수"
	 ] ;
}


function fn_impViewLanTableCol(){
	this.impViewLanCol = [
		{data : 'rptNo', className : "htCenter", width: 160, wordWrap: false, className : "htCenter"},
		{data : 'ranNo', className : "htCenter", width: 100,wordWrap: false, className : "htCenter"},
		{data : 'hs', className : "htCenter", width: 100,wordWrap: false, className : "htCenter"},
		{data : 'na', className : "htCenter", width: 100,wordWrap: false, className : "htCenter"},
		{data : 'gsRate', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'stdGname1', className : "htCenter", width: 200, wordWrap: false, className : "htCenter"},
		{data : 'excGname1', className : "htCenter", width: 200, wordWrap: false, className : "htCenter"},
		{data : 'taxUsd', wordWrap: false, width: 100, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true},
		{data : 'gs', wordWrap: false, width: 100, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'vat', wordWrap: false, width: 100, type : 'numeric', className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'csChkCot', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"}
	];
}

function fn_impViewLanTableHeader(){
	this.impViewLanHeader = [
		"신고번호","란번호","세번부호","구분","세율","품명","거래품명","과세가격원화","관세","부가세","CS"
	];
}

function fn_impViewSpecTableCol(){
	this.impViewSpecCol = [
		{data : 'rptNo', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'ranNo', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'sil', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'impGname1', className : "htCenter", width: 200, wordWrap: false, className : "htCenter"},
		{data : 'qty', wordWrap: false, type : 'numeric', width: 100, className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'ut', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'upi', wordWrap: false, type : 'numeric', width: 100, className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'amt', wordWrap: false, type : 'numeric', width: 100, className: 'htRight', numericFormat : {pattern : '0,0'}, readOnly:true },
		{data : 'impGname2', className : "htCenter", width: 200, wordWrap: false, className : "htCenter"},
		{data : 'compoent1', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		{data : 'compoent2', className : "htCenter", width: 100, wordWrap: false, className : "htCenter"},
		];
}

function fn_impViewSpecTableHeader(){
	this.impViewSpecHeader = [
		"신고번호","란번호","규격번호","품명","수량","단위","단가","금액","품명2","성분1","성분2"
		];
}

//테이블 히든컬럼
function fn_impViewTableHidden(){
	this.impViewHidden = [0,30,31,32];
}

function fn_impViewLanTableHidden(){
	this.impViewLanHidden = [0];
}

function fn_impViewSpecTableHidden(){
	this.impViewSpecHidden = [0];
}


//table
function fn_handsonGridViewOption(col, header, hidden){
	var tableType = $("input:radio[name=importViewType]:checked").val();

	importViewSettings = {
	  columns : col,
	  colHeaders : header,
	  hiddenColumns : {
    	  copyPasteEnabled : false,
    	  indicators : false,
    	  columns : hidden
      },
	  stretchH : 'all',
	  width : '100%',
	  autoWrapRow : true,
	  height : 300,
	  rowHeights : 27,
	  rowHeaders : true,
	  columnHeaderHeight : 25,
	  manualRowResize : true,
	  manualRowMove : true,
	  manualColumnResize : true,
	  manualColumnMove : false,
	  licenseKey: 'non-commercial-and-evaluation', // for non-commercial use only
	  //dropdownMenu : true,

	  contextMenu : (tableType == "enrol") ? ['row_above', 'row_below', '---------', 'undo', 'redo', 'remove_row'] : false,
	  filters : true,
	  readOnly : (tableType == "read") ? true : false,
	  allowInsertRow : true,
	  allowRemoveRow : true,
	 // columnSorting : {indicator : true},
	  autoColumnSize : {samplingRatio : 30},
      mergeCells : false,
      wordWrap : true,
      afterOnCellMouseDown : function(event, coords){
    	  
    	  var excludedColumns = [1,28];
    	  
    	  if (excludedColumns.includes(coords.col)) {
    	        return; // 함수 실행 중단
    	    }
    	  //26
    	  var dataList = "";
    	  var rptNo = "";
    	  var dataList = importViewHot.getSourceData(coords.row, 35);
    	  var rptNo = dataList[dataList.length-1].rptNo.replace(/-/g, '');
          fn_searchImportViewLan(rptNo);
          setTimeout(function() {
              fn_searchImportViewSpec(rptNo, "001");
          }, 1);
      }
	};

	return importViewSettings;
}

function fn_handsonGridLanOption(col, header, hidden){
	var tableType = $("input:radio[name=importViewType]:checked").val();

	
	importViewLanSettings = {
			columns : col,
			colHeaders : header,
			hiddenColumns : {
				copyPasteEnabled : false,
				indicators : false,
				columns : hidden
			},
			stretchH : 'all',
			width : '100%',
			autoWrapRow : true,
			height : 200,
			border : 1,
			rowHeights : 25,
			columnHeaderHeight : 25,
			manualRowResize : true,
			manualColumnResize : true,
			manualRowMove : true,
			manualColumnMove : false,
			licenseKey: 'non-commercial-and-evaluation',
			  filters : true,
			  readOnly :  true ,
			  allowInsertRow : true,
			  allowRemoveRow : true,
			 // columnSorting : {indicator : true},
			  autoColumnSize : {samplingRatio : 30},
		      mergeCells : false,
		      wordWrap : true,

			afterOnCellMouseDown : function(event, coords){
				var dataList = "";
				var rptNo = "";
				var ranNo = "";
				var dataList = importViewLanHot.getSourceData(coords.row, 35);
				var rptNo = dataList[dataList.length-1].rptNo;
				var ranNo = dataList[dataList.length-1].ranNo;
				fn_searchImportViewSpec(rptNo, ranNo);
			}
	};
	
	return importViewLanSettings;
}

function fn_handsonGridSpecOption(col, header, hidden){
	
	importViewSpecSettings = {
			columns : col,
			colHeaders : header,
			hiddenColumns : {
				copyPasteEnabled : false,
				indicators : false,
				columns : hidden
			},
			stretchH : 'all',
			width : '100%',
			autoWrapRow : true,
			height : 200,
			rowHeights : 25,
			columnHeaderHeight : 25,
			manualRowResize : true,
			manualColumnResize : true,
			licenseKey: 'non-commercial-and-evaluation',
			manualRowMove : true,
			manualColumnMove : false,
			
			filters : true,
			readOnly : true ,
			allowInsertRow : true,
			allowRemoveRow : true,
			autoColumnSize : {samplingRatio : 30},
			mergeCells : false,
			wordWrap : true,
	};
	
	return importViewSpecSettings;
}

//테이블 타입 변경
function fn_changeImportView(type){

	var searchTp = $("input:radio[name=importView_srch1]:checked").val();

	importViewHot.updateSettings({readOnly:true, contextMenu : false});
	$("#btnImportViewSave").hide();
	$("#impExcel").show();
	$("#docBtn").children().show();
	fn_changeImportViewType(searchTp);
};

//검색구분 변경
function fn_changeImportViewType(type){
	let impViewCol = new fn_impViewTableCol();
	let impViewHeader = new fn_impViewTableHeader();
	let impViewHidden = new fn_impViewTableHidden();
	
	let impViewLanCol = new fn_impViewLanTableCol();
	let impViewLanHeader = new fn_impViewLanTableHeader();
	let impViewLanHidden = new fn_impViewLanTableHidden();
	
	let impViewSpecCol = new fn_impViewSpecTableCol();
	let impViewSpecHeader = new fn_impViewSpecTableHeader();
	let impViewSpecHidden = new fn_impViewSpecTableHidden();
	
	var col, header, hidden, col2, header2, hidden2, col3, header3, hidden3 ;

	col = impViewCol.impViewCol;
	header = impViewHeader.impViewHeader;
	hidden = impViewHidden.impViewHidden;
	
	col2 = impViewLanCol.impViewLanCol;
	header2 = impViewLanHeader.impViewLanHeader;
	hidden2 = impViewLanHidden.impViewLanHidden;
	
	col3 = impViewSpecCol.impViewSpecCol;
	header3 = impViewSpecHeader.impViewSpecHeader;
	hidden3 = impViewSpecHidden.impViewSpecHidden;
	
	importViewHot.updateSettings(fn_handsonGridViewOption(col, header, hidden));
	importViewLanHot.updateSettings(fn_handsonGridLanOption(col2, header2, hidden2));
	importViewSpecHot.updateSettings(fn_handsonGridSpecOption(col3, header3, hidden3));
	fn_searchImportView();
};


function fn_impViewFileList(row, col){

	var data = importViewHot.getSourceDataAtRow(row);
	console.log(data);
	$("#impViewFileListPopUp").modal("show");
	
	var rptNoTitle = "신고번호: " + data.rptNo;
    
    var uploadImpViewFileListTitle = document.querySelector('.modal-content .impModal-title span');
	uploadImpViewFileListTitle.textContent = rptNoTitle;
	
    var sData = fn_rptNoForPopup(data);
    fn_searchImpViewFilesPopup(sData);
};

function fn_rptNoForPopup(selectedRow){
	var sData = {};

	sData["srch1"] = selectedRow["rptNo"].replace(/-/g, '');
	sData["srch2"] = selectedRow["name"];
	sData["srch3"] = selectedRow["orgFileName"];
	return sData;
}


function fn_searchImpViewFilesPopup(data){
	
		fn_loading(true);
	
    	$.ajax({
		type : "POST",
		url : "/import/selectImpViewFilesList.do",
		data : data,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : 'json',
		async: false,
        success : function(data) {
        	impViewListHot.loadData([]);
        	impViewListHot.loadData(data.impViewList);
			setTimeout(function() {impViewListHot.render()}, 200);
			fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("에러 발생");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
}

function fn_handsonGridImpViewListPopupOption() {
	impViewListPopupSettings = {
        columns: [
        	{ data :'checkBox', type :'text', className :"htCenter", width: 30, type:'checkbox', checkedTemplate:'yes', uncheckedTemplate:'no', readOnly:false },
        	{ data : 'rptNo', type: 'text', className: "htCenter", readOnly: true, 
        		renderer: function(instance, td, row, col, prop, value, cellProperties) {
                value = value.replace(/^(\d{5})(\d{2})(\d{6})(\w)$/, '$1-$2-$3$4');
                Handsontable.renderers.TextRenderer.apply(this, arguments);
                }
        	  },
            {
                data: 'docuType',
                type: 'text',
                className: "htCenter",
                readOnly: true, width: 50,
                renderer: function (instance, td, row, col, prop, value, cellProperties) {
                	if (value === 'CI') {
                        td.innerHTML = '<div style="text-align: center;">Invoice</div>';
                    } else if (value === 'PL') {
                        td.innerHTML = '<div style="text-align: center;">Packing List</div>';
                    } else if (value === 'DC') {
                        td.innerHTML = '<div style="text-align: center;">신고필증</div>';
                    } else if (value === 'CB') {
                        td.innerHTML = '<div style="text-align: center;">통합</div>';
                    } else if (value === 'UC') {
                        td.innerHTML = '<div style="text-align: center;">정정 통합</div>';
                    } else if (value === 'CO') {
                        td.innerHTML = '<div style="text-align: center;">원산지증명서</div>';
                    } else if (value === 'RQ') {
                        td.innerHTML = '<div style="text-align: center;">요건 서류</div>';
                    } else if (value === 'OT') {
                        td.innerHTML = '<div style="text-align: center;">기타</div>';
                    } else if (value === 'AC') {
                        td.innerHTML = '<div style="text-align: center;">정산서</div>';
                    } else {
                        td.innerHTML = '<div style="text-align: center;">B/L</div>';
                    }
                }
            },
            { data: 'docuOrgFile', type: 'text', className: "htCenter", readOnly: true },
            { data: 'docuFile', type: 'text', className: "htCenter", readOnly: true },
            { data: 'uploadDt', type: 'text', width : 50, className: "htCenter", readOnly: true },
            { data: 'docuPath', type: 'text', className: "htCenter", readOnly: true },
            { data: 'blno', type: 'text', className: "htCenter", readOnly: true }
        ],
        stretchH: 'all',
        width: '100%',
        autoWrapRow: true,
        height: 250,
        rowHeights: 25,
        rowHeaders: true,
        columnHeaderHeight: 25,
        colHeaders: ["", "신고번호", "파일 타입", "파일명", "", "업로드 일자", "파일 경로"],
        manualRowResize: true,
        manualColumnResize: true,
        manualRowMove: true,
        manualColumnMove: false,
        contextMenu: false,
        dropdownMenu: false,
        filters: true,
        readOnly: false,
        columnSorting: { indicator: true },
        autoColumnSize: { samplingRatio: 23 },
        mergeCells: false,
        allowInsertRow: false,
        hiddenColumns: { copyPasteEnabled: false, indicators: false, columns: [1,4,6,7]},
        afterGetColHeader: function(col, TH){
        	if(col == 0){
          	TH.innerHTML = "<input type='checkbox'  class='checker' id='id_impViewAllClick' onclick='fn_impViewAllClick();'>";
          }
        }
    };

    return impViewListPopupSettings;
}


function fn_impViewAllClick(){
	var check = "" ;
	var changeArr = [];
	if ( $("#id_impViewAllClick").prop("checked") == false) {
		check = "yes" ;
	} else {
		check = "no" ;
	}

	var data = impViewListHot.getData();

	for(var i=0; i<data.length; i++){
		changeArr.push([i,0,check])
	}
	impViewListHot.setDataAtCell(changeArr);
	if(check == "yes"){
		$("#id_impViewAllClick").prop("checked", true);
	} else {
		$("#id_impViewAllClick").prop("checked", false);
	}
}

$("#importViewTable .wtHolder").scroll(function(){
    var scrollTop = $("#impViewListPopupTable .wtHolder").scrollTop();
    var countPerPage = 50;
    var rowHeight = overHot.getRowHeight();
    var addCnt = 790;
});


$("#popOverTable .wtHolder").scroll(function(){
	fn_impViewFileList(row, col)
	var data = importViewHot.getSourceData();
	var scrollTop = $("#importViewTable .wtHolder").scrollTop();
	var countPerPage = 50;
	var rowHeight = filesHot.getRowHeight();
	var addCnt = 790;
	
});

function fn_impViewFileDown(){
    var data = impViewListHot.getSourceData();
    var selectedData = [];
    var rptNo = data[0].rptNo;
    var blNo = data[0].blno;
    var cnt = 0;
    
    for (var i = 0; i < data.length; i++) {
    	if (data[i].checkBox === "yes") { 
    		selectedData.push(data[i]);
    		cnt++;
    	}
    }
    
    if (cnt == 0){
    	alert("다운로드할 파일을 선택해 주세요.");
    	return;
    }
    if (cnt == 1) {
        $("#impDocuPath").val(selectedData[0].docuPath);
        $("#impDocuFile").val(selectedData[0].docuFile);
        $("#impDocuOrgFile").val(selectedData[0].docuOrgFile);
        document.impViewZipDownForm.action = "/base/impDownloadFile.do";
        document.impViewZipDownForm.submit();
    } else {
	    $.ajax({
	        type: "POST",
	        url: "/import/impViewZipCreate.do",
	        data: JSON.stringify(selectedData), 
	        contentType: 'application/json',
	        beforeSend: function(xhr) {
	            xhr.setRequestHeader("AJAX", "true");
	        },
	        success: function(response) {
	        	$("#impViewZipDown").val(blNo + "_" + rptNo);
	        	document.impViewZipDownForm.action = "/import/downloadImpViewFile.do";
	          	document.impViewZipDownForm.submit();
	        },
	        error: function(xhr, status, error) {
	            console.error("다운로드 실패:", error);
	        }
	    });
    }
};


function impViewFileListClose(){
	$("#impViewFileListPopUp").modal("hide");
}

function fn_importViewExcelDownload(){
	fn_loading(true);
	const hiddenIndices = [0,1,30,31,32];
	//엑셀옵션
	var exTitArr = [];
	var exTit = "";
	var exColArr = [];
	var exCol = "";
    var exTitDivArr = [];
    var exTitDiv = "";
	
	let impViewCol = new fn_impViewTableCol();
	let impViewHeader = new fn_impViewTableHeader();
	let impViewHidden = new fn_impViewTableHidden();
	
	
	let impViewLanCol = new fn_impViewLanTableCol();
	let impViewLanHeader = new fn_impViewLanTableHeader();
	
	let impViewSpecCol = new fn_impViewSpecTableCol();
	let impViewSpecHeader = new fn_impViewSpecTableHeader();
	
    exColArr.push(fn_getExcelCol(impViewCol.impViewCol.filter((item, index) => !hiddenIndices.includes(index))));
	exColArr.push(fn_getExcelCol(impViewLanCol.impViewLanCol));
	exColArr.push(fn_getExcelCol(impViewSpecCol.impViewSpecCol));
	
	exTitArr.push(fn_getExcelHead(impViewHeader.impViewHeader.filter((item, index) => !hiddenIndices.includes(index))));
	exTitArr.push(fn_getExcelHead(impViewLanHeader.impViewLanHeader));
	exTitArr.push(fn_getExcelHead(impViewSpecHeader.impViewSpecHeader));
	
 	exCol = exColArr.join("|||");
	exTit = exTitArr.join("||||");
	exTitDiv = "1|수입신고현황||2|수입신고란||3|수입신고규격";
		
   var parameters = {exCol : "", exTit: "", exTitDiv: "", exType: "", srch40: ""};
	
   // 검색옵션
   $.each(fn_setImportViewForm(), function(attrName, attrValue){
   	parameters[attrName] = attrValue;
   });
	
	parameters.exCol = exCol.replace(/ /g,"_");
	parameters.exTit = exTit.replace(/ /g,"_");
	parameters.exTitDiv = exTitDiv.replace(/ /g,"_");
	parameters.exType = "01";
	parameters.srch40 = "수입신고현황";
	
	$.ajax({
		 url: "/import/importDownloadExcel.do",
		 data: parameters,
		 type: 'POST',
		 cache: false,
		 xhrFields: {
			 responseType: "blob",
		 },
	    success: function(blob, status, xhr) {
	    	try {
				// check for a filename
				 var fileName = "";
				 var disposition = xhr.getResponseHeader("Content-Disposition");

			       if (disposition && disposition.indexOf("attachment") !== -1) {
			      	 var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
			           var matches = filenameRegex.exec(disposition);

			           if (matches != null && matches[1]) {
			               fileName = decodeURI(matches[1].replace(/['"]/g, ""));
			           }
			       }

			       // for IE
			       if (window.navigator && window.navigator.msSaveOrOpenBlob) {
			           window.navigator.msSaveOrOpenBlob(blob, fileName);
			       } else {
			           var URL = window.URL || window.webkitURL;
			           var downloadUrl = URL.createObjectURL(blob);

			           if (fileName) {
			               var a = document.createElement("a");

			               // for safari
			               if (a.download === undefined) {
			                   window.location.href = downloadUrl;
			               } else {
			                   a.href = downloadUrl;
			                   a.download = fileName;
			                   document.body.appendChild(a);
			                   a.click();
			               }
			           } else {
			               window.location.href = downloadUrl;
			           }
			       }
		        fn_loading(false);
			} catch (e) {
				console.log(e);
				fn_loading(false);
			};
	    },
	    error: function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	    	}
	    }
	});
	
}

function fn_getExcelCol(viewCol){
    return viewCol.map(item => item['data'] + '|' + item['className'] + '|' + item['width']).join("||");
}
 
function fn_getExcelHead(viewHead){
    var result = [];
    
    if(viewHead.length > 1 && typeof(viewHead[0][0]) == 'object') {
        for(var i=0; i < viewHead.length; i++) {
            if(i == viewHead.length -1){
                result.push(viewHead[i].join("|null||") + "|null");
            }else {
                result.push(viewHead[i].map(item => (item['label'] ? item['label'] : 'null') + '|' + (item['colspan'] ? item['colspan'] : 'null')).join("||"));
            }
        }
        return result.join("|||");
    }else{
        return viewHead.join("|null||") + "|null";
    };
}


function getCurrentTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    return `${hours}:${minutes}`;
}

function fn_shipReqBtn(row, col) {
	document.getElementById('addShipInfo2').style.display = 'block';
	rowCount = 0;
	const rows = document.querySelectorAll('#newRowId');

    rows.forEach(row => {
        row.remove();
    });
	
	var rowData = importViewHot.getSourceDataAtRow(row);
	var totWt = rowData.totWt;
	var blNo = rowData.blno;
	var rptNo = rowData.rptNo.replace(/-/g, '');
	var nabFirm = rowData.nabFirm;
	var nabSdno = rowData.nabSdno;
	var addr = rowData.addr
	var manager = rowData.managerNm;
	var billEmail = rowData.billEmail;
	const ctDivHtml = document.getElementById('ctDiv');
	ctDivHtml.innerHTML = "";
	ctDivHtml.innerHTML = `<input id="ctNo0" type="text" class="border border-gray-300 rounded-lg text-base p-1 pr-8" style="width: 210px; text-align: center;">
						   <input id="orderId0" type="hidden">
						   <i class="fas fa-search search-icon absolute right-2 cursor-pointer" style="cursor: pointer; margin-left: 10px;" onclick="ctNoList('${rptNo}')"></i>`;
	
	$("#cmpnyNm").val(nabFirm);
	$("#corpNo").val(nabSdno);
	$("#fromAddr").val(addr);
	$("#goodsWeights").val(totWt);
	
	$("#shipReqViewListPopUp").modal("show");
	var blNoTitle = "B/L 번호: " + blNo;
	
    var shipReqModalTitle = document.querySelector('.modal-content .shipReqModal-title span');
    shipReqModalTitle.textContent = blNoTitle;
    
    var date = new Date();
	var today = new Date().toISOString().substring(0,10);
	  
	$("#fromDt").val(today);
	$("#toDt").val(today);
	$("#fromTime").val(getCurrentTime())
	$("#toTime0").val(getCurrentTime())
	$("#fromSpecifics0").val("");
	$("#ctNo0").val("");
 	$("#orderId0").val("");
	$("#goodsWeightss").val("");
	$("#mixYn").val("Y");
	$("#fromReq").val("");
	$("#toStaff").val("");
	$("#toPhnNo").val("");
	$("#toAddr").val("");
	$("#managerNm").val(manager);
	$("#billEmail").val(billEmail);
	$('#taxInvoice').prop('checked', false);
	
	fn_loadAddrDefault();

	var shipReqModalTime = document.querySelector('.modal-content .shipReqModal-time span');
	shipReqModalTime.textContent = today + " " + getCurrentTime();
	
	var sData = {};
	sData["srch1"] = rptNo;
	sData["srch2"] = blNo;
		$.ajax({
			type : "POST",
			url : "/shipping/selectShippingReqList.do",
			data : sData,
			beforeSend : function(xmlHttpRequest){
				xmlHttpRequest.setRequestHeader("AJAX", "true");
			},
			dataType: "json",
			success: function(data) { // 잔여 운송 O
				console.log(data.resultList1);
			    if (data.resultList1.length != 0) {
			        document.getElementById('addShipInfo2').style.display = 'none';

			        $("#fromDt").val(data.resultList1[0].fromDt.replace(/^(\d{4})(\d{2})(\d{2})$/, '$1-$2-$3'));
			        $("#fromTime").val(data.resultList1[0].fromTime);
			        if (data.resultList1[0].fromTime === '즉시') {
			            $("#fromTimeNow").prop("checked", true);
			        }
			        $("#fromAddr").val(data.resultList1[0].fromAddr);
			        $("#toDt").val(data.resultList1[0].toDt.replace(/^(\d{4})(\d{2})(\d{2})$/, '$1-$2-$3'));
			        $("#goodsWeightss").val(data.resultList1[0].goodsWeights);
			        $("#mixYn").val(data.resultList1[0].mixYn);
			        $("#fromReq").val(data.resultList1[0].fromReq);
			        $("#toStaff").val(data.resultList1[0].toStaff);
			        $("#toPhnNo").val(data.resultList1[0].toPhnNo.replace(/^(\d{3})(\d{4})(\d{4})$/, '$1-$2-$3'));
			        $("#toAddr").val(data.resultList1[0].toAddr);
			        $("#cmpnyNm").val(data.resultList1[0].cmpnyNm);
			        $("#corpNo").val(data.resultList1[0].corpNo);
			        $("#managerNm").val(data.resultList1[0].managerNm);
			        $("#billEmail").val(data.resultList1[0].billEmail);
			        
			        for (var i = 0; i < data.resultList1.length; i++) {
			            if (i >= 1) {
			                addShipInfo2();
			            }
			            $("#fromSpecifics" + i).val(data.resultList1[i].fromSpecifics);
			            $("#ctNo" + i).val(data.resultList1[i].ctNo).attr("readonly", true);
			            $("#orderId" + i).val(data.resultList1[i].orderId);
			            $("#toTime" + i).val(data.resultList1[i].toTime);
			        }

			        const buttonDiv = document.getElementById('buttonDiv');
			        buttonDiv.innerHTML = `
			        <div id="fileList" class="border border-primary-500  
					     		font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm" style="width:415px; height:52px; overflow: auto;">
				    		</div>
				       		<label for="fileName" class="custom-file-upload text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
									    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5 cursor-pointer" style="white-space: nowrap; height: 30px;">
								<i class="fa-duotone fa-file-circle-check"></i>
								    파일첨부
							<input type="file" id="fileName" multiple name="fileName" style="display: none;">
							</label>
			            <button
			                type="button"
			                id="updateReqBtn"
			                onclick='fn_orderMod(${JSON.stringify(data.resultList1)})'
			                class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
			                focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5" style="white-space: nowrap; height: 30px;">
			                <i class="fa-regular fa-floppy-disk"></i>
			                	수정요청
			            </button>
			            <button
			                type="button"
			                id="cancelReqBtn"
			                onclick="fn_orderCancel()"
			                class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
			                focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5" style="white-space: nowrap; height: 30px;">
			                <i class="fa-regular fa-floppy-disk"></i>
			        			취소요청
			            </button>
			            <button
			                type="button"
			                onclick="fn_addShipReqBtn(${row})"
			                class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
			                focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-0.5 focus:outline-none duration-300 text-sm mt-5" style="white-space: nowrap; height: 30px;">
			                <i class="fa-duotone fa-cart-flatbed-boxes"></i>
			                	추가요청
			            </button>
			            <form name="shipFileDownForm" method="post" action="/shipping/insertShippingReqList.do">
			                <input type="hidden" name="shipFileDown" id="shipFileDown"/>
			            </form>`;

			        /*if (data.resultList1[0].contCnt < data.resultList1[0].ctNoCnt) {
			            $('#updateReqBtn').css('display', 'none');
			            $('#cancelReqBtn').css('display', 'none');
			        }*/
			        $('.removeBtn').css('visibility', 'hidden');
			        setUpFileInputListener();
			        
			    } else if (data.resultList1.length === 0 && data.resultList2.length !== 0 ){ // 운송 요청 건, 임시저장 건
					console.log(data.resultList2[0])
					
					$("#fromDt").val(data.resultList2[0].fromDt.replace(/^(\d{4})(\d{2})(\d{2})$/, '$1-$2-$3'));
					$("#fromTime").val(data.resultList2[0].fromTime);
					$("#fromAddr").val(data.resultList2[0].fromAddr);
					$("#toDt").val(data.resultList2[0].toDt.replace(/^(\d{4})(\d{2})(\d{2})$/, '$1-$2-$3'));
					$("#goodsWeights").val(data.resultList2[0].goodsWeights);
					$("#mixYn").val(data.resultList2[0].mixYn);
					$("#fromReq").val(data.resultList2[0].fromReq);
			    	$("#toStaff").val(data.resultList2[0].toStaff);
			    	$("#toPhnNo").val(data.resultList2[0].toPhnNo.replace(/^(\d{3})(\d{4})(\d{4})$/, '$1-$2-$3'));
			    	$("#toAddr").val(data.resultList2[0].toAddr);
			    	$("#cmpnyNm").val(data.resultList2[0].cmpnyNm);
			    	$("#corpNo").val(data.resultList2[0].corpNo);
			    	$("#managerNm").val(data.resultList2[0].managerNm);
			    	$("#billEmail").val(data.resultList2[0].billEmail);
					
					for (var i = 0; i < data.resultList2.length; i++) {
			              if(i >= 1){
			            	  addShipInfo2();
			           	  }
			              $("#fromSpecifics"+i).val(data.resultList2[i].fromSpecifics);
			           	  $("#ctNo"+i).val(data.resultList2[i].ctNo);
			           	  $("#toTime"+i).val(data.resultList2[i].toTime);
			           }
					
					
					const buttonDiv = document.getElementById('buttonDiv');
					buttonDiv.innerHTML = "";
					buttonDiv.innerHTML = `
							<div id="fileList" class="border border-primary-500  
					     		font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm" style="width:415px; height:52px; overflow: auto;">
				    		</div>
				       		<label for="fileName" class="custom-file-upload text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
									    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5 cursor-pointer">
								<i class="fa-duotone fa-file-circle-check"></i>
								    파일첨부
							<input type="file" id="fileName" multiple name="fileName" style="display: none;">
							</label>
		      				<button
							    type="button"
							    onclick="fn_addrTempSave('${rptNo}', '${blNo}')"
							    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
							    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
							    <i class="fa-regular fa-floppy-disk"></i>
							   	    임시저장
							</button>
							<button
							    type="button"
							    onclick="fn_addrReq('${rptNo}', '${blNo}')"
							    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
							    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
							    <i class="fa-duotone fa-cart-flatbed-boxes"></i>
							   	     운송요청
							</button>
							<form name="shipFileDownForm" method="post"
								  action="/shipping/insertShippingReqList.do">
								<input type="hidden" name="shipFileDown" id="shipFileDown"/>
						    </form>`;
					setUpFileInputListener();
					
				} else {
					const buttonDiv = document.getElementById('buttonDiv');
					buttonDiv.innerHTML = "";
					buttonDiv.innerHTML = `
							<div id="fileList" class="border border-primary-500  
					     		font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm" style="width:415px; height:52px; overflow: auto;">
					    
				    		</div>
				       		<label for="fileName" class="custom-file-upload text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
									    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5 cursor-pointer">
								       <i class="fa-duotone fa-file-circle-check"></i>
										    파일첨부
							<input type="file" id="fileName" multiple name="fileName" style="display: none;">
							</label>
		      				<button
							    type="button"
							    onclick="fn_addrTempSave('${rptNo}', '${blNo}')"
							    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
							    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
							    <i class="fa-regular fa-floppy-disk"></i>
							   	    임시저장
							</button>
							<button
							    type="button"
							    onclick="fn_addrReq('${rptNo}', '${blNo}')"
							    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
							    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
							    <i class="fa-duotone fa-cart-flatbed-boxes"></i>
							   	    운송요청
							</button>
							<form name="shipFileDownForm" method="post"
								  action="/shipping/insertShippingReqList.do">
								<input type="hidden" name="shipFileDown" id="shipFileDown"/>
						    </form>`;
					
					 setUpFileInputListener();
				}
				
			},
			error : function(e, textStatus, errorThrown) {
				if(e.status == 400){
					alert("Your request is up. Please log back in if you wish continue");
					location.href = document.referrer;
				} else {
					console.log(errorThrown);
					alert(msgSearchError);
				}
			}
		});
		
		setUpInputEnterListener();
}

function setUpInputEnterListener(){
  document.getElementById('fromDt').addEventListener('change', function() {
      document.getElementById('fromTime').focus();
  });

  document.querySelectorAll('input').forEach(function(input, index, inputs) {
      input.addEventListener('keydown', function(event) {
          if (event.key === 'Enter') {
              event.preventDefault();

              if (input.id === 'fromDt' || input.id === 'toDt') {
                  $('.calendar-popup-container').removeClass('calendar-popup-container_active');
                  input.blur(); // 포커스 해제
              }
              let nextInput = inputs[index + 1];
              while (nextInput && (nextInput.type === "hidden" || nextInput.disabled || nextInput.style.display === "none")) {
                  nextInput = inputs[++index + 1];
              }
              if (nextInput) {
                  nextInput.focus();
              }
          }
      });
  });
}

function setUpFileInputListener(){
	const fileInput = document.getElementById('fileName');
    const fileListDiv = document.getElementById('fileList');
    filesList = [];

    fileInput.addEventListener('change', function() {
        const newFiles = Array.from(this.files);

        // 선택한 파일들을 filesList에 추가
        filesList = filesList.concat(newFiles);

        // 파일 목록을 업데이트하여 표시
        updateFileList();
    });

    // 파일 목록을 업데이트하여 표시하는 함수
    function updateFileList() {
        fileListDiv.innerHTML = '';

        filesList.forEach((file, index) => {
            const fileDiv = document.createElement('div');
            fileDiv.classList.add('file-item', 'flex', 'justify-between', 'items-center', 'mb-2');

            const fileName = document.createElement('span');
            fileName.textContent = file.name;
            fileName.classList.add('truncate-text');
            fileDiv.appendChild(fileName);

            const removeButton = document.createElement('button');
            removeButton.textContent = 'X';
            removeButton.classList.add('ml-2', 'bg-red-500', 'text-white', 'px-2', 'rounded');
            removeButton.onclick = function() {
                removeFile(index);
            };
            fileDiv.appendChild(removeButton);

            fileListDiv.appendChild(fileDiv);
        });
    }

    // 파일을 filesList에서 제거하는 함수
    function removeFile(index) {
        filesList.splice(index, 1);
        updateFileList();
    }
};

function shipReqModalClose(){
	$("#shipReqViewListPopUp").modal("hide");
	fn_clearShipReqBtn();
}


var rowCount = 0;
function addShipInfo(ctNoList) {
    if (ctNoList.length > 0 && rowCount === 0) {
        const ctNoInput = document.querySelector(`#ctNo0`);
        if (ctNoInput) {
            ctNoInput.value = ctNoList[0];
        }
    }

    for (var i = 1; i < ctNoList.length; i++) {
        if (rowCount < i) {
            rowCount++; 
            const newRow = document.createElement('div');
            newRow.setAttribute('id', 'newRowId');
            newRow.classList.add('flex', 'col-span-8', 'items-center', 'justify-between');
            newRow.innerHTML = `
                <div id="transInfo-container" class="container mx-auto p-3 border border-gray-300" style="width: 100%; height: 130px;">
                    <div class="grid grid-cols-8 gap-1">
                        <div class="flex items-center justify-end font-bold col-span-8 text-base">
                            <button type="button"
                                onclick="removeTransInfo(this)"
                                class="removeBtn p-1.5 text-white flex items-center justify-center bg-rose-600 rounded-lg hover:opacity-50 duration-200">
                                <i class="fa-solid fa-minus"></i>
                            </button>
                        </div>
                        <div class="flex col-span-8 items-center justify-between">
                            <div class="flex items-center justify-end w-full">
                                <label class="font-medium text-gray-900 text-base mr-2 w-21">* 컨테이너 번호</label>
                                <div class="relative flex items-center" style="flex: 1;">
                                    <input id="ctNo${rowCount}" type="text" class="border border-gray-300 rounded-lg text-base p-1 pr-8" style="width: 218px; text-align: center;" readonly>
                                    <input id="orderId${rowCount}" type="hidden">
                                    <i class="fas fa-search search-icon absolute right-2 cursor-pointer" style="cursor: pointer; margin-left: 10px;" onclick="ctNoList()"></i>
                                </div>
                            </div>
                            <div class="flex items-center">
                                <label class="font-medium text-gray-900 text-base mr-2 w-20">특이사항</label>
                                <input id="fromSpecifics${rowCount}" type="text" class="border border-gray-300 rounded-lg text-base p-1" style="width: 220px;">
                            </div>
                        </div>
                        <div class="flex col-span-8 items-center justify-between">
                            <div class="flex items-center">
                                <label class="font-medium text-gray-900 text-base mr-2 w-20">* 도착시간</label>&nbsp;&nbsp;
                                <input id="toTime${rowCount}" type="time" style="width: 220px; font-size: 14px;"
                                    class="font-medium bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-500 focus:border-primary-500 block ps-10 py-1 px-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400">
                            </div>
                        </div>
                    </div>
                </div>
            `;

            const container = document.querySelector('#addContainer');
            container.appendChild(newRow);

            var today = new Date().toISOString().substring(0, 10);

            const ctNoInput = document.querySelector(`#ctNo${rowCount}`);
            ctNoInput.value = ctNoList[i]; 

            $("#fromDt" + rowCount).val(today);
            $("#toDt" + rowCount).val(today);
            $("#fromTime" + rowCount).val(getCurrentTime());
            $("#toTime" + rowCount).val(getCurrentTime());
        }
    }
    
    setUpInputEnterListener();
}

function addShipInfo2() {
	rowCount ++;
    const newRow = document.createElement('div');
    newRow.setAttribute('id', 'newRowId');
    newRow.classList.add('flex', 'col-span-8', 'items-center', 'justify-between');
    newRow.innerHTML = `
    	<div id="transInfo-container" class="container mx-auto p-3 border border-gray-300" style="width: 100%; height: 130px;">
		    <div class="grid grid-cols-8 gap-1">
		        <div class="flex items-center justify-end font-bold col-span-8 text-base">
		            <button type="button"
		                onclick="removeTransInfo(this)"
		                class="removeBtn p-1.5 text-white flex items-center justify-center bg-rose-600 rounded-lg hover:opacity-50 duration-200">
		                <i class="fa-solid fa-minus"></i>
		            </button>
		        </div>
		        <div class="flex col-span-8 items-center justify-between">
		            <div class="flex items-center">
		                <label class="font-medium text-gray-900 text-base mr-2 w-21">* 컨테이너 번호</label>
		                <input id="ctNo${rowCount}" type="text" class="border border-gray-300 rounded-lg text-base p-1" style="width: 220px;  text-align: center;">
		                <input id="orderId${rowCount}" type="hidden">
		            </div>
		            <div class="flex items-center">
		                <label class="font-medium text-gray-900 text-base mr-2 w-20">특이사항</label>
		                <input id="fromSpecifics${rowCount}" type="text" class="border border-gray-300 rounded-lg text-base p-1" style="width: 220px;">
		            </div>
		        </div>
		        <div class="flex col-span-8 items-center justify-between">
		            <div class="flex items-center">
		                <label class="font-medium text-gray-900 text-base mr-2 w-20">* 도착시간</label>&nbsp;&nbsp;
		                <input id="toTime${rowCount}" type="time" style="width: 220px; font-size: 14px;"
		                    class="font-medium bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-500 focus:border-primary-500 block ps-10 py-1 px-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400">
		            </div>
		        </div>
		    </div>
		</div>	
    `;

    const container = document.querySelector('#addContainer');
    container.appendChild(newRow);
    
    var date = new Date();
    var today = new Date().toISOString().substring(0,10);
  
    $("#fromDt" + rowCount).val(today);
  	$("#toDt" + rowCount).val(today);
  	$("#fromTime" + rowCount).val(getCurrentTime());
  	$("#toTime" + rowCount).val(getCurrentTime());

    setUpInputEnterListener();
}

function removeTransInfo(button) {
	var container = button.closest('#newRowId');
	container.remove();
}


function fn_loadAddrList() {
	$("#loadAddrListPopUp").modal("show");
	var sData = {};
	fn_loading(true);

	$.ajax({
		type : "POST",
		url : "/shipping/selectShippingDstnList.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : 'json',
		async: false,
	    success : function(data) {
	    	loadDstnListHot.loadData([]);
	    	loadDstnListHot.loadData(data.resultList);
			setTimeout(function() {loadDstnListHot.render()}, 10);
			fn_loading(false);
	    },
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("에러 발생");
		    	location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
}

function fn_loadAddrDefault() {
	var sData = {};
	$.ajax({
		type : "POST",
		url : "/shipping/selectShippingDstnList.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : 'json',
		async: false,
	    success : function(data) {
	    	if (data.resultList.length > 0){
	    	document.getElementById('toStaff').value = data.resultList[0].addrNm;
	        var formattedPhoneNo = data.resultList[0].phnNo.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
	        document.getElementById('toPhnNo').value = formattedPhoneNo;
	        var address = data.resultList[0].baseAddr + " " + data.resultList[0].dtlsAddr;
	        document.getElementById('toAddr').value = address;
	    	}
	    },
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("에러 발생");
		    	location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
}


function fn_handsonGridLoadDstnListPopupOption() {
	loadDstnPopupSettings = {
        columns: [
            { data: 'checkBox', type: 'checkbox', className: "htCenter", checkedTemplate: 'yes', uncheckedTemplate: 'no', readOnly: false },
            { data: 'addrNm', type: 'text', className: "htCenter", readOnly: true},
            { data: 'phnNo', 
                type: 'text', 
                className: "htCenter", 
                readOnly: true,
                renderer: function(instance, td, row, col, prop, value, cellProperties) {
                    if (value) {
                        value = value.replace(/^(\d{3})(\d{4})(\d{4})$/, '$1-$2-$3');
                        td.innerHTML = value;
                    }
                    Handsontable.renderers.TextRenderer.apply(this, arguments);
                }
            },
            { data: 'baseAddr', type: 'text', className: "htCenter", readOnly: true },
            { data: 'dtlsAddr', type: 'text', className: "htCenter", readOnly: true },
        ],
        stretchH: 'all',
        width: '100%',
        autoWrapRow: true,
        height: 250,
        rowHeights: 25,
        rowHeaders: true,
        columnHeaderHeight: 25,
        colHeaders: ["", "수령자", "연락처", "주소", "상세주소"],
        colWidths: [30, 60, 90, 150, 150],
        manualRowResize: true,
        manualColumnResize: true,
        manualRowMove: true,
        manualColumnMove: false,
        contextMenu: false,
        dropdownMenu: false,
        filters: true,
        readOnly: false,
        columnSorting: { indicator: true },
        autoColumnSize: { samplingRatio: 23 },
        mergeCells: false,
        allowInsertRow: false,
    };
    return loadDstnPopupSettings;
}


document.getElementById('toPhnNo').addEventListener('input', function (event) {
    let input = event.target;
    let value = input.value.replace(/\D/g, '');
    
    if (value.length <= 3) {
        input.value = value;
    } else if (value.length <= 7) {
        input.value = value.slice(0, 3) + '-' + value.slice(3);
    } else {
        input.value = value.slice(0, 3) + '-' + value.slice(3, 7) + '-' + value.slice(7, 11);
    }
});


function loadAddrListClose(){
	$("#loadAddrListPopUp").modal("hide");
}
document.addEventListener('keydown', function(event) {
    if (event.key === "Escape") {
        loadAddrListClose();
    }
});

function fn_regist() {
	$("#addrRegistPopUp").modal("show");
}

function fn_addrDel() {
	var rowData = loadDstnListHot.getSourceData();
	let selected = [];
    var cnt = 0;
    for (let i = 0; i < rowData.length; i++) {
        if (rowData[i].checkBox === "yes") {
        	selected.push(rowData[i]);
        	cnt++;
        }
    }
    if (cnt == 0){
    	alert("도착지를 선택해주세요.");
    	return;
    }
    if (confirm("선택하신 도착지를 삭제하시겠습니까?")) {
        $.ajax({
        	type: "POST",
            url: "/shipping/deleteAddr.do",
            data: JSON.stringify(selected), 
            contentType: 'application/json', 
            beforeSend: function(xhr) {
                xhr.setRequestHeader("AJAX", "true");
            },
            success: function(data) {
            	console.log(selected);
            	for (let i = selected.length - 1; i >= 0; i--) {
                    loadDstnListHot.alter('remove_row', selected[i]);
                }
                fn_loadAddrList(data);
                data = [];
            },
            error: function(xhr, textStatus, errorThrown) {
                if (xhr.status == 400) {
                    alert("에러 발생");
                    location.href = document.referrer;
                } else {
                    console.log(errorThrown);
                    alert("오류가 발생했습니다. 잠시 후 다시 시도해주세요.");
                }
            }
        });
    }
}

function addrRegistPopupClose(){
	$("#addrRegistPopUp").modal("hide");
	document.getElementById('addrNm').value = '';

    const contactInputs = document.querySelectorAll('input[type="text"].w-24');
    contactInputs.forEach(input => input.value = '');

    document.getElementById('addrNm').value = '';
    document.getElementById('zipCode').value = '';
    document.getElementById('toAddr').value = '';
}

function fn_addrRegist() {
	var addrNm = document.getElementById('addrNm').value;
	var phnNo1 = document.getElementById('phnNo1').value;
	var phnNo2 = document.getElementById('phnNo2').value;
	var phnNo3 = document.getElementById('phnNo3').value;
    var phnNo = phnNo1 + phnNo2 + phnNo3;
    var zipCode = document.getElementById('zipCode').value;
    var baseAddr = document.getElementById('baseAddr').value;
    var dtlsAddr = document.getElementById('dtlsAddr').value;
    
    if (!addrNm) {
        alert("수령자를 입력하세요.");
        document.getElementById('addrNm').focus();
        return;
    }
    if (!phnNo1 || !phnNo2 || !phnNo3) {
        alert("연락처를 입력하세요.");
        const phnNoElement = !phnNo1 ? 'phnNo1' : (!phnNo2 ? 'phnNo2' : 'phnNo3');
        document.getElementById(phnNoElement).focus();
        return;
    }
    if (phnNo2.length !== 4 || phnNo3.length !== 4) {
        alert("연락처 뒷자리는 4자리 이상이어야 합니다.");
        if (phnNo2.length !== 4) {
            document.getElementById('phnNo2').focus();
        } else {
            document.getElementById('phnNo3').focus();
        }
        return;
    }
    if (!zipCode) {
        alert("주소를 입력하세요.");
        document.getElementById('zipCode').focus();
        return;
    }
    if (!baseAddr) {
        alert("주소를 입력하세요.");
        document.getElementById('baseAddr').focus();
        return;
    }
    if (!dtlsAddr) {
    	if(!confirm("상세주소를 입력하지 않았습니다. 그대로 저장하시겠습니까?")) {
            document.getElementById('dtlsAddr').focus();
            return;
        }
    }
    
    var aData = {};
    aData["addrNm"] = addrNm;
    aData["phnNo"] = phnNo;
    aData["zipCode"] = zipCode;
    aData["baseAddr"] = baseAddr;
    aData["dtlsAddr"] = dtlsAddr;
    
	$.ajax({
		type : "POST",
		url : "/shipping/insertAddr.do",
		data : aData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : 'json',
		async: false,
	    success : function(data) {
	    	$("#addrRegistPopUp").modal("hide");
	    	var rowData = loadDstnListHot.getSourceData();
	    	let selected = [];
	        for (let i = 0; i < rowData.length; i++) {
	        	loadDstnListHot.alter('insert_row_below', i, 1);
	        }
	    	fn_loadAddrList(data);
			data = [];
			
	    	document.getElementById('addrNm').value = '';

	        const contactInputs = document.querySelectorAll('input[type="text"].w-24');
	        contactInputs.forEach(input => input.value = '');

	        document.getElementById('addrNm').value = '';
	        document.getElementById('zipCode').value = '';
	        document.getElementById('baseAddr').value = '';
	        document.getElementById('dtlsAddr').value = '';
	    },
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("에러 발생");
		    	location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
}


function fn_searchAddr() {
	new daum.Postcode({
		oncomplete: function(data) {
			var addr = ''; // 주소 변수
	
			if (data.userSelectedType === 'R') { // 도로명 주소
				addr = data.roadAddress;
			} else { // 지번 주소
				addr = data.jibunAddress;
			}
			document.getElementById('zipCode').value = data.zonecode;
			document.getElementById("baseAddr").value = addr;
			document.getElementById("dtlsAddr").focus();
	    }
    }).open();
}


function fn_saveAddr() {
	var rowData = loadDstnListHot.getSourceData();
	let selected = [];
    var cnt = 0;
    for (let i = 0; i < rowData.length; i++) {
        if (rowData[i].checkBox === "yes") {
        	selected.push(rowData[i]);
        	cnt++;
        	console.log(selected);
        }
    }
    if (cnt > 1){
    	alert("도착지는 한 개만 선택 가능합니다.");
    	return;
    }
    if (cnt == 0){
    	alert("저장할 도착지를 선택해주세요.");
    	return;
    }
    
    document.getElementById('toStaff').value = selected[0].addrNm;
    var formattedPhoneNo = selected[0].phnNo.replace(/(\d{3})(\d{4})(\d{4})/, '$1-$2-$3');
    document.getElementById('toPhnNo').value = formattedPhoneNo;
    var address = selected[0].baseAddr + " " + selected[0].dtlsAddr;
    document.getElementById('toAddr').value = address;
    $("#loadAddrListPopUp").modal("hide");
    
}

function fn_addrTempSave(rptNo, blNo) {
	var basicData = [];

	var toStaff = document.getElementById('toStaff').value;
	var toPhnNo = document.getElementById('toPhnNo').value.replace(/-/g, '');
	var toAddr = document.getElementById('toAddr').value;
	var cmpnyNm = document.getElementById('cmpnyNm').value;
	var corpNo = document.getElementById('corpNo').value;
	var managerNm = document.getElementById('managerNm').value;
	var fromDt = document.getElementById('fromDt').value.replace(/-/g, '');
	var fromAddr = document.getElementById('fromAddr').value;
	var toDt = document.getElementById('toDt').value.replace(/-/g, '');
	var billEmail = document.getElementById('billEmail').value;
	var goodsWeights = document.getElementById('goodsWeights').value;
	var mixYn = document.getElementById('mixYn').value;
	var fromReq = document.getElementById('fromReq').value;
	var fromTime = document.getElementById('fromTime').value;
	if (fromTime.disabled) {
		fromTime = '즉시';
	} else {
		fromTime = fromTime.value;
	}
	
	var ctRows = document.querySelectorAll('[id^="ctNo"]');
    var orderSeq = 1; 
    for (var i = 0; i < ctRows.length; i++) {
        var row = ctRows[i];
        var seq = row.id.replace('ctNo', '');
        var ctNo = document.getElementById('ctNo' + seq).value;
        var fromSpecifics = document.getElementById('fromSpecifics' + seq).value;
        var toTime = document.getElementById('toTime' + seq).value;
        
        basicData.push({
        	orderSeq, blNo, rptNo, ctNo, fromSpecifics, fromDt, fromTime, fromAddr, 
	    	toDt, toTime, goodsWeights, mixYn, fromReq,
	    	toStaff, toPhnNo, toAddr, cmpnyNm, corpNo, managerNm, billEmail
        })
        orderSeq++;
    }
    
	
	$.ajax({
	   type: "POST",
	   url: "/shipping/insertShippingTempList.do",
	   data: JSON.stringify(basicData),
	   beforeSend: function(xmlHttpRequest){
	       xmlHttpRequest.setRequestHeader("AJAX", "true");
	   },
	   contentType: "application/json; charset=utf-8",
	   success: function(data) {
	       if(data === "success") {
	           alert("잔여 여부 및 파일은 임시저장되지 않습니다.\n임시저장이 완료되었습니다.");
	       }
	    },
	    error: function(e, textStatus, errorThrown) {
	       if(e.status == 400){
	           alert("Your request is up. Please log back in if you wish continue");
	           location.href = document.referrer;
	       } else {
	           console.log(errorThrown);
	           alert(msgSaveError);
	       }
	    }
	});
}

function fn_clearShipReqBtn() {
    var today = new Date().toISOString().substring(0, 10);

    for (var i = 1; i < rowCount + 1; i++) {
        var container = document.querySelector(`#ctNo${i}`).closest('#transInfo-container');
        if (container) {
            container.remove();
        }
    }
    
    rowCount = 0;

    $("#fromDt").val(today); 
    $("#toDt").val(today);
    $("#fromTime").val(getCurrentTime()); 
    $("#toTime0").val(getCurrentTime());

    $("#ctNo0").val("");
    $("#fromSpecifics0").val("");
    $("#fromAddr").val("");
    $("#goodsWeights").val("");
    $("#mixYn").val("Y");
    $("#fromReq").val("");
    $("#toStaff").val("");
    $("#toPhnNo").val("");
    $("#toAddr").val("");
    $("#cmpnyNm").val("");
    $("#corpNo").val("");
    $("#managerNm").val("");
    $("#billEmail").val("");
    $("#shipperManager").val("");
    $("#shipperMail").val("");
    $('#taxInvoice').prop('checked', false);
}


function makeHyphen() {
    const timeInput = document.getElementById('fromTime');
    const checkbox = document.getElementById('fromTimeNow');

    if (checkbox.checked) {
        timeInput.value = ''; 
        timeInput.disabled = true;
    } else {
        const now = new Date();
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        timeInput.value = `${hours}:${minutes}`;
        timeInput.disabled = false;
    }
}

function ctNoList(rptNo) {
	$("#ctListPopUp").modal("show");
	var rptNoTitle = "신고번호: " + rptNo;
    var listTitle = document.querySelector('.modal-content .ctList-title span');
    listTitle.textContent = rptNoTitle;
    
    var sData = {};
    sData["srch1"] = rptNo;
	//fn_loading(true);

	$.ajax({
		type : "POST",
		url : "/shipping/selectCtNoList.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : 'json',
		async: false,
	    success : function(data) {
	    	ctNoListHot.loadData([]);
	    	ctNoListHot.loadData(data.resultList);
			setTimeout(function() {ctNoListHot.render()}, 10);
			fn_loading(false);
	    },
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("에러 발생");
		    	location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
}

function fn_handsonGridCtNoListPopupOption() {
	ctNoPopupSettings = {
        columns: [
            { data: 'checkBox', type: 'checkbox', className: "htCenter", checkedTemplate: 'yes', uncheckedTemplate: 'no', readOnly: false},
            { data: 'contSeq', type: 'text', className: "htCenter", readOnly: true},
            { data: 'contNo', type: 'text', className: "htCenter", readOnly: true},
        ],
        stretchH: 'all',
        width: '100%',
        autoWrapRow: true,
        height: 250,
        rowHeights: 25,
        rowHeaders: true,
        columnHeaderHeight: 25,
        colHeaders: ["", "순번", "컨테이너 번호"],
        colWidths: [30, 30, 90],
        manualRowResize: true,
        manualColumnResize: true,
        manualRowMove: true,
        manualColumnMove: false,
        contextMenu: false,
        dropdownMenu: false,
        filters: true,
        readOnly: false,
        columnSorting: { indicator: true },
        autoColumnSize: { samplingRatio: 23 },
        mergeCells: false,
        allowInsertRow: false,
        afterGetColHeader: function(col, TH){
        	if(col == 0){
          	TH.innerHTML = "<input type='checkbox' class='checker' id='id_checkAllCtNoListPopup' onclick='fn_checkAllCtNoListPopup();'>";
          }
        }
    };
    return ctNoPopupSettings;
}

function fn_checkAllCtNoListPopup(){
	var check = "" ;
	var changeArr = [];
	if ( $("#id_checkAllCtNoListPopup").prop("checked") == false) {
		check = "yes" ;
		isAllChecked = true;
	} else {
		check = "no" ;
		isAllChecked = false;
	}

	var data = ctNoListHot.getData();

	for(var i=0; i< data.length; i++){
		changeArr.push([i,0,check])
	}
	ctNoListHot.setDataAtCell(changeArr);
	if(check == "yes"){
		$("#id_checkAllCtNoListPopup").prop("checked", true);
	} else {
		$("#id_checkAllCtNoListPopup").prop("checked", false);
	}
}

function ctNoListClose(){
	$("#ctListPopUp").modal("hide");
}


function fn_saveCtNo() {
	if (rowCount > 0) {
        fn_clearShipReqBtn();
    }
    
	var data = ctNoListHot.getSourceData();
	var ctNoList = [];
    for (var i = 0; i < data.length; i++) {
        if (data[i]["checkBox"] === "yes") {
        	ctNoList.push(data[i].contNo);
        }
    }

    ctNoList.forEach(function(contNo) {
        addShipInfo(ctNoList);
    });
    ctNoListClose();
}


function fn_addrReq(rptNo, blNo) {
	
    var sData = [];
    
    var mngDeptId = 'D20240104165622001'; // 일양 배차 부서
    var inOutSctn = '01'; // 수출입구분
    var truckTypeCode = 'TR'; // 운송유형
    var sComName = 'a'; // 상차지명
    //var goodsName = ''; // 화물정보
    var chargeType = '01'; // 01:인수증, 02:선착불
    var sellCharge = 0; // 운송료
    var externalFlag = 'SH'; // 외부연계
    var carTonCode = '5'; 
    var carTypeCode = '06';
    var eStaff = '';
    
    var externalInfomation = blNo;
    var externalNumber = rptNo;
    var eComName = document.getElementById('toStaff').value;
    var eTel = document.getElementById('toPhnNo').value;
    var eAddr = document.getElementById('toAddr').value;
    var shipperManager = document.getElementById('shipperManager').value;
    var shipperMail = document.getElementById('shipperMail').value;
    var bizName = document.getElementById('cmpnyNm').value;
    var bizNum = document.getElementById('corpNo').value;
    var managerNm = document.getElementById('managerNm').value; // 담당자:메일로 대체, ''
    var sDate = document.getElementById('fromDt').value.replace(/-/g, '');
    var sAddr = document.getElementById('fromAddr').value;
    var eDate = document.getElementById('toDt').value.replace(/-/g, '');
    var billEmail = document.getElementById('billEmail').value; // ''
    var transDetails = document.getElementById('transDetails').checked ? 'Y':'N';
    var taxInvoice = document.getElementById('taxInvoice').checked ? 'Y':'N';
    var goodsWeights = document.getElementById('goodsWeights').value;
    var mixYn = document.getElementById('mixYn').value;
    var reqMemo = document.getElementById('fromReq').value;
    var fromTime = document.getElementById('fromTime').value;
    //var toTime = document.getElementById('toTime').value;
    var fileName = filesList.map(file => file.name).join('/');
    
    if (document.getElementById('fromTime').disabled) {
        fromTime = '즉시';
    } else {
        fromTime = document.getElementById('fromTime').value;
    }

    var emptyField = false;
  /*  function validateField(selector, fieldName) {
        if ($(selector).val() === "" && !emptyField) {
            $(selector).css("border", "3px solid red");
            alert(fieldName + "를 입력해주세요.");
            emptyField = true;
            return false;
        } else {
            $(selector).css("border", "");
            return true;
        }
    }
    function validateField2(selector, fieldName) {
    	if ($(selector).val() === "" && !emptyField) {
    		$(selector).css("border", "3px solid red");
    		alert(fieldName + "을 입력해주세요.");
    		emptyField = true;
    		return false;
    	} else {
    		$(selector).css("border", "");
    		return true;
    	}
    }
    if (
		!validateField('#fromAddr', '상차지') ||
		!validateField('#toStaff', '수령자') ||
		!validateField('#toPhnNo', '연락처') ||
        !validateField('#toAddr', '주소') ||
        !validateField2('#cmpnyNm', '업체명') ||
        !validateField('#corpNo', '사업자 번호') ||
        !validateField('#managerNm', '담당자') ||
        !validateField2('#billEmail', '계산서 메일')
        ) { return; }
    */
    
    var ctRows = document.querySelectorAll('[id^="ctNo"]'); // ctNo0 ,ctNo3
    var orderSeq = 1; 
    for (var i = 0; i < ctRows.length; i++) {
        var row = ctRows[i];
        var seq = row.id.replace('ctNo', '');
        var ctNo = document.getElementById('ctNo' + seq).value;
        var sMemo = document.getElementById('fromSpecifics' + seq).value;
        var toTime = document.getElementById('toTime' + seq).value;
        
        if (ctNo === "") {
            alert("컨테이너 번호를 입력해주세요.");
            row.style.border = "3px solid red";
            return;
        }
        
        sData.push({
        	orderSeq, ctNo, mngDeptId, externalInfomation, externalNumber,
        	inOutSctn, truckTypeCode, sComName, chargeType, sellCharge, externalFlag, carTonCode, carTypeCode,
        	eStaff, eComName, eTel, eAddr, eDate, bizName, bizNum, managerNm, shipperManager, shipperMail, transDetails, taxInvoice,
        	sDate, sAddr, sMemo, billEmail, goodsWeights, mixYn,
            reqMemo, fromTime, toTime, fileName
        })
        orderSeq++;
    }
    
    
    var formData = new FormData();

    formData.append('sData', JSON.stringify(sData));
    filesList.forEach(function(file, index) {
    	formData.append('files', file);
    });

    sData.forEach((data, index) => {
        console.log(`${index + 1}:`, data);
    });
    
    if(!confirm("운송 요청하시겠습니까?")){return;}
    
    $.ajax({
 	   type: "POST",
 	   url: "/shipping/insertShippingReqList.do",
 	   data: formData,
 	   beforeSend: function(xmlHttpRequest){
 	       xmlHttpRequest.setRequestHeader("AJAX", "true");
 	   },
 	   processData: false,
 	   contentType: false,
 	   success: function(data) {
 	       if(data === "success") {
 	           alert("운송 요청이 완료되었습니다.");
 	           fn_searchImportView();
 	       }
 	       $("#shipReqViewListPopUp").modal("hide");
 	    },
 	    error: function(e, textStatus, errorThrown) {
 	       if(e.status == 400){
 	           alert("Your request is up. Please log back in if you wish continue");
 	           location.href = document.referrer;
 	       } else {
 	           console.log(errorThrown);
 	           alert(msgSaveError);
 	       }
 	    }
 	});
}


function fn_orderCancel(){
	if(!confirm("취소 요청하시겠습니까?")){return;}
	
	var sData = [];
	
	const rows = document.querySelectorAll('[id^="orderId"]');

    rows.forEach(row => {
    	var mngDeptId = "D20240104165622001";
    	var orderId = row.value
    	sData.push({mngDeptId, orderId});
    });
    
    $.ajax({
  	   type: "POST",
  	   url: "/shipping/orderCancel.do",
  	   data: JSON.stringify(sData),
  	   beforeSend: function(xmlHttpRequest){
  	      xmlHttpRequest.setRequestHeader("AJAX", "true");
  	      xmlHttpRequest.setRequestHeader("Content-Type", "application/json"); // JSON 타입 설정
  	   },
  	   processData: false,
  	   contentType: false,
  	   success: function(data) {
  	       if(data === "success") {
  	           alert("취소 요청이 완료되었습니다.");
  	       }
  	    },
  	    error: function(e, textStatus, errorThrown) {
  	       if(e.status == 400){
  	           alert("Your request is up. Please log back in if you wish continue");
  	           location.href = document.referrer;
  	       } else {
  	           console.log(errorThrown);
  	           alert(msgSaveError);
  	       }
  	    }
  	});
	
}


function fn_addShipReqBtn(row){
	document.getElementById('addShipInfo2').style.display = 'block';
	rowCount = 0;
	const rows = document.querySelectorAll('#newRowId');

    rows.forEach(row => {
        row.remove();
    });
	
	var rowData = importViewHot.getSourceDataAtRow(row);
	var blNo = rowData.blno;
	var rptNo = rowData.rptNo.replace(/-/g, '');
	var nabFirm = rowData.nabFirm;
	var nabSdno = rowData.nabSdno;
	var addr = rowData.addr
	const ctDivHtml = document.getElementById('ctDiv');
	ctDivHtml.innerHTML = "";
	ctDivHtml.innerHTML = `<input id="ctNo0" type="text" class="border border-gray-300 rounded-lg text-base p-1 pr-8" style="width: 210px; text-align: center;">
						    <input id="orderId0" type="hidden">
						    <i class="fas fa-search search-icon absolute right-2 cursor-pointer" style="cursor: pointer; margin-left: 10px;" onclick="ctNoList('${rptNo}')"></i>`;
	
	$("#cmpnyNm").val(nabFirm);
	$("#corpNo").val(nabSdno);
	$("#fromAddr").val(addr);
	
	$("#shipReqViewListPopUp").modal("show");
	var blNoTitle = "B/L 번호: " + blNo;
	
    var shipReqModalTitle = document.querySelector('.modal-content .shipReqModal-title span');
    shipReqModalTitle.textContent = blNoTitle;
    
    var date = new Date();
	var today = new Date().toISOString().substring(0,10);
	  
	$("#fromDt").val(today);
	$("#toDt").val(today);
	$("#fromTime").val(getCurrentTime())
	$("#toTime0").val(getCurrentTime())
	$("#fromSpecifics0").val("");
	$("#ctNo0").val("");
 	$("#orderId0").val("");
	$("#goodsWeights").val("");
	$("#mixYn").val("Y");
	$("#fromReq").val("");
	$("#toStaff").val("");
	$("#toPhnNo").val("");
	$("#toAddr").val("");
	$("#managerNm").val("");
	$("#billEmail").val("");
	
	fn_loadAddrDefault();

	var shipReqModalTime = document.querySelector('.modal-content .shipReqModal-time span');
	shipReqModalTime.textContent = today + " " + getCurrentTime();
	
	const buttonDiv = document.getElementById('buttonDiv');
	buttonDiv.innerHTML = "";
	buttonDiv.innerHTML = `
			<div id="fileList" class="border border-primary-500  
	     		font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm" style="width:415px; height:52px; overflow: auto;">
    		</div>
       		<label for="fileName" class="custom-file-upload text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
					    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5 cursor-pointer">
				       <i class="fa-duotone fa-file-circle-check"></i>
						    파일첨부
			<input type="file" id="fileName" multiple name="fileName" style="display: none;">
			</label>
			<button
			    type="button"
			    onclick="fn_addrTempSave('${rptNo}', '${blNo}')"
			    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
			    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
			    <i class="fa-regular fa-floppy-disk"></i>
			   	    임시저장
			</button>
			<button
			    type="button"
			    onclick="fn_addrReq('${rptNo}', '${blNo}')"
			    class="text-primary-500 bg-primary-100 border border-primary-500 hover:bg-secondary-100
			    focus:ring-4 focus:ring-secondary-300 font-medium rounded px-4 py-1.5 focus:outline-none duration-300 text-sm mt-5">
			    <i class="fa-duotone fa-cart-flatbed-boxes"></i>
			   	    운송요청
			</button>
			<form name="shipFileDownForm" method="post"
				  action="/shipping/insertShippingReqList.do">
				<input type="hidden" name="shipFileDown" id="shipFileDown"/>
		    </form>`;
	
	 setUpFileInputListener();
}

function fn_orderMod(data) {
    console.log(data);
    var sData = [];
    
    var mngDeptId = 'D20240104165622001'; // 일양 배차 부서
    var inOutSctn = '01'; // 수출입구분
    var truckTypeCode = 'TR'; // 운송유형
    var sComName = 'a'; // 상차지명
    var goodsName = ''; // 화물정보 (=컨테이너번호)
    var chargeType = '01'; // 01:인수증, 02:선착불
    var sellCharge = 0; // 운송료
    var carTonCode = '5'; 
    var carTypeCode = '06';
    var eStaff = '';
    var fileName = filesList.map(file => file.name).join('/');

    var emptyField = false;
    function validateField(selector, fieldName) {
        if ($(selector).val() === "" && !emptyField) {
            $(selector).css("border", "3px solid red");
            alert(fieldName + "를 입력해주세요.");
            emptyField = true;
            return false;
        } else {
            $(selector).css("border", "");
            return true;
        }
    }

    if (
        !validateField('#fromAddr', '상차지') ||
        !validateField('#toStaff', '수령자') ||
        !validateField('#toPhnNo', '연락처') ||
        !validateField('#toAddr', '주소') ||
        !validateField('#cmpnyNm', '업체명') ||
        !validateField('#corpNo', '사업자 번호') ||
        !validateField('#managerNm', '담당자') ||
        !validateField('#billEmail', '계산서 메일')
    ) { return; }

    const ctRows = document.querySelectorAll('[id^="ctNo"]');
    const fromSpecificsVal = document.querySelectorAll('[id^="fromSpecifics"]'); 
    const toTimeVal = document.querySelectorAll('[id^="toTime"]');

    for (var i = 0; i < ctRows.length; i++) {
        var row = ctRows[i];
        var ctNo = row.value;
        
        if (ctNo === "") {
            alert("컨테이너 번호를 입력해주세요.");
            row.style.border = "3px solid red";
            return;
        }
        
        var sMemo = fromSpecificsVal[i] ? fromSpecificsVal[i].value : "";
        var toTime = toTimeVal[i] ? toTimeVal[i].value : "";
        var sDate = document.getElementById('fromDt').value.replace(/-/g, '');
        var eDate = document.getElementById('toDt').value.replace(/-/g, '');
        var reqMemo = document.getElementById('fromReq').value;
        var managerNm = document.getElementById('managerNm').value;
        var cmpnyNm = document.getElementById('cmpnyNm').value;
        var corpNo = document.getElementById('corpNo').value;
        var billEmail = document.getElementById('billEmail').value;
        var eComName = document.getElementById('toStaff').value;
        var mixYn = document.getElementById('mixYn').value;
        var eTel = document.getElementById('toPhnNo').value;
        var eAddr = document.getElementById('toAddr').value;
        var sAddr = document.getElementById('fromAddr').value;
        var goodsWeights = document.getElementById('goodsWeights').value;
        var fromTime = document.getElementById('fromTimeNow').checked ? '즉시' : document.getElementById('fromTime').value;
        var shipperManager = document.getElementById('shipperManager').value;
        var shipperMail = document.getElementById('shipperMail').value;
        var transDetails = document.getElementById('transDetails').checked ? 'Y':'N';
        var taxInvoice = document.getElementById('taxInvoice').checked ? 'Y':'N';
        
        sData.push({
            orderSeq: i + 1,
            rptNo: data[i].rptNo, blNo: data[i].blNo, ctNo: ctNo, orderId: data[i].orderId, regDt: data[i].regDt,
            sMemo: sMemo, sDate, fromTime, sAddr, sellCharge: data[i].estCharge,
            goodsWeights, mixYn, reqMemo,
            eStaff:eStaff, eTel, eAddr, eDate, eComName,
            toTime: toTime,shipperManager, shipperMail, transDetails, taxInvoice,
            mngDeptId:mngDeptId, inOutSctn:inOutSctn, truckTypeCode:truckTypeCode, sComName:sComName, goodsName:goodsName, chargeType:chargeType, carTonCode:carTonCode, carTypeCode:carTypeCode,
            cmpnyNm, managerNm, billEmail, corpNo, fileName
        });
    }

    var formData = new FormData();
    formData.append('sData', JSON.stringify(sData));
    filesList.forEach(function(file, index) {
        formData.append('files', file);
    });

    sData.forEach((data, index) => {
        console.log(`${index + 1}:`, data);
    });

    if (!confirm("수정 요청하시겠습니까?")) { return; }
    $.ajax({
        type: "POST",
        url: "/shipping/updateShippingReqList.do",
        data: formData,
        beforeSend: function(xmlHttpRequest) {
            xmlHttpRequest.setRequestHeader("AJAX", "true");
        },
        processData: false,
        contentType: false,
        success: function(data) {
            if (data === "success") {
                alert("수정 요청이 완료되었습니다.");
            }
        },
        error: function(e, textStatus, errorThrown) {
            if (e.status == 400) {
                alert("Your request is up. Please log back in if you wish to continue");
                location.href = document.referrer;
            } else {
                console.log(errorThrown);
                alert("Error occurred while saving.");
            }
        }
    });
}
