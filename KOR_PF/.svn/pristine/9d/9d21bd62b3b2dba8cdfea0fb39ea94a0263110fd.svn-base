var importUpHot;
var importUpSettings;
var importUpPopupSettings;
var impDtlUpdViewHot;
var impDtlUpdViewSettings;
var importUpIndex = 9999;
var importUpScrollTp = true;

$( document ).ready(function() {
	
	 $('.band-calendar').each(function(){ regCal(this) ;})
	  //캘린더 포맷
	 $('.datepicker').datepicker("option","dateFormat",calFormat);

      var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  var today = new Date().toISOString().substring(0,10);
	  var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	  
	  $("#importUp_srch2").val(mtoday);
	  $("#importUp_srch3").val(today);
	
	  var importUpElement = document.querySelector('#importUpTable');
	  var importUpElementContainer = importUpElement.parentNode;
	  importUpHot = new Handsontable(importUpElement, importUpSettings);
	  
	  var impDtlUpdElement = document.querySelector('#impDetailUpdateTable');
	  var impDtlUpdElementContainer = impDtlUpdElement.parentNode;
	  impDtlUpdViewHot = new Handsontable(impDtlUpdElement, impDtlUpdViewSettings);

	  $("#importUp_div1").show();
	  $("#importUp_div2").show();
	  $("#importUp_div3").hide();
	  $("#importUp_div4").hide();
	  $("#btnImportUpSave").hide();
	  $("#impUpInfo1").hide();
	  $("#impUpInfo2").hide();
	  fn_changeImportUp('read');
	  
	  //scroll 이벤트
	  fn_impUpasEventReg();
	  $("#impUpdateTextView").text("전체");
      $("#impUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
	  

	  $(document).on("click", '.itemCdClass', function(){
		  alert($(this).index());
	  });
});


$(document).mousedown(function(e){	
	if(e.target.name == "importUp1_date" || e.target.name == "importUp2_date"){
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			return;
		}
		$(".calendar-popup-container").remove();
		$('.band-calendar').each(function(){ regCal(this);});
	}else{
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			$(".calendar-popup-container").attr("class", "calendar-popup-container");
		}	
	}
});


$("input:radio[name=importUp_srch20]").change(function(){
	$("input[name=importUpType][value=read]").prop("checked", true);
	fn_changeImportUp("read");
})

//테이블 타입 변경
$("input[name=importUpType]").change(function(){
	  fn_changeImportUp($(this).val());
});

function fn_chgUpDate1() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
  
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setMonth(month - 1)).toISOString().substring(0,10);
  
	$("#importUp_srch2").val(today);
	$("#importUp_srch3").val(today);
	//$("#importUp_srch3").val(today);
}

function fn_chgUpDate2() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - day)).toISOString().substring(0,10);
	
	$("#importUp_srch2").val(mtoday);
	$("#importUp_srch3").val(today);
}

function fn_chgUpDate3() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - dayday + 1)).toISOString().substring(0,10);
	
	$("#importUp_srch2").val(mtoday);
	$("#importUp_srch3").val(today);
}

function fn_chgUpDate4() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var startDt = new Date();
	startDt.setDate(1);
  	startDt.setMonth(startDt.getMonth() - 1);

	var endDt = new Date();
	endDt.setMonth(endDt.getMonth(), 1);
	endDt.setDate(endDt.getDate() - 1);
	
	var today = startDt.toISOString().substring(0,10);
	var mtoday = endDt.toISOString().substring(0,10);
	
	$("#importUp_srch2").val(today);
	$("#importUp_srch3").val(mtoday);
}

//정렬항목
/*$("select[name=alignImportUp]").change(function(){
	  fn_searchImportUp();
});
*/
//row 수
$("select[name=importUpPageCnt]").change(function(){
	  fn_searchImportUp();
});

function fn_impUpasEventReg(){
	$("#importUpTable .wtHolder").scroll(function(){
		var scrollTop = $("#importUpTable .wtHolder").scrollTop();
  	  	var countPerPage = $("#importUpPageCnt option:selected").val();
  	  	var rowHeight = importUpHot.getRowHeight();
  	  	var addCnt = 780;
  	  	if(countPerPage == "50"){
  	  		addCnt = 780;
  	  	}else if(countPerPage == "100"){
  	  		addCnt = 2030;
  	  	}else if(countPerPage == "200"){
  	  		addCnt = 4300;
  	  	}else if(countPerPage == "500"){
  	  		addCnt = 12000;
  	  	}	
  	  	if(importUpScrollTp && importUpIndex != 9999 && scrollTop >= (countPerPage * importUpIndex * rowHeight) + addCnt){
  		  fn_importUpScroll();
  	  	}
	});
}
//popUp table scroll 이벤트
/** 이벤트 End **/
//스크롤
function fn_importUpScroll(){
	if( $("input[name=importUpType]:checked").val() == "enrol")
		return;
	fn_loading(true);
	importUpScrollTp = false;
	importUpIndex++;

	$.ajax({
		type : "POST",
		url : "/import/selectImportUpList.do",
		data : fn_setImportUpForm(),
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	var getData = importUpHot.getSourceData();
        	var meargeJson = getData.concat(data.resultList);
        	importUpHot.loadData(meargeJson);
        	importUpScrollTp = true;
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
}

//검색
function fn_searchImportUp(){
	var selectedValue = $("input[name=importUp_srch1]:checked").val();
    if(selectedValue === "01") {
        $("#impUpdateTextView").text("전체");
        $("#impUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "02") {
        $("#impUpdateTextView").text("수리");
        $("#impUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else {
        $("#impUpdateTextView").text("미결");
        $("#impUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } 
	importUpIndex = 0;
	$("#impUpSrch2").val($("#importUp_srch2").val());
	$("#impUpSrch3").val($("#importUp_srch3").val());
	$("#impUpSrch4").val($("#importUp_srch4").val());
	$("#impUpSrch5").val($("#importUp_srch5").val());
	$("#impUpSrch6").val($("#importUp_srch6").val());
	$("#impUpSrch7").val($("#importUp_srch7").val());

	var data = fn_setImportUpForm();
	var valid = fn_validateSearchDate(data["srch2"], data["srch3"]);

	if(valid === "false"){
		data["srch2"] = null;
		data["srch3"] = null;
		$("#importUp_srch2").val("");
		$("#importUp_srch3").val("");
		return;
	} else {
		data["srch2"] = $("#importUp_srch2").val();
		data["srch3"] = $("#importUp_srch3").val();
	}
	if(data["srch2"] == null || data["srch2"] == "" || data["srch3"] == "" || data["srch3"] == null){
		alert("날짜를 입력해 주세요.");
		return;
	}
	fn_loading(true);

	$.ajax({
		type : "POST",
		url : "/import/selectImportUpList.do",
		data : fn_setImportUpForm(),
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        		importUpHot.loadData([]);
            	importUpHot.loadData(data.resultList);
            	var totCnt = (data.resultList.length > 0) ? data.resultList[0].cnt : 0;
            	$("#importUpCnt").text(totCnt); 
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
};


function enterkey() {
	if (window.event.keyCode == 13) {
		fn_searchImportUp();
    }
}


//검색조건 생성
function fn_setImportUpForm(){
	var sData = {};
	sData["srch1"] = $("input:radio[name=importUp_srch1]:checked").val();
	sData["srch2"] = $("#importUp_srch2").val();
	sData["srch3"] = $("#importUp_srch3").val();
	sData["srch4"] = $("#importUp_srch4").val();
	sData["srch5"] = $("#importUp_srch5").val();
	sData["srch8"] = $("#importUpDateType option:selected").val();
	sData["recordCountPerPage"] = $("#importUpPageCnt option:selected").val();
	sData["pageIndex"] = importUpIndex;
	
	sData["srchType1"] = $("#importUpSrchType1 option:selected").val();
	sData["srchText1"] = $("#importUpSrchText1").val();
	
	sData["srchType2"] = $("#importUpSrchType2 option:selected").val();
	sData["srchText2"] = $("#importUpSrchText2").val();
	
	return sData;
};

//검색조건 초기화
function fn_clearImportUp(){
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	  
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	  
	$("input:radio[name=importUp_srch1][value=01]").prop('checked', true);
	$("#importUp_srch2").val(mtoday);
	$("#importUp_srch3").val(today);
	$("#importUp_srch4").val("");
	$("#importUp_srch5").val("");
	$("#importUp_srch6").val("");
	$("#importUp_srch7").val("");
	$("#importUpDateType").val("01");
	
	$("#importUpSrchType1").val("");
	$("#importUpSrchType2").val("");
	
	$("#importUpSrchText1").val("");
	$("#importUpSrchText2").val("");
};

//테이블 컬럼   
function fn_impUpTableCol(){
	var tableType = $("input:radio[name=importUpType]:checked").val();
	// 사용여부
	var importUp_srch20 = $("input:radio[name=importUp_srch20]:checked").val(); 
	
	var chipRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		Handsontable.renderers.BaseRenderer.apply(this, arguments);
		td.classList.add('chip-cell');
		td.classList.add('text-center');
		switch (value) {
			case "접수":
		    case "Y":
		    	td.innerHTML = `<span class="chip chip-blue">${value}</span>`
		    	break
		    case "수리":
		    	td.innerHTML = `<span class="chip chip-green">${value}</span>`
		    	break
		    case "N":
		    case "서류 미비":
		    	td.innerHTML = `<span class="chip chip-red">${value}</span>`
		    	break
		    case "자수":
		    	td.innerHTML = `<span class="chip chip-yellow">${value}</span>`
		    case "기각":
		    	td.innerHTML = `<span class="chip chip-primary">${value}</span>`
		    	break
		    case "":
		    	td.innerHTML = `<span>${value}</span>`
		    	break
		    default:
		    	td.innerHTML = `<span class="chip chip-green">${value}</span>`
		    	break
		}
	};

	this.impUpCol = [
		{data : 'rece', className : "htCenter", width:50, wordWrap:false, readOnly:true, renderer:chipRenderer},
		{data : 'nabFirm', className : "htCenter", width: 180, wordWrap: false, readOnly:true},
		{data : 'blno', className : "htCenter", width: 140, wordWrap: false, readOnly:true},
		{data : 'rptNo', className : "htCenter", width: 160, wordWrap: false, readOnly:true},
		{data : 'seq', className : "htCenter",width: 60, wordWrap: false, readOnly:true},
		{data : 'reqDay', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'approveDay', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'reasonDoc', className : "htCenter",width: 180, wordWrap: false, readOnly:true},
		
		{data : 'causeReason', className : "htCenter",width: 200, wordWrap: false, readOnly:true},
		{data : 'reasonDoc1', className : "htCenter",width: 250, wordWrap: false, readOnly:true},
		{data : 'transTaxSum', className : "htCenter",width: 180, wordWrap: false, readOnly:true},
		{data : 'afterTaxSum', className : "htCenter",width: 180, wordWrap: false, readOnly:true},
		{data : 'adCstKrw', className : "htCenter",width: 180, wordWrap: false, readOnly:true},
		{data : 'customs', className : "htCenter",width: 200, wordWrap: false, readOnly:true},
		{data : 'petDay', className : "htCenter",width: 100, wordWrap: false, readOnly:true},
		{data : 'plntCd', className : "htCenter", width: 90, wordWrap: false, readOnly:true},
		{data : 'prOrdr', className : "htCenter", width: 90, wordWrap: false, readOnly:true},
		{data : 'sn', className : "htCenter", width: 90, wordWrap: false, readOnly:true}
	] ;
}

function fn_impUpTableHeader(){
	var tableType = $("input:radio[name=importUpType]:checked").val();
	this.impUpHeader =  [
		"상태", "납세의무자", "B/L번호", "신고번호", "정정차수", "신청일자", "승인일자", "정정구분",
		"귀책사유", "정정사유", "세액증감내역", "납부금액", "가산세", "세관", "수리일자", "부서코드", "PO", "SN"
	] ;
}

function fn_impUpTableHidden(){
	var tableType = $("input:radio[name=importUpType]:checked").val();
	this.impUpHidden = [17];
	this.impUpOrgHidden = [0];
}

function fn_impDtlUpdTableHidden(){
	this.impDtlUpdViewHidden = [];
}

function fn_handsonGridPurchOption(col, header, hidden){
	var tableType = $("input:radio[name=importUpType]:checked").val();
	importUpSettings = {
		columns : col,
		colHeaders : header,
		hiddenColumns : {
			copyPasteEnabled : false,
			indicators : false,
			columns : hidden
		},
		stretchH : 'all',
		width : '100%',
		autoWrapRow : true,
		height : 470,
		rowHeights : 25,
		rowHeaders : true,
		columnHeaderHeight : 25,
		manualRowResize : true,
		manualColumnResize : true,
		manualRowMove : true,
		manualColumnMove : false,
		licenseKey: 'non-commercial-and-evaluation',
		// dropdownMenu : true,
		contextMenu : (tableType == "enrol") ? ['row_above', 'row_below', '---------', 'undo', 'redo', 'remove_row'] : false,
		filters : true,
		readOnly : (tableType == "read") ? true : false,
		allowInsertRow : true,
		allowRemoveRow : true,
		// columnSorting : {indicator : true},
		autoColumnSize : {samplingRatio : 23},
		mergeCells : false,
		wordWrap : true,
		afterOnCellMouseDown : function(event, coords){
			var dataList = "";
			var rptNo = "";
			var dataList = importUpHot.getSourceData(coords.row, 35);
			var sna1 = dataList[dataList.length-1].sn;
			var rptNo = dataList[dataList.length-1].rptNo;
			fn_searchImpDtlUpdView(sna1, rptNo);
		}
	};
	return importUpSettings;
}


function fn_searchGridPurchOption(type){
	if(type){
		$("#impUpEnrol").show();
		$("#importUp_div1").show();
		$("#importUp_div2").show();
		$("#importUp_div3").hide();
		$("#importUp_div4").hide();
		$("#importUp_div12").hide();
		$("#importUp_div5").show();
		$("#importUp_div6").show();
		$("#importUp_div7").show();
		$("#importUp_div8").show();
		$("#impUpInfo1").hide();
		$("#impUpInfo2").hide();
		$("#docBtn").show();
	}else{
		$("#impUpEnrol").hide();
		$("#importUp_div1").show();
		$("#importUp_div2").hide();
		$("#importUp_div3").show();
		$("#importUp_div4").show();
		$("#importUp_div5").hide();
		$("#importUp_div12").hide();
		$("#importUp_div6").show();
		$("#importUp_div7").hide();
		$("#importUp_div8").show();
		$("#impUpInfo1").show();
		$("#impUpInfo2").show();
		$("#docBtn").hide();
	}
}

//테이블 타입 변경
function fn_changeImportUp(type){
	var searchTp = $("input:radio[name=importUp_srch1]:checked").val();

	if(type == "edit") {
		if(type == "edit" && $('input:radio[name=importUp_srch20]:checked').val() == "Y" && searchTp == "01"){
			alert(msgUsePurchNonEditMsg);
			$("input:radio[name=importUpType][value=read]").prop("checked", true);
			return;
		}
		$("#btnImportUpSave").show();
		$("#impExcel").hide();
		$("#docBtn").children().hide();
		fn_changeImportUpType(searchTp);
	} else if(type == "enrol") {
		if(type == "enrol" && $('input:radio[name=importUp_srch20]:checked').val() == "Y" && searchTp == "01"){
			alert(msgUsePurchNonEnrolMsg);
			$("input:radio[name=importUpType][value=read]").prop("checked", true);
			return;
		}
		$("#btnImportUpSave").show();
		$("#impExcel").hide();
		$("#docBtn").children().hide();
		fn_changeImportUpType(searchTp);
	} else{
		importUpHot.updateSettings({readOnly:true, contextMenu : false});
		$("#btnImportUpSave").hide();
		$("#impExcel").show();
		$("#docBtn").children().show();
		fn_changeImportUpType(searchTp);
	}
};

//검색구분 변경
function fn_changeImportUpType(type){
	let impUpCol = new fn_impUpTableCol();
	let impUpHeader = new fn_impUpTableHeader();
	let impUpHidden = new fn_impUpTableHidden();
	
	let impDtlUpdCol = new fn_impDtlUpdTableCol();
	let impDtlUpdViewHeader = new fn_impDtlUpdViewTableHeader();
	let impDtlUpdViewHidden = new fn_impDtlUpdTableHidden();
	
	var col, header, hidden, col2, header2, hidden2;

	fn_searchGridPurchOption(true);
	col = impUpCol.impUpCol;
	header = impUpHeader.impUpHeader;
	hidden = impUpHidden.impUpHidden;
	
	col2 = impDtlUpdCol.impDtlUpdCol;
	header2 = impDtlUpdViewHeader.impDtlUpdViewHeader;
	hidden2 = impDtlUpdViewHidden.impDtlUpdViewHidden;
	
	importUpHot.updateSettings(fn_handsonGridPurchOption(col, header, hidden));
	impDtlUpdViewHot.updateSettings(fn_handsonGridImpDtlUpdOption(col2, header2, hidden2));
	
	fn_searchImportUp();
};


function fn_handsonGridImpDtlUpdOption(col, header, hidden){
	var tableType = $("input:radio[name=importViewType]:checked").val();
	
	impDtlUpdViewSettings = {
		columns : col,
		colHeaders : header,
		hiddenColumns : {
			copyPasteEnabled : false,
			indicators : false,
			columns : hidden
		},
		stretchH : 'all',
		width : '100%',
		autoWrapRow : true,
		height : 150,
		border : 1,
		rowHeights : 25,
		columnHeaderHeight : 25,
		rowHeaders: true,
		manualRowResize : true,
		manualColumnResize : true,
		manualRowMove : true,
		manualColumnMove : false,
		licenseKey: 'non-commercial-and-evaluation',
		filters : true,
		readOnly :  true ,
		allowInsertRow : true,
		allowRemoveRow : true,
		 // columnSorting : {indicator : true},
		autoColumnSize : {samplingRatio : 30},
	    mergeCells : false,
	    wordWrap : true
	};
	
	return impDtlUpdViewSettings;
}


function fn_impDtlUpdTableCol(){
	this.impDtlUpdCol = [
		{data : 'rptNo', className : "htCenter", width: 150, wordWrap: false, readOnly:true},
		{data : 'impRanNo', className : "htCenter", width: 50, wordWrap: false, readOnly:true},
		{data : 'sizeNo', className : "htCenter", width: 60, wordWrap: false, readOnly:true},
		{data : 'itemDoc', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'beforeEdit', className : "htCenter", width: 150, wordWrap: false, readOnly:true},
		{data : 'afterEdit', className : "htCenter", width: 150, wordWrap: false, readOnly:true},
		{data : 'vitKeyNo', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'excKeyNo', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'expRptNo', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'expRanNo', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'expSilNo', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'contSeq', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'imdtSeq', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
		{data : 'ecSeq', className : "htCenter", width: 100, wordWrap: false, readOnly:true},
	];
}

function fn_impDtlUpdViewTableHeader(){
	this.impDtlUpdViewHeader = [
		"신고번호", "란번호", "규격번호", "항목명", "정정전내역", "정정후내역", "요건승인번호", 
		"요건비대상번호", "재수출신고번호", "재수출란", "재수출규격", "컨테이너", "즉시반출", "주문번호"
	];
}

function fn_searchImpDtlUpdView(sna1, rptNo) {
	var lData = {};
	
	lData["srch1"] = sna1;
	lData["recordCountPerPage"] = $("#importViewPageCnt option:selected").val();
	
	$.ajax({
		type : "POST",
		url : "/import/selectImpDtlUpdViewList.do",
		data : lData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
		success : function(data) {
			data.resultList.forEach(function (row) {
                row.rptNo = rptNo;
            });
			impDtlUpdViewHot.loadData([]);
			impDtlUpdViewHot.loadData(data.resultList);
			setTimeout(function() {impDtlUpdViewHot.render()}, 200);
		},
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
};

/*
function fn_importUpdateExcelDownload(){
	var type = $("input:radio[name=importUp_srch1]:checked").val();
	$("#importUpdateForm").html("");
	$("#importUpdateForm").attr("action","/import/importUpdatedownloadExcel.do");
	
	//검색조건
	$.each(fn_setImportUpForm(),function(attrName,attrValue){
		$("#importUpdateForm").append("<input type='hidden' value=" + attrValue + " name=" + attrName + ">");
	});
	
	//엑셀 옵션
	var exTit = "";
	var exCol = "";
	
	var impUpCol = new fn_impUpTableCol();
	var impUpHeader = new fn_impUpTableHeader();
	
	exCol = fn_getExcelCol(impUpCol.impUpCol); 
    exTit = fn_getExcelHead(impUpHeader.impUpHeader); 
    
    $("#importUpdateForm").append("<input type='hidden' name='exCol' value="+ exCol +">");
    $("#importUpdateForm").append("<input type='hidden' name='exTit' value="+ exTit +">");
    $("#importUpdateForm").append("<input type='hidden' name='exType' value="+ type +">");
    
	
    $("#importUpdateForm").submit();
    
    function fn_getExcelCol(viewCol){
        return viewCol.map(item => item['data'] + '|' + item['className'] + '|' + item['width']).join("||");
    }
     
    function fn_getExcelHead(viewHead){
        var result = [];
        
        if(viewHead.length > 1 && typeof(viewHead[0][0]) == 'object') {
            for(var i=0; i < viewHead.length; i++) {
                if(i == viewHead.length -1){
                    result.push(viewHead[i].join("|null||") + "|null");
                }else {
                    result.push(viewHead[i].map(item => (item['label'] ? item['label'] : 'null') + '|' + (item['colspan'] ? item['colspan'] : 'null')).join("||"));
                }
            }
            return result.join("|||");
        }else{
            return viewHead.join("|null||") + "|null";
        };
    }
}*/

function fn_impUpdExcelDownload(){
	var type = $("input:radio[name=importUp_srch1]:checked").val();
	var data = fn_setImportUpForm();
	
	fn_loading(true);

	var exTitArr = [];
	var exTit = "";
	var exColArr = [];
	var exCol = "";
    var exTitDivArr = [];
    var exTitDiv = "";
 
    let impUpCol = new fn_impUpTableCol();
	let impUpHeader = new fn_impUpTableHeader();
	
    exColArr.push(fn_getExcelCol(impUpCol.impUpCol));
	exTitArr.push(fn_getExcelHead(impUpHeader.impUpHeader));
	
 	exCol = exColArr.join("|||");
	exTit = exTitArr.join("||||");
	exTitDiv = "1|정정신고현황";
    var parameters = {exCol : "", exTit: "", exTitDiv: "", exType: "", srch40: ""};
	
    $.each(fn_setImportUpForm(), function(attrName, attrValue){
    	parameters[attrName] = attrValue;
    });
	
	parameters.exCol = exCol.replace(/ /g,"_");
	parameters.exTit = exTit.replace(/ /g,"_");
	parameters.exTitDiv = exTitDiv.replace(/ /g,"_");
	parameters.exType = type;
	parameters.srch40 = "정정신고현황";
		
	$.ajax({
		url: "/import/importUpdateDownloadExcel.do",
		data: parameters,
		type: 'POST',
		cache: false,
		timeout: 200000,
		xhrFields: {
			responseType: "blob",
		},
	    success: function(blob, status, xhr) {
	    	try {
	    		var fileName = "";
				var disposition = xhr.getResponseHeader("Content-Disposition");
			    if (disposition && disposition.indexOf("attachment") !== -1) {
			    	var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
			        var matches = filenameRegex.exec(disposition);

			        if (matches != null && matches[1]) {
			        	fileName = decodeURI(matches[1].replace(/['"]/g, ""));
			        }
			    }

			    if (window.navigator && window.navigator.msSaveOrOpenBlob) {
			    	window.navigator.msSaveOrOpenBlob(blob, fileName);
			    } else {
			    	var URL = window.URL || window.webkitURL;
			        var downloadUrl = URL.createObjectURL(blob);

			        if (fileName) {
			        	var a = document.createElement("a");
			        	if (a.download === undefined) {
			        		window.location.href = downloadUrl;
			            } else {
			            	a.href = downloadUrl;
			            	a.download = fileName;
			            	document.body.appendChild(a);
			            	a.click();
			            }
			        } else {
			        	window.location.href = downloadUrl;
			        }
			    }
		       fn_loading(false);
	    	} catch (e) {
	    		console.log(e);
				fn_loading(false);
			};
	    },
	    error: function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	    	}
	    }
	});
}


function fn_getExcelCol(viewCol){
    return viewCol.map(item => item['data'] + '|' + item['className'] + '|' + item['width']).join("||");
}
 
function fn_getExcelHead(viewHead){
    var result = [];
    
    if(viewHead.length > 1 && typeof(viewHead[0][0]) == 'object') {
        for(var i=0; i < viewHead.length; i++) {
            if(i == viewHead.length -1){
                result.push(viewHead[i].join("|null||") + "|null");
            }else {
                result.push(viewHead[i].map(item => (item['label'] ? item['label'] : 'null') + '|' + (item['colspan'] ? item['colspan'] : 'null')).join("||"));
            }
        }
        return result.join("|||");
    }else{
        return viewHead.join("|null||") + "|null";
    };
}