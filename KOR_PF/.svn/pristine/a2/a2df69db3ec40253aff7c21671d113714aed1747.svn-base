/*[list] Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ get*/
var notPdfDate ="";
/*[list] Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ get*/
$( document ).ready(function() {
	//setTimeout(exportPdf, 500);
});

$(document).ready(function() {
	var dashboardYy = new Date().getFullYear();
	
	
	$('.band-calendar').each(function(){ regCaldash(this) ;})
	  //Ï∫òÎ¶∞Îçî Ìè¨Îß∑
	$('.datepicker').datepicker("option","dateFormat",dashFormat);

	  var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  
	  var today = new Date().toISOString().substring(0,7);
	  
	  $("#dashbordDate").val(today);

	// ÎåÄÏãúÎ≥¥Îìú Ï†ïÎ≥¥Í≤ÄÏÉâ
	//fn_selectDashboadInfo();
	//fn_moreNotice($("#moreNoticeList"));
	$("#chartTarget a").click(function() {
		$('.subOutter ol li #' + $(this).attr('id')).click();
		$('.subOutter, .bg').hide();

	})

	let nowYear = new Date().getFullYear();
	let nowMonth = new Date().getMonth() + 1;
	var objYMList = [];
	var yearMonthList = [];
	
	for (let i = nowYear; i >= 2020; i--) {
		for (let j = 12; j >= 1; j--) {
			if (i == nowYear && j > nowMonth) continue;
			
			let obj = i + "-" + (j <= 9 ? "0" + j : j);
			objYMList.push({ i: obj });
			yearMonthList.push(obj);
		}
	}
	
	var currentDate = `${nowYear}-${nowMonth <= 9 ? "0" + nowMonth : nowMonth}`;
	var yearMonthOptions = fn_makeSelect(objYMList, currentDate);
	document.getElementById("dashbordDate").innerHTML = yearMonthOptions;


	
	fn_dashInfo1("02");
	fn_dashManagerInfo();
});




function fn_makeSelect(objList, curVal) {
    let result = "";
    var optionHtml = "<option value='{key}' {selected}>{val}</option>";
    for (let i = 0; i < objList.length; i++) {
        var obj = objList[i];
        for (let x in obj) {
            let key = obj[x]; // 'i'
            let selected = key === curVal ? "selected" : "";
            var curObj = { key: key, val: key, selected: selected };
            result += fn_makeObj(curObj, optionHtml);
        }
    }
    return result;
}

function fn_makeObj(obj, template) {
    return template
        .replace("{key}", obj.key)
        .replace("{val}", obj.val)
        .replace("{selected}", obj.selected);
}


function fn_dashSrch(){
	
	var activeElement = document.querySelector("#chartType li.active");
	
	// Í∞í ÏÑ†Ïñ∏
	let activeValue = null;

    if (activeElement.classList.contains("status-tab-imp")) {
        activeValue = "02"; // ÏàòÏûÖ
    } else if (activeElement.classList.contains("status-tab-exp")) {
        activeValue = "01"; // ÏàòÏ∂ú
    }
	
    var dashDate = $("#dashbordDate").val();
	
    fn_dashInfo1(activeValue);
	
}


function fn_rptType(type){
	if (type=="01"){
		var tabType1 = document.querySelector('.status-tab-exp');
		var tabType2 = document.querySelector('.status-tab-imp');
		tabType1.classList.add("active");
	    tabType2.classList.remove("active");
	} else {
		var tabType1 = document.querySelector('.status-tab-exp');
		var tabType2 = document.querySelector('.status-tab-imp');
	    tabType1.classList.remove("active");
	    tabType2.classList.add("active");
	}
	fn_dashInfo1(type);
}

function fn_dashInfo1(type){
	
	
	fn_loading(true);
	var sData = {};
	sData["srch1"] = type;
	sData["srch2"] = $("#dashbordDate").val();
	
	$.ajax({
		type : "POST",
		url : "/dash/selectDashboardInfo1.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : "json",
		success : function(data) {
			$("#dashInfo1").html('');
			document.querySelector('#myChart').remove();
		    document.querySelector('.myChartClass').innerHTML = '<canvas id="myChart" height="225"></canvas>'
			var newRow = "";
			var labelDate = [];  		// xÏ∂ï Í∞í
			var expCnt = [];  		// Í±¥Ïàò Í∞í
			var expKrw = []; 
			// Í∏àÏï° Í∞í
			var impCnt = [];  		// Í±¥Ïàò Í∞í
			var impKrw = []; 		// Í∏àÏï° Í∞í
			var impTax = []; 		// Í∏àÏï° Í∞í
				
				for (var i = 0; i < data.resultList.length; i++) {
					newRow = "<tr>" +
								 "<td id='sumDate' style='text-align: center;'>"+data.resultList[i].sumDate + "</td>" +
								 "<td>"+data.resultList2[i].cnt + "</td>" +
								 "<td>"+data.resultList2[i].sumTax + "</td>" +
								 "<td>"+data.resultList2[i].sumKrw + "</td>" +
								 "<td>"+data.resultList[i].cnt + "</td>" +
								 "<td>"+data.resultList[i].sumKrw + "</td>" +
								 "</tr>"
					$("#dashInfo1").append(newRow);
				}
				
				for (var i = data.resultList.length - 1; i >= 0; i--) {
					labelDate.push(data.resultList[i].sumDate);
					expCnt.push(data.resultList[i].cnt);
					
					impCnt.push(data.resultList2[i].cnt);
					
					var strNumber = data.resultList[i].sumKrw;
					var number = parseInt(strNumber.replace(/,/g, ""), 10);
					
					var strNumber2 = data.resultList2[i].sumKrw;
					var number2 = parseInt(strNumber2.replace(/,/g, ""), 10);
					
					var strNumber3 = data.resultList2[i].sumTax;
					var number3 = parseInt(strNumber3.replace(/,/g, ""), 10);
					expKrw.push(number);
					impKrw.push(number2);
					impTax.push(number3);
				}
			// Ï∞®Ìä∏ ÏÉùÏÑ±
		if (type == "01"){
		  	var ctx = document.getElementById('myChart').getContext('2d');
		  	var myChart = new Chart(ctx, {
		    	type: 'bar',
		    	data: {
		      		labels: labelDate,
		      		datasets: [
		        		{
		          			type: 'bar',
		          			label: expVal /*'ÏàòÏ∂úÍ∞ÄÍ≤©(KRW)'*/,
		          			data: expKrw,
		          			backgroundColor: 'rgba(255, 99, 132, 0.2)',
		          			borderColor: 'rgba(255, 99, 132, 1)',
		          			borderWidth: 1,
		          			yAxisID: 'bar-y-axis'
		        		},
		        		{
		          			type: 'line',
		          			label: cnt /*'Í±¥Ïàò'*/,
		          			data: expCnt,
		          			backgroundColor: 'rgba(54, 162, 235, 0.2)',
		          			borderColor: 'rgba(54, 162, 235, 1)',
		          			borderWidth: 1,
		          			fill: false,
		          			yAxisID: 'line-y-axis'
		        		}
		      		]
		    	},
		    options: {
			    	responsive: true,
			        maintainAspectRatio: false,
			        plugins: {
			            datalabels: {
			                display: false // üî• Ïà´Ïûê ÎùºÎ≤® Ïà®Í∏∞Í∏∞
			            }
			        },
			        scales: {
		      			'bar-y-axis': {
		  					id: 'bar-y-axis',
		  					type: 'linear',
		  					position: 'left',
		  					beginAtZero: true
						},
		        		'line-y-axis': {
		  					id: 'line-y-axis',
		  					type: 'linear',
		  					position: 'right',
		 	 				beginAtZero: true
		        		}
		    		}
		    	}
			});
				} else {
					var ctx = document.getElementById('myChart').getContext('2d');
				  	var myChart = new Chart(ctx, {
				    	type: 'bar',
				    	data: {
				      		labels: labelDate,
				      		datasets: [
				        		{
				          			type: 'bar',
				          			label: impVal /*'ÏàòÏûÖÍ∞ÄÍ≤©(KRW)'*/,
				          			data: impKrw,
				          			backgroundColor: 'rgba(255, 99, 132, 0.2)',
				          			borderColor: 'rgba(255, 99, 132, 1)',
				          			borderWidth: 1,
				          			yAxisID: 'bar-y-axis'
				        		},
				        		{
				          			type: 'bar',
				          			label: taxPaid /*'ÎÇ©Î∂ÄÏÑ∏Ïï°(KRW)'*/,
				          			data: impTax,
				          			backgroundColor: 'rgba(155, 200, 50, 0.2)',
				          			borderColor: 'rgba(155, 200, 50, 1)',
				          			borderWidth: 1,
				          			yAxisID: 'bar-y-axis'
				        		},
				        		{
				          			type: 'line',
				          			label: cnt /*'Í±¥Ïàò'*/,
				          			data: impCnt,
				          			backgroundColor: 'rgba(54, 162, 235, 0.2)',
				          			borderColor: 'rgba(54, 162, 235, 1)',
				          			borderWidth: 1,
				          			fill: false,
				          			yAxisID: 'line-y-axis'
				        		}
				      		]
				    	},
				    options: {
					    	responsive: true,
					        maintainAspectRatio: false,
					        plugins: {
					            datalabels: {
					                display: false // üî• Ïà´Ïûê ÎùºÎ≤® Ïà®Í∏∞Í∏∞
					            }
					        },
					        scales: {
				      			'bar-y-axis': {
				  					id: 'bar-y-axis',
				  					type: 'linear',
				  					position: 'left',
				  					beginAtZero: true
								},
								
				        		'line-y-axis': {
				  					id: 'line-y-axis',
				  					type: 'linear',
				  					position: 'right',
				 	 				beginAtZero: true
				        		}
				    		}
				    	}
					});
				}
			fn_loading(false);
		},
		error : function(e, textStatus, errorThrown) {
			if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
				console.log(errorThrown);
				alert(msgSearchError);
        	}
		}
	});
}


function fn_dashManagerInfo(){
    var sData = {};
    $.ajax({
        type : "POST",
        url : "/dash/selectDashManagerInfo.do",
        data : sData,
        beforeSend : function(xmlHttpRequest){
            xmlHttpRequest.setRequestHeader("AJAX", "true");
        },
        dataType : "json",
        success : function(data) {
            $("#dashManagerInfo").html('');
            var newRow = "";
            
            if (data.resultList.length == 0) {
                newRow = "<tr>" +
                         "<td style='text-align: center;'></td>" +
                         "<td style='text-align: center;'>" + '-' + "</td>" +
                         "<td style='text-align: center;'>" + '-' + "</td>" +
                         "<td style='text-align: center;'>" + '-' + "</td>" +
                         "</tr>";
                $("#dashManagerInfo").append(newRow);
            } else if(lang == 'en') {
            	for (var i = 0; i < data.resultList.length; i++) {
                    newRow = "<tr>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrType + "</td>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrEmail + "</td>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrTel + "</td>" +
                             "</tr>";
                    $("#dashManagerInfo").append(newRow);
            	}
            } else {
                for (var i = 0; i < data.resultList.length; i++) {
                    newRow = "<tr>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrType + "</td>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrNm + "</td>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrEmail + "</td>" +
	                             "<td style='text-align: center;'>" + data.resultList[i].usrTel + "</td>" +
                             "</tr>";
                    $("#dashManagerInfo").append(newRow);
                }
            }
        },
        error : function(e, textStatus, errorThrown) {
            if(e.status == 400){
                alert("Your request is up. Please log back in if you wish to continue");
                location.href = document.referrer;
            } else {
                console.log(errorThrown);
                alert("There was an error processing your request.");
            }
        }
    });
}


// Í≥µÏßÄÏÇ¨Ìï≠ ÌÅ¥Î¶≠
function fn_callNoticePop(noticeSeq) {
	$("#dashNoticePop").find("input").val(null);
	$("#dashNoticePop").find("textarea").val(null);
	$("#dashNoticePop").modal("show");
	$("#notiIcon" + noticeSeq + " #newicon").hide();

	var uData = {};
	uData["srch1"] = noticeSeq;
	$.ajax({
		type : "POST",
		url : "/base/updateReadNotice.do",
		data : JSON.stringify(uData),
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		contentType : "application/json; charset=utf-8",
		success : function(data) {
			if (data == "success") {
				fn_searchDashNotice(noticeSeq);
			}
		},
		error : function(e, textStatus, errorThrown) {
			if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
				console.log(errorThrown);
				alert(msgSaveError);
        	}
		}
	});

};

// Í≥µÏßÄÏÇ¨Ìï≠ ÌåùÏóÖÍ≤ÄÏÉâ
function fn_searchDashNotice(noticeSeq) {
	var sData = {};
	sData["srch1"] = noticeSeq;

	$.ajax({
		type : "POST",
		url : "/dash/selectDashNoticeInfo.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : "json",
		success : function(data) {
			if (data.result.dashFileNm == undefined
					|| data.result.dashFileNm == "") {
				$("#dashNoticeAttach").hide();
			} else {
				$("#dashNoticeAttach").show();
			}

			$.each(data.result, function(key, value) {
				$("#dashNoticePop").find("input[name='" + key + "']")
						.val(value);
				$("#dashNoticePop").find("textarea[name='" + key + "']").val(
						value);
			});
		},
		error : function(e, textStatus, errorThrown) {
			if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
				console.log(errorThrown);
				alert(msgSearchError);
        	}
		}
	});

};

// ÏùΩÏùåÏ≤¥ÌÅ¨
function fn_noticeReadCheck() {
	for (i = 0; i < colReadList.length; i++) {
		$("#notiIcon" + colReadList[i] + " #newicon").hide();
	}
}

// Í≥µÏßÄÏÇ¨Ìï≠ Ï°∞Ìöå
function fn_moreNotice(elemVal) {
	elemVal.val(Number(elemVal.val()) + 10);
	var nData = {};
	nData["startPoint"] = Number(elemVal.val());
	$.ajax({
		type : "POST",
		url : "/base/selectMoreNoticeList.do",
		data : nData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType : "json",
		success : function(data) {
			colNoticecnt = data.totCnt;
			setTimeout(function() {
				fn_noticeList(data)
			}, 0.0001);
		},
		error : function(e, textStatus, errorThrown) {
			if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
				console.log(errorThrown);
				// alert(msgSearchError);
        	}
		}
	});

}

// Î¶¨Ïä§Ìä∏ Í∑∏Î†§Ï£ºÎäî Î∂ÄÎ∂Ñ
function fn_noticeList(data) {
	if (data.totCnt > Number($("#moreNoticeList").val()) - 10
			|| $("#moreNoticeList").val() == "0") {
		$("#noticeTbl tbody").children().remove();
		var rowData;
		for (var i = 0; i < data.noticeList.length; i++) {
			rowData = data.noticeList[i];
			var rowText = "<tr>";
			rowText = rowText + "<tr onclick='fn_callNoticePop("
					+ rowData.noticeSeq + ")' style='cursor:pointer;'>";
			rowText = rowText + "<td>" + rowData.noticeSn + "</td>";
			rowText = rowText + "<td align='left' id='notiTit"
					+ rowData.noticeSeq + "'>" + rowData.title + "</td>";
			rowText = rowText
					+ "<td id='notiIcon"
					+ rowData.noticeSeq
					+ "'><span class='badge badge-info' style='margin-right:5px' id='newicon'>NEW</span></td>"
			rowText = rowText + "<td >" + rowData.regDt + "</td> ";
			rowText = rowText + "</tr>";
			$("#noticeTbl tbody").append(rowText);
			$("#noticeTbl").css("border-collapse", "collapse")
			$("#noticeTbl tbody").css("overflow-y", "hidden ")
			// $("#noticeTbl tbody").css("height","300px")
		}
		fn_noticeReadCheck();
	} else {
		alert(msgNotice);
	}
};

// notice modal popup
$('ul.bg-white li').on('click', function(){
	var dashNoticeSeq = $(this).find('p.text-sm:hidden').text();
    $('#dashNoticePop').show();
    fn_dashNoticeModalContentPopUp(dashNoticeSeq);
});


function fn_dashNoticeModalContentPopUp(dashNoticeSeq){
	var sData = {};
	sData["srch3"] = dashNoticeSeq;
	$.ajax({
		type : "POST",
		url : "/base/selectDashNoticeViewList.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	fillDashNoticeModalContent(data.resultList);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
};

function fillDashNoticeModalContent(resultList) {
    var notice = resultList[0];
    var noticeDt = notice.noticeDt;
    var year = noticeDt.substring(0, 4);
    var month = noticeDt.substring(4, 6);
    var day = noticeDt.substring(6, 8);
    var formattedNoticeDt = year + "." + month + "." + day;
    
    var edtDt = notice.edtDt;

    document.querySelector('.dashNotice-modal h3').textContent = notice.titleKr;
    document.querySelector('.dashNotice-modal span').textContent = notice.date;
    // document.querySelector('.dashNotice-modal span').textContent = notice.edtDt;
    document.querySelector('.dashNotice-modal textarea').textContent = notice.cnKr;
    
    var strHtml = "";
    if (notice.fileOrgNm) {
        strHtml = '<a href="#" id="dashDownload" style="color:#030303"><i class="fa-regular fa-floppy-disk"></i> Ï≤®Î∂ÄÌååÏùº : ' + notice.fileOrgNm + '</a>';
    }
    
    var dateInfo = document.querySelector('.dashNotice-modal .text-sm');
    if(edtDt == '' || edtDt == null) {
    	dateInfo.textContent = 'Îì±Î°ùÏùº: ' + formattedNoticeDt;
    } else {
    	/*var edtyear = edtDt.substring(0, 4);
        var edtmonth = edtDt.substring(4, 6);
        var edtday = edtDt.substring(6, 8);
        var formattedEdtDt = edtyear + "." + edtmonth + "." + edtday;
    	dateInfo.textContent = 'Îì±Î°ùÏùº: ' + formattedNoticeDt + ' , ÏàòÏ†ïÏùº: ' + formattedEdtDt;*/
    }
    dateInfo.style.fontSize = '13px';
    
    document.querySelector('.dashNotice-modal .text-base').innerHTML = strHtml;
    
    var dashDownloadLink = document.getElementById('dashDownload');
    if (notice.fileOrgNm) {
	    dashDownloadLink.addEventListener('mouseenter', function() {
	    dashDownloadLink.style.color = 'rgb(45 126 98)';
	    dashDownloadLink.style.fontWeight = 'bold';
	    });
	
		dashDownloadLink.addEventListener('mouseleave', function() {
			 dashDownloadLink.style.color = '#030303';
			 dashDownloadLink.style.fontWeight = '';
		});
    }
}


$(document).on('click', '#dashDownload', function(){
	var htmlContent = event.target.innerHTML.trim();
	var fileOrgNm = htmlContent.split(' Ï≤®Î∂ÄÌååÏùº : ')[1];
    $("#dashFileDown").val(fileOrgNm);
    document.dashFileDownForm.action = "/cmmn/dashFileDown.do";
    document.dashFileDownForm.submit();
})

// news modal popUp 
function dashNoticeClose(){
	$("#dashNoticePop").hide();
}

$('div.bg-blue li').on('click', function(){
	var dashNewsSeq = $(this).find('p.text-sm:hidden').text();
    $('#dashNewsPop').show();
    fn_dashNewsModalContentPopUp(dashNewsSeq);
});


function fn_dashNewsModalContentPopUp(dashNewsSeq){
	var sData = {};
	sData["srch3"] = dashNewsSeq;
	$.ajax({
		type : "POST",
		url : "/cmmn/selectNewsModalViewList.do",
		data : sData,
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	filldashNewsModalContent(data.resultList);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
};


function filldashNewsModalContent(resultList) {
    var news = resultList[0];
    var regDt = news.regDt;
    var year = regDt.substring(0, 4);
    var month = regDt.substring(4, 6);
    var day = regDt.substring(6, 8);
    var formattedNewsDt = year + "." + month + "." + day;

    var edtDt = news.edtDt;

    document.querySelector('.dashNews-modal h3').textContent = news.titleKr || '';
    document.querySelector('.dashNews-modal span').textContent = news.regDt || '';
    
    var strHtml = '';
    if (news.fileName && news.fileName.trim() !== '') {
        var fileNames = news.fileName.split('/');
        strHtml = fileNames.map(function(name) {
            return '<a href="#" class="news-file-name" style="color:#030303;">' + '&nbsp;&nbsp;&nbsp;&nbsp;' + name + '</a>';
        }).join('<br>');
        strHtml = '<i class="fa-regular fa-floppy-disk"></i> Ï≤®Î∂ÄÌååÏùº :<br>' + strHtml;
    }

    document.getElementById('mainNewsFileName').innerHTML = strHtml;

    setTimeout(function() {
        var fileNameElements = document.querySelectorAll('.news-file-name');
        fileNameElements.forEach(function(element) {
            element.addEventListener('mouseenter', function() {
                element.style.color = 'rgb(45, 126, 98)';
                element.style.fontWeight = 'bold';
            });

            element.addEventListener('mouseleave', function() {
                element.style.color = '#030303';
                element.style.fontWeight = '';
            });
        });
    }, 0);

    $("#dashNewsContent").html(news.cnKr || '');
    $('#dashNewsContent a').attr('target', '_blank');

    var dateInfo = document.querySelector('.dashNews-modal .text-sm');
    if (!edtDt) {
        dateInfo.textContent = 'Îì±Î°ùÏùº: ' + formattedNewsDt;
    } else {
        var edtyear = edtDt.substring(0, 4);
        var edtmonth = edtDt.substring(4, 6);
        var edtday = edtDt.substring(6, 8);
        var formattedEdtDt = edtyear + "." + edtmonth + "." + edtday;

        dateInfo.textContent = 'Îì±Î°ùÏùº: ' + formattedNewsDt + ' , ÏàòÏ†ïÏùº: ' + formattedEdtDt;
    }
    dateInfo.style.fontSize = '13px';
}



//Ï≤®Î∂ÄÌååÏùº
$(document).on('click', '.dash-file-name', function(event) {
    var htmlContent = event.target.innerHTML.trim();
    var fileName = htmlContent.replace(/&nbsp;/g, '').trim();
    $("#noticeFileDown").val(fileName);
    document.dashNewsFileDownForm.action = "/cmmn/noticesFileDown.do";
    document.dashNewsFileDownForm.submit();
});

// ÎåÄÏãúÎ≥¥Îìú ÎÇ¥ Í¥ÄÏÑ∏Îâ¥Ïä§ 
$(document).on('click', '.news-file-name', function (event) {
    event.preventDefault();
    var htmlContent = event.target.innerHTML.trim();
    var fileName = htmlContent.replace(/&nbsp;/g, '').trim();
    $("#mainNewsFileDown").val(fileName);
    var form = document.mainNewsFileDown;
    form.action = "/cmmn/mainNewsFileDown.do";
    form.submit();
});

function dashNewsClose(){
	$("#dashNewsPop").hide();
}



function dashExcelDownload(){
	
	fn_loading(true);
	var exCol = "";
	var exTit = "";
	var exTitDiv = "";
			//ÏàòÏ∂úÏûÖÌòÑÌô©
	exCol = "markCont|htLeft|180||cnt1|htRight|70||sum1|htRight|130||cnt2|htRight|70||sum2|htRight|130||cnt3|htRight|70||" +
			"sum3|htRight|130||cnt4|htRight|70||sum4|htRight|130||cnt5|htRight|70||sum5|htRight|130||cnt6|htRight|70||sum6|htRight|150|||" +
			"markCont|htLeft|180||cnt1|htRight|70||sum1|htRight|130||cnt2|htRight|70||sum2|htRight|130||cnt3|htRight|70||sum3|htRight|130||" +
			"cnt4|htRight|70||sum4|htRight|130||cnt5|htRight|70||sum5|htRight|130||cnt6|htRight|70||sum6|htRight|150|||supFirm|htLeft|200||" +
			"cnt1|htRight|80||sum1|htRight|150||cnt2|htRight|80||sum2|htRight|150||cnt3|htRight|80||sum3|htRight|150|||buyFirm|htLeft|200||" +
			"cnt1|htRight|80||sum1|htRight|150||cnt2|htRight|80||sum2|htRight|150||cnt3|htRight|80||sum3|htRight|150|||fodMark|htCenter|80||" +
			"title|htLeft|200||traMetCont|htLeft|160||conCod|htCenter|80||cnt|htRight|80||freKrw|htRight|120||totWt|htRight|100||" +
			"totTaxKrw|htRight|150||cal1|htRight|100||cal2|htRight|100|||fodMark|htCenter|80||title|htLeft|200||traMetCont|htLeft|160||" +
			"conCod|htCenter|80||cnt|htRight|80||insuKrw|htRight|120||totWt|htRight|100||totTaxKrw|htRight|150||cal1|htRight|100||cal2|" +
			"htRight|100|||" +
			//ÏàòÏ∂úÏûÖÌòÑÌô©
			//Îã®Í∞ÄÎ∂ÑÏÑù
			"plant|htLeft|150||invoice|htLeft|100||rptNo|htCenter|130||expLisDay|htCenter|150||totRptKrw|htRight|80||" +
			"excDivi|htCenter|80||excDiviCont|htLeft|80|||plant|htLeft|150||po|htLeft|100||blNo|htLeft|130||rptNo|htCenter|140||ranNo|htCenter|65||" +
			"sil|htCenter|65||lisDay|htCenter|95||rgCode|htCenter|130||upi|htRight|90||ut|htCenter|80||conKi|htCenter|80||supFirm|htLeft|140||" +
			"conCur|htCenter|75||upiWon|htRight|110||max|htRight|110||min|htRight|110||avg|htRight|110||maxDiff|htRight|110||minDiff|htRight|110||" +
			"avgDiff|htRight|110||maxPer|htRight|140||minPer|htRight|140||avgPer|htRight|140|||plant|htLeft|150||po|htLeft|100||blNo|htLeft|150||" +
			"rptNo|htCenter|150||ranNo|htCenter|80||sil|htCenter|80||lisDay|htCenter|100||rgCode|htCenter|130||upi|htRight|150||ut|htCenter|80||" +
			"conKi|htCenter|80||supFirm|htLeft|200||conCur|htCenter|100||upiWon|htRight|130||avg|htRight|130|||plant|htLeft|200||rgCode|htLeft|150||" +
			"supFirm|htLeft|200||conCur|htCenter|100||rptCnt|htRight|80||rptSum|htRight|200|||" +
			//Îã®Í∞ÄÎ∂ÑÏÑù
			//ÏàòÏ∂úÏûÖÎç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù
			"rgCode|htCenter|120||hs|htCenter|120||stdGName1|htLeft|200||" +
			"rptNo|htCenter|150||ranNo|htCenter|80||sil|htCenter|80||gsDivi|htCenter|80||gsRate|htRight|100||oriStMark1|htCenter|80||fodMark|htCenter|80||" +
			"qty|htRight|100||conAmt|htRight|100||conCur|htCenter|100||upiWon|htRight|200||gs|htRight|200|||rgCode|htCenter|120||hs|htCenter|120||" +
			"stdGName1|htLeft|200||rptNo|htCenter|150||ranNo|htCenter|80||sil|htCenter|80||gsDivi|htCenter|80||gsRate|htRight|100||oriStMark1|htCenter|80||" +
			"fodMark|htCenter|80||qty|htRight|100||conAmt|htRight|100||conCur|htCenter|100||upiWon|htRight|200||gs|htRight|200|||supFirm|htLeft|200||" +
			"rptNo|htCenter|150||ranNo|htCenter|80||stdName|htLeft|200||rmvRptNo|htCenter|150||rmvRanNo|htCenter|80||rmvStdName|htLeft|200||" +
			"gsDivi|htCenter|80||gsRate|htCenter|80||gs|htRight|150||vatDivi|htCenter|80||vatRate|htRight|80||vat|htRight|200||gsRmvMark|htCenter|100||" +
			"gsRmvRate|htRight|100||rmv|htRight|200||vatRmvMark|htCenter|100||vatRmvRate|htRight|100||vatRmv|htRight|200|||rgCode|htLeft|200||rptNo|htCenter|200||" +
			"ranNo|htCenter|200||sil|htCenter|200||hs|htCenter|200||taxKiDivi|htCenter|200||gxRate|htRight|200||oriStMark1|htCenter|200||fodMark|htCenter|200||lisDay|htCenter|200";
			//ÏàòÏ∂úÏûÖÎç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù
	
			//ÏàòÏ∂úÏûÖ ÌòÑÌô©
	exTit = "null|null||2020|2||2021|2||2022|2||2023|2||2024-05-29|2||Ìï©Í≥Ñ|2|||Í±∞ÎûòÍµ¨Î∂Ñ|null||ÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||ÏàòÏûÖ(Í±¥)|null||" +
			"ÏàòÏûÖ(KRW)|null||ÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||ÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||ÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||ÏàòÏûÖ(Í±¥)|null||" +
			"ÏàòÏûÖ(KRW)|null||||null|null||2020|2||2021|2||2022|2||2023|2||2024-05-29|2||Ìï©Í≥Ñ|2|||Í±∞ÎûòÍµ¨Î∂Ñ|null||ÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||" +
			"ÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||ÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||ÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||ÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||ÏàòÏ∂ú(Í±¥)|null||" +
			"ÏàòÏ∂ú(KRW)|null||||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||ÏùºÎ∞òÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||Í∏∞ÌÉÄÏàòÏûÖ(Í±¥)|null||ÏàòÏûÖ(KRW)|null||ÏàòÏûÖÌï©Í≥Ñ(Í±¥)|null||ÏàòÏûÖÌï©Í≥Ñ(KRW)|null||||" +
			"Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||ÏùºÎ∞òÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||Í∏∞ÌÉÄÏàòÏ∂ú(Í±¥)|null||ÏàòÏ∂ú(KRW)|null||ÏàòÏ∂úÌï©Í≥Ñ(Í±¥)|null||ÏàòÏ∂úÌï©Í≥Ñ(KRW)|null||||Ï†ÅÏ∂úÍµ≠|null||" +
			"Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||Ïö¥ÏÜ°ÌòïÌÉú|null||Ïù∏ÎèÑÏ°∞Í±¥|null||Ïã†Í≥†Í±¥Ïàò|null||Ïö¥ÏûÑ|null||Ï¥ùÏ§ëÎüâ(KG)|null||Í≥ºÏÑ∏Í∞ÄÍ≤©(KRW)|null||Ïö¥ÏûÑ/Ï§ëÎüâ(KRW)|null||Ïö¥ÏûÑ/Í≥ºÏÑ∏Í∞ÄÍ≤©(%)|null||||" +
			"Ï†ÅÏ∂úÍµ≠|null||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||Ïö¥ÏÜ°ÌòïÌÉú|null||Ïù∏ÎèÑÏ°∞Í±¥|null||Ïã†Í≥†Í±¥Ïàò|null||Î≥¥ÌóòÎ£å|null||Ï¥ùÏ§ëÎüâ(KG)|null||Í≥ºÏÑ∏Í∞ÄÍ≤©(KRW)|null||Î≥¥ÌóòÎ£å/Ï§ëÎüâ(KRW)|null||" +
			"Î≥¥ÌóòÎ£å/Í≥ºÏÑ∏Í∞ÄÍ≤©(%)|null||||PO|null||Ïù∏Î≥¥Ïù¥Ïä§Î≤àÌò∏|null||Ïã†Í≥†Î≤àÌò∏|null||ÏàòÎ¶¨ÏùºÏûê|null||Ïã†Í≥†Í∞ÄÍ≤©|null||ÏàòÏ∂úÏΩîÎìú|null||Ïô∏ÌôòÏã†Í≥†ÎåÄÏÉÅÏó¨Î∂Ä|null||||" +
			//ÏàòÏ∂úÏûÖ ÌòÑÌô©
			//Îã®Í∞ÄÎ∂ÑÏÑù
			"Í≥µÏû•ÏΩîÎìú|null||PO|null||B/L|null||Ïã†Í≥†Î≤àÌò∏|null||ÎûÄ|null||Í∑úÍ≤©|null||ÏàòÎ¶¨ÏùºÏûê|null||ÏûêÏû¨ÏΩîÎìú|null||Ïã†Í≥†Îã®Í∞Ä|null||Ïã†Í≥†Îã®ÏúÑ|null||Í≤∞Ï†úÎ∞©Î≤ï|null||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||" +
			"Í≤∞Ï†úÌÜµÌôî|null||ÏõêÌôîÎã®Í∞Ä|null||ÏµúÍ≥†Îã®Í∞Ä|null||ÏµúÏ†ÄÎã®Í∞Ä|null||ÌèâÍ∑†Îã®Í∞Ä|null||Îã®Í∞ÄÏ∞®Ïù¥(ÏµúÍ≥†)|null||Îã®Í∞ÄÏ∞®Ïù¥(ÏµúÏ†Ä)|null||Îã®Í∞ÄÏ∞®Ïù¥(ÌèâÍ∑†)|null||Îã®Í∞ÄÏ∞®Ïù¥ ÎπÑÏú®(ÏµúÍ≥†)|null||" +
			"Îã®Í∞ÄÏ∞®Ïù¥ ÎπÑÏú®(ÏµúÏ†Ä)|null||Îã®Í∞ÄÏ∞®Ïù¥ ÎπÑÏú®(ÌèâÍ∑†)|null||||Í≥µÏû•ÏΩîÎìú|null||PO|null||B/L|null||Ïã†Í≥†Î≤àÌò∏|null||ÎûÄ|null||Í∑úÍ≤©|null||ÏàòÎ¶¨ÏùºÏûê|null||ÏûêÏû¨ÏΩîÎìú|null||" +
			"Ïã†Í≥†Îã®Í∞Ä|null||Ïã†Í≥†Îã®ÏúÑ|null||Í≤∞Ï†úÎ∞©Î≤ï|null||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||Í≤∞Ï†úÌÜµÌôî|null||ÏõêÌôîÎã®Í∞Ä|null||ÌèâÍ∑†Îã®Í∞Ä|null||||Í≥µÏû•ÏΩîÎìú|null||ÏûêÏû¨ÏΩîÎìú|null||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||" +
			"Í≤∞Ï†úÌÜµÌôî|null||Ïã†Í≥†Í±¥Ïàò|null||Ïã†Í≥†Í∏àÏï°(ÏõêÌôî)|null||||ÏûêÏû¨ÏΩîÎìú|null||ÏÑ∏Î≤àÎ∂ÄÌò∏|null||Í±∞ÎûòÌíàÎ™Ö|null||ÏàòÏûÖÏã†Í≥†Î≤àÌò∏|null||ÎûÄÎ≤àÌò∏|null||Í∑úÍ≤©|null||Í¥ÄÏÑ∏Íµ¨Î∂Ñ|null||Í¥ÄÏÑ∏Ïú®|null||" +
			"ÏõêÏÇ∞ÏßÄ|null||Ï†ÅÏ∂úÍµ≠|null||ÏàòÎüâ|null||Í≤∞Ï†úÍ∏àÏï°|null||Í≤∞Ï†úÌÜµÌôî|null||ÏõêÌôîÍ∏àÏï°|null||ÎÇ©Î∂ÄÍ¥ÄÏÑ∏Ïï°|null||||" +
			//Îã®Í∞ÄÎ∂ÑÏÑù
			//ÏàòÏ∂úÏûÖ Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù
			"ÏûêÏû¨ÏΩîÎìú|null||ÏÑ∏Î≤àÎ∂ÄÌò∏|null||Í±∞ÎûòÌíàÎ™Ö|null||ÏàòÏûÖÏã†Í≥†Î≤àÌò∏|null||" +
			"ÎûÄÎ≤àÌò∏|null||Í∑úÍ≤©|null||Í¥ÄÏÑ∏Íµ¨Î∂Ñ|null||Í¥ÄÏÑ∏Ïú®|null||ÏõêÏÇ∞ÏßÄ|null||Ï†ÅÏ∂úÍµ≠|null||ÏàòÎüâ|null||Í≤∞Ï†úÍ∏àÏï°|null||Í≤∞Ï†úÌÜµÌôî|null||ÏõêÌôîÍ∏àÏï°|null||ÎÇ©Î∂ÄÍ¥ÄÏÑ∏Ïï°|null||||null|null||" +
			"Í¥ÄÏÑ∏Í∞êÎ©¥Ï†ÅÏö© Í±¥ Ïàò|3||Í¥ÄÏÑ∏Í∞êÎ©¥ÎØ∏Ï†ÅÏö© Í±¥ Ïàò|3||Ï¥ùÍ¥ÄÏÑ∏Ïï°|3||Ï¥ùÎ∂ÄÍ∞ÄÏÑ∏Ïï°|3||Í¥ÄÏÑ∏Í∞êÎ©¥ÏÑ∏Ïï°|3||Î∂ÄÍ∞ÄÏÑ∏Í∞êÎ©¥ÏÑ∏Ïï°|3|||Ìï¥Ïô∏Í±∞ÎûòÏ≤ò|null||ÏàòÏûÖÏã†Í≥†Î≤àÌò∏|null||ÎûÄ|null||Í±∞ÎûòÌíàÎ™Ö|null||" +
			"ÏàòÏûÖÏã†Í≥†Î≤àÌò∏|null||ÎûÄ|null||Í±∞ÎûòÌíàÎ™Ö|null||Í¥ÄÏÑ∏Íµ¨Î∂Ñ|null||Í¥ÄÏÑ∏Ïú®|null||Í¥ÄÏÑ∏Ïï°|null||Î∂ÄÍ∞ÄÏÑ∏Íµ¨Î∂Ñ|null||Î∂ÄÍ∞ÄÏÑ∏Ïú®|null||Î∂ÄÍ∞ÄÏÑ∏Ïï°|null||Í¥ÄÏÑ∏Í∞êÎ©¥Î∂ÄÌò∏|null||Í¥ÄÏÑ∏Í∞êÎ©¥Ïú®|null||" +
			"Í¥ÄÏÑ∏Í∞êÎ©¥ÏÑ∏Ïï°|null||Î∂ÄÍ∞ÄÏÑ∏Í∞êÎ©¥Î∂ÄÌò∏|null||Î∂ÄÍ∞ÄÏÑ∏Í∞êÎ©¥Ïú®|null||Î∂ÄÍ∞ÄÏÑ∏Í∞êÎ©¥ÏÑ∏Ïï°|null||||ÏûêÏû¨ÏΩîÎìú|null||ÏàòÏûÖÏã†Í≥†Î≤àÌò∏|null||ÎûÄ|null||Í∑úÍ≤©|null||HS CODE|null||ÏÑ∏Ï¢Ö|null||ÏÑ∏Ïú®|null||ÏõêÏÇ∞ÏßÄ|null||Ï†ÅÏ∂úÍµ≠|null||ÏàòÏûÖÏã†Í≥† ÏàòÎ¶¨Ïùº|null";
			//ÏàòÏ∂úÏûÖ Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù
	
	exTitDiv = "1|5ÎÖÑÏπò_ÏàòÏûÖÏã§Ï†Å||2|5ÎÖÑÏπò_ÏàòÏ∂úÏã§Ï†Å||3|Ìï¥Ïô∏Í±∞ÎûòÏ≤òÎ≥Ñ_ÏàòÏûÖÏã§Ï†Å||4|Ìï¥Ïô∏Í±∞ÎûòÏ≤òÎ≥Ñ_ÏàòÏ∂úÏã§Ï†Å||5|Ïö¥ÏûÑ_ÎπÑÍµê||6|Î≥¥ÌóòÎ£å_ÎπÑÍµê||7|Ïô∏ÌôòÏã†Í≥†ÎåÄÏÉÅ_ÏàòÏ∂ú||" + //ÏàòÏ∂úÏûÖ ÌòÑÌô©
			   "8|ÏàòÏûÖÎ¨ºÌíà_Îã®Í∞ÄÎπÑÍµê||9|Ïú†Î¨¥ÏÉÅ_ÏàòÏûÖÍ±¥_Í≥ºÏÑ∏Í∞ÄÍ≤©_ÎπÑÍµê||10|ÎèôÏùºÍ±∞Îûò,_Í≤∞Ï†úÌÜµÌôî_Î≥ÄÍ≤ΩÏ†êÍ≤Ä||" +  //Îã®Í∞ÄÎ∂ÑÏÑù
			   "11|ÎèôÏùºÏûêÏû¨ÏΩîÎìú_ÌíàÎ™©Î∂ÑÎ•ò_ÏÉÅÏù¥Ï†êÍ≤Ä||12|ÎèôÏùºÏûêÏû¨ÏΩîÎìú_Í¥ÄÏÑ∏Íµ¨Î∂Ñ_ÏÉÅÏù¥Ï†êÍ≤Ä||13|Í∞êÎ©¥_Ï†ÅÏö©_ÏùºÍ¥ÄÏÑ±_Í≤ÄÌÜ†||14|FTA_ÏßÅÏ†ëÏö¥ÏÜ°ÏõêÏπô"; //ÏàòÏ∂úÏûÖ Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù
	
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	
	var startDt = new Date();
	startDt.setMonth(startDt.getMonth() - 1);
	startDt.setDate(1);
	
	var endDt = new Date();
	endDt.setMonth(endDt.getMonth(), 1);
	endDt.setDate(endDt.getDate() - 1);
	
	var today = startDt.toISOString().substring(0,10);
	var mtoday = endDt.toISOString().substring(0,10);
	
	$("#importUp_srch2").val(today);
	$("#importUp_srch3").val(mtoday);
	
	var parameters = {exCol : "", exTit: "", exTitDiv: "", exType: "", srch2: "", srch3: "", srch40: ""};
	
	
	parameters.exCol = exCol.replace(/ /g,"_");
	parameters.exTit = exTit.replace(/ /g,"_");
	parameters.exTitDiv = exTitDiv.replace(/ /g,"_");
	parameters.exType = "01";
	parameters.srch2 = today;
	parameters.srch3 = mtoday;
	parameters.srch40 = "TEST";
	
	
	$.ajax({
		 url: "/dashboard/dashDownloadExcel.do",
		 data: parameters,
		 type: 'POST',
		 cache: false,
		 timeout: 200000,
		 xhrFields: {
			 responseType: "blob",
		 },
	    success: function(blob, status, xhr) {
	    	try {
				// check for a filename
				 var fileName = "";
				 var disposition = xhr.getResponseHeader("Content-Disposition");

			       if (disposition && disposition.indexOf("attachment") !== -1) {
			      	 var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
			           var matches = filenameRegex.exec(disposition);

			           if (matches != null && matches[1]) {
			               fileName = decodeURI(matches[1].replace(/['"]/g, ""));
			           }
			       }

			       // for IE
			       if (window.navigator && window.navigator.msSaveOrOpenBlob) {
			           window.navigator.msSaveOrOpenBlob(blob, fileName);
			       } else {
			           var URL = window.URL || window.webkitURL;
			           var downloadUrl = URL.createObjectURL(blob);

			           if (fileName) {
			               var a = document.createElement("a");

			               // for safari
			               if (a.download === undefined) {
			                   window.location.href = downloadUrl;
			               } else {
			                   a.href = downloadUrl;
			                   a.download = fileName;
			                   document.body.appendChild(a);
			                   a.click();
			               }
			           } else {
			               window.location.href = downloadUrl;
			           }
			       }
		       fn_loading(false);
			} catch (e) {
				console.log(e);
				fn_loading(false);
			};
	    },
	    error: function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	    	}
	    }
	});
	
}

function fn_loadingReport() {
	
	//ÏóÖÎ°úÎìú Modal Action
	const modalReport = document.querySelector('.modal-popup-report')
	const modalRepor = document.querySelector('.modal-report')
	modalReport.classList.remove('hidden')
	modalReport.classList.add('flex')
	modalRepor.classList.remove('hidden')
	modalRepor.classList.add('block')

}


function fn_CloseAnalysis() {
	const modalReport = document.querySelector('.modal-popup-report')
	//const contactModal = document.querySelector('.contact-modal')
	const modalRepo = document.querySelector('.modal-report')
	modalReport.classList.remove('flex')
	modalReport.classList.add('hidden')
	modalRepo.classList.remove('block')
	modalRepo.classList.add('hidden')
	popupState = false
}


modalCloseReport = document.querySelector('.modal-close-report')
modalCloseReport.addEventListener('click', () => {
 const modalReport = document.querySelector('.modal-popup-report')
 //const contactModal = document.querySelector('.contact-modal')
 const modalRepo = document.querySelector('.modal-report')
 modalReport.classList.remove('flex')
 modalReport.classList.add('hidden')
 modalRepo.classList.remove('block')
 modalRepo.classList.add('hidden')
 popupState = false
})

document.getElementById("reportAnalysis").addEventListener("click", function(event) {
    event.preventDefault(); // Í∏∞Î≥∏ ÎèôÏûë Î∞©ÏßÄ
    //fn_loading(true);
    
$('.table-container').css('display', 'block');
		var cmpnyNameStr = cmpnyName;
		
		if (Array.isArray(cmpnyName)) {
		    cmpnyNameStr = cmpnyName.join(', ');
		} else if (typeof cmpnyName === 'string') {
		    cmpnyNameStr = cmpnyName.replace(/[\[\]]/g, '').trim();
		}
		
		$("#reportInfo").html('');
		var newRow = "";
		newRow =  "<tr><td>"+ $("#dashbordDate").val()+"_"+cmpnyNameStr +"</td><td id='analySts1'><img class='loadingReport' src='/pf/css/images/loading-table-unscreen.gif' /></td></tr>" ;
		$("#reportInfo").append(newRow);	
		
		fn_loadingReport();
    
    // FTAÍ∏∞Ï§ÄÏùº
    var url = "/rpt/reportAnalysisPdf.do"; // ÏÑúÎ≤Ñ Ï∏° Îß§ÌïëÍ≥º ÏùºÏπòÌïòÎäî URLÎ°ú ÏÑ§Ï†ï
    // Îç∞Ïù¥ÌÑ∞ Íµ¨ÏÑ±
    var sData = {};
    sData["srch8"] = $("#dashbordDate").val();
    console.log("ÎÇ†Ïßú"+$("#dashbordDate").val());
   
    $.ajax({
		 url: url,
		 data: sData,
		 type: 'GET',
		 dataType : 'json',
		 success: function(response) {
			    console.log("response", response);  
			    exportRptPdf(response); 
			    
			    
			},
	    error: function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	    	}
	    }
	});
});



function exportRptPdf(data){
	let globalIndex = 1; // Ï†ÑÏ≤¥ ÏÜåÏ†úÎ™© Î≤àÌò∏
	let canvas = "";
	let rightCanvas = "";
	
	let lastYPage1 = 0;
	let lastYPage2 = 0;
	let lastYPage3 = 0;
	let lastYPage4 = 0;
	let lastYPage5 = 0;
	let lastYPage6 = 0;
	let lastYPage7 = 0;
	let lastYPage8 = 100;
	let lastYPage9 = 0;
	let lastYPage10 = 0;
	let lastYPage11 = 0;
	let lastYPage12 = 0;
	
	let pdf7canvas , pdf8canvas;
	let pdf7ctx , pdf8ctx;
	/*Ïó¨Í∏∞*/
	let noDataMsg = "";
	let chartPage3, chartY3,chartPage4, chartY4,chartPage2, chartY2,page1, safeParse,chartPage5 ,chartPage1,chartY1,chartY5 ,chartPage6, chartY6, chartPage7, chartY7;
	
	
	
	if (!window.jsPDF) window.jsPDF = window.jspdf.jsPDF;
        var doc = new jsPDF({
            orientation: "portrait",
            unit: "mm",
            format: "a4"
        });
        
        // ‚úÖ ÌïúÍ∏Ä Ìè∞Ìä∏ Ï∂îÍ∞Ä (malgun.ttf ÌïÑÏöî)
        doc.addFont('/pf/fonts/NanumSquare.ttf', 'NanumSquare', 'normal');
        doc.setFont('NanumSquare'); // ÏÇ¨Ïö©ÌïòÎ†§Îäî Ìè∞Ìä∏ ÏßÄÏ†ï
        

        var img = new Image();
        //img.src = '/pf/images/report_2.jpg'; //ÌååÎûÄ
        img.src = '/pf/images/green_report2.jpg'; 
        var logoImg = new Image();
        logoImg.src = '/pf/images/report_4.png';
        var QRImg = new Image();
        QRImg.src = '/pf/images/IOOMQR.png';
        var ioomLogoImg = new Image();
        ioomLogoImg.src = '/pf/images/ioomLogo.png';

        img.onload = function () {
        	doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'normal');
            console.log("Background image loaded successfully");
            doc.addImage(img, 'JPEG', 0, 0, 210, 297);
            doc.addImage(logoImg, 'PNG', 160, 10, 40, 15);
            doc.addImage(QRImg, 'PNG', 180, 260, 16, 16);
            doc.addImage(ioomLogoImg, 'PNG', 181, 278, 14,5);
           // doc.addImage(ioomLogoImg, 'PNG', 181, 253, 14,5);

            doc.setFontSize(22);
            //doc.setTextColor(56, 60, 98); ÌååÎûÄ
            doc.setTextColor(35, 69, 56);
            //doc.text(105, 110, String(data.rptDate1) + 'ÎÖÑ ' + String(data.rptDate2) + 'Ïõî', { align: "center" }); ÌååÎûÄ
            doc.text(105, 110, String(data.rptDate1) + 'ÎÖÑ ' + String(data.rptDate2) + 'Ïõî', { align: "center" });
            doc.setFontSize(22);
            //doc.text(105, 120, 'ÌÜµÍ¥ÄÎ¶¨Ìè¨Ìä∏', { align: "center" }); ÌååÎûÄ
            doc.text(105, 120, 'ÌÜµÍ¥ÄÎ¶¨Ìè¨Ìä∏', { align: "center" }); 
            doc.setFontSize(30);
            //doc.text(105, 135, String(data.cmpnyInfo), { align: "center" }); ÌååÎûÄ
            doc.text(105, 160, String(data.cmpnyInfo), { align: "center" }); 
            doc.setFontSize(13);
            
            let coverY = 210;

            var label = '‚óè Î∂ÑÏÑù ÎåÄÏÉÅ ÌöåÏÇ¨ : ';
            var companyText = data.cmpnyList.join(', '); // ÌöåÏÇ¨ Î¶¨Ïä§Ìä∏ ÌÖçÏä§Ìä∏Î°ú Ìï©ÏπòÍ∏∞

            var splitText = doc.splitTextToSize(companyText, 90); // Ïó¨Í∏∞Ïóê ÎÑàÎπÑÎ•º Ï£ºÏñ¥ ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøà ÏÉùÏÑ±
            var labelWidth = doc.getTextWidth(label); // ÎùºÎ≤® ÎÑàÎπÑ Í≥ÑÏÇ∞

            if (data.cmpnyList && data.cmpnyList.length > 1) {
	            splitText.forEach((line, index) => {
	                if (index === 0) {
	                    doc.text(60, coverY, label + line, { align: "left" });
	                } else {
	                    doc.text(60 + labelWidth, coverY, line, { align: "left" }); // X Ï¢åÌëú Ïò§Î•∏Ï™ΩÏúºÎ°ú Îì§Ïó¨Ïì∞Í∏∞
	                }
	                coverY += 8;
	            });
            }
            coverY += 5;
            doc.text(60, coverY, '‚óè Î∂ÑÏÑù ÎåÄÏÉÅ Í∏∞Í∞Ñ : ' + String(data.fomateStartDate) + " ~ " + String(data.fomateEndDate), { align: "left" });
            coverY += 10;

            doc.text(60, coverY, '‚óè Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± ÏùºÏûê : ' + String(data.today), { align: "left" });
            
           

            doc.setFontSize(13);
            coverY += 25;
            doc.text(105, 280, 'Ïã†ÌïúÍ¥ÄÏÑ∏Î≤ïÏù∏', { align: "center" });
            doc.setFontSize(9);
            doc.text(150, 290, 'Copyright ¬© iOOM. All rights reserved.');
           
            
           
            
            // Î™©Ï∞®
            doc.addPage();
            
            var pageHeight13 = doc.internal.pageSize.getHeight();
            var boxMargin13 = 5; // ÏúÑÏïÑÎûò Ïó¨Î∞±

            var boxY13 = boxMargin13;
            var boxHeight13 = pageHeight13 - boxMargin13 * 2;

            
            doc.setLineWidth(1);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
            doc.setDrawColor(35, 69,56); 
            doc.rect(5, boxY13, 200, boxHeight13);  // (x, y, width, height)


           
            var pageWidth = doc.internal.pageSize.getWidth();
            let currentY = 60;

            // === Ï†úÎ™© "Contents" Ï§ëÏïô Ï†ïÎ†¨ Î∞è ÏúÑÏïÑÎûò Ïã§ÏÑ† ===
            var title = "Contents";
            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'normal');
            doc.setFont('NanumSquareEB', 'normal');
            doc.setFontSize(22);
            var titleWidth = doc.getTextWidth(title);
            var centerX = pageWidth / 2;

            // ÏúÑ ÏÑ†
            doc.setLineWidth(0.7);
            doc.line(centerX - titleWidth / 2 - 25, currentY - 9, centerX + titleWidth / 2 + 25, currentY - 9);

            // ÏïÑÎûò ÏÑ†
            doc.line(centerX - titleWidth / 2 - 25, currentY + 4, centerX + titleWidth / 2 + 25, currentY + 4);

            // Ï†úÎ™© Ï∂úÎ†•
            doc.text(title, centerX, currentY, { align: 'center' });
            currentY += 25; // Îã§Ïùå Ï§ÑÎ°ú Ïù¥Îèô

            // === Î™©Ï∞® Ìï≠Î™© ÏÑ§Ï†ï ===
            doc.setFontSize(12);

            var contents = [
            	  {
            	    section: '01',
            	    title: 'Ïàò ÏûÖ',
            	    items: ['ÏàòÏûÖÌÜµÍ¥ÄÌòÑÌô©','ÏàòÏûÖÌÜµÍ¥Ä ÏÑ∏Ïï°ÌòÑÌô©', 'ÏàòÏûÖÎ¨ºÌíà Ï†ÅÏö©ÏÑ∏Ïú®' ,'ÏàòÏûÖÎ¨ºÌíà Í≥ºÏÑ∏ÌòÑÌô©',  'FTA ÏÇ¨ÌõÑÏ†ÅÏö©Í∏àÏï°', 'FTA Í¥ÄÏÑ∏ Ï†àÍ∞êÌö®Í≥º', 'Ï£ºÏöî Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò'],
            	  },
            	  {
            	    section: '02',
            	    title: 'Ïàò Ï∂ú',
            	    items: ['ÏàòÏ∂úÌÜµÍ¥ÄÌòÑÌô©','Ï£ºÏöî Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò'],
            	  },
            	  {
            	    section: '03',
            	    title: 'Í≥µ ÌÜµ',
            	    items: ['ÏàòÏ∂úÏûÖ Ï†ïÏ†ï Í∑ÄÏ±ÖÏûêÎ≥Ñ ÎπÑÏú®', 'ÏàòÏ∂úÏûÖ Ï†ïÌòïÏ°∞Í±¥', 'ÏÑ∏Í¥ÄÎ≥Ñ Ïã†Í≥†Í±¥Ïàò Î∞è Í∏àÏï°'],
            	  }
            	];

            	let indexY = 95;
            	
            	//doc.setFont('NanumSquareEB', 'normal');

            	contents.forEach((section, idx) => {
            		doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
            		doc.setFontSize(21);
                	doc.setTextColor(108, 179, 63); // Ïó∞ÎëêÏÉâ Î≤àÌò∏
            	  // ÌÅ∞ Î≤àÌò∏
            	  var secNum = section.section;
            	  var secNumX = 75;
            	  doc.text(secNum, secNumX, indexY);
            	  
            	  // ÏÑ∏Î°úÏ§Ñ Í∑∏Î¶¨Í∏∞ (secNumXÏóêÏÑú Ïò§Î•∏Ï™ΩÏúºÎ°ú 20 Ï†ïÎèÑ Îñ®Ïñ¥ÏßÑ ÏúÑÏπòÏóêÏÑú ÏÑ∏Î°úÏÑ† Í∑∏Î¶¨Í∏∞)
              	 /* doc.setLineWidth(0.5);
              	  doc.setDrawColor(108, 179, 63); // Ïó∞ÎëêÏÉâ
              	  doc.line(secNumX +5, indexY - 5, secNumX + 5, indexY + 30); // ÏÑ∏Î°úÏ§Ñ ÏãúÏûëÍ≥º ÎÅù ÏúÑÏπò Ï°∞Ï†ï
*/            	  
            	  doc.setFontSize(15);
              	  doc.setTextColor(108, 179, 63); // Ïó∞ÎëêÏÉâ Î≤àÌò∏

            	  // Ï†úÎ™©
            	  doc.setTextColor(0, 0, 0); // Í≤ÄÏ†ï
            	  //doc.setFont('NanumSquareB', 'normal');
            	  doc.setFontSize(14);
            	  doc.text(section.title, 90, indexY);

            	  indexY += 8;

            	  // ÏÜåÌï≠Î™©
            	  doc.setFontSize(12);
            	  section.items.forEach((item) => {
            	    doc.text(`${globalIndex}. ${item}`, 100, indexY);
            	    indexY += 10;
            	    globalIndex++; // Ï†ÑÏó≠ Î≤àÌò∏ Ï¶ùÍ∞Ä
            	  });

            	  indexY += 10; // Íµ¨Í∞Ñ Í∞Ñ Ïó¨Î∞±
            	});
            	
               
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                doc.setFontSize(8.5);
               // doc.setTextColor(35, 69, 56);
                doc.text(105, 285, '- Î≥∏ Î¨∏ÏÑúÎäî ÌÜµÍ¥Ä Ïù¥Î†•ÏùÑ Í∏∞Î∞òÏúºÎ°ú Ï†ïÎ¶¨Îêú ÏûêÎ£åÏù¥Î©∞, IOOM ÌÜµÍ¥Ä Î∂ÑÏÑù ÏãúÏä§ÌÖúÏùÑ ÌÜµÌï¥ ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±Îêú Î≥¥Í≥†ÏÑúÏûÖÎãàÎã§. -', { align: "center" });
            // üü¢ ÏÉàÎ°úÏö¥ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
            doc.addPage();

            // üü¢ "ÏàòÏûÖÌÜµÍ¥ÄÌòÑÌô©" Ï†úÎ™© Ï∂îÍ∞Ä
            doc.setFontSize(16);
            doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
            doc.setFont('NanumSquareB', 'normal');
            doc.setTextColor(71, 140, 114); 
            doc.text(8, 15, "1.ÏàòÏûÖÌÜµÍ¥ÄÌòÑÌô©");
            
            // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
            var boxMargin = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
            var boxWidth = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
            var boxHeight = 23;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
            
            doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
            doc.setDrawColor(35, 69,56); 
            doc.rect(5, 8, boxWidth, boxHeight, 'D'); 
            
            
            var reportData1 = data.reportData1;  // data.reportData1Ïù¥ Ï†úÍ≥µÎêúÎã§Í≥† Í∞ÄÏ†ï
            	console.log("reportData1",reportData1);
	            // Îç∞Ïù¥ÌÑ∞ Î≥ÄÌôò: Í≥ºÏÑ∏Í∞ÄÍ≤©ÏùÑ Ìè¨Îß§ÌåÖÎêú Í∞íÍ≥º ÏõêÎ≥∏ Í∞íÏúºÎ°ú Íµ¨Î∂ÑÌïòÏó¨ Ï†ÄÏû•
	            var datas = reportData1.map(item => {
	              var amountKrw = parseFloat(item.amountKrw) || 0;  // ÏõêÎ≥∏ Í∞í
	              var formattedAmountKrw = Intl.NumberFormat("ko-KR").format(amountKrw);  // Ìè¨Îß§ÌåÖÎêú Í∞í
	              
	              return [
	                item.lisDay,        // ÏàòÎ¶¨ÏùºÏûê
	                item.cnt,           // Í±¥Ïàò
	                formattedAmountKrw, // Í≥ºÏÑ∏Í∞ÄÍ≤© (Ìè¨Îß§ÌåÖÎêú Í∞í)
	                item.txType1,       // ÏùºÎ∞òÏàòÏûÖ
	                item.txType2,       // ÏàòÎ¶¨Î¨ºÌíà
	                item.txType3,       // Í≤¨Ìíà Î∞è Í¥ëÍ≥†Ïö©Ìíà
	                item.txType4,       // Í∏∞ÌÉÄ ÏàòÏûÖ ÏäπÏù∏Î©¥ÏÑ∏
	                item.txType5,       // Ïû¨ÏàòÏ∂úÏ°∞Í±¥
	                item.txPrc1,        // P/L
	                item.txPrc2,        // Ï†úÏ∂úÏÑúÎ•ò
	                item.txPrc3,        // Í≤ÄÏÇ¨
	              ];
	            });
		        
	            // ‚ñº 1) ‚ÄòÌï©Í≥Ñ‚Äô¬∑‚ÄòÎπÑÏú®(%)‚Äô Ìñâ Ï∂îÏ∂ú
	            var totalRow    = reportData1.find(row => row.lisDay === "Ìï©Í≥Ñ");
	            var percentRow  = reportData1.find(row => row.lisDay === "ÎπÑÏú®(%)");

	            // ÏïàÏ†Ñ Ï≤òÎ¶¨: Îëê ÌñâÏù¥ ÏóÜÏúºÎ©¥ ÏóêÎü¨ Î∞©ÏßÄ
	            if (!totalRow || !percentRow) {
	              console.error("Ìï©Í≥Ñ¬∑ÎπÑÏú® ÌñâÏù¥ ÏóÜÏäµÎãàÎã§");
	              return;
	            }

	            // ‚ñº 2) Ïà´Ïûê Ïª¨Îüº ‚Üí Ï≤ú Îã®ÏúÑ ÏΩ§Îßà
	            var nf = new Intl.NumberFormat("ko-KR");
	            var formatNum = v => (v === "" || v == null ? "" : nf.format(Number(v)));

	            // Ìï©Í≥Ñ Ìñâ Ìè¨Îß∑
	            var formattedTotals = {
	              cnt:         formatNum(totalRow.cnt),
	              amountKrw:   formatNum(totalRow.amountKrw),
	              txType1:     formatNum(totalRow.txType1),
	              txType2:     formatNum(totalRow.txType2),
	              txType3:     formatNum(totalRow.txType3),
	              txType4:     formatNum(totalRow.txType4),
	              txType5:     formatNum(totalRow.txType5),
	              txPrc1:      formatNum(totalRow.txPrc1),
	              txPrc2:      formatNum(totalRow.txPrc2),
	              txPrc3:      formatNum(totalRow.txPrc3)
	            };

	            // ‚ñº 3) ÎπÑÏú® Ìñâ(Î¨∏ÏûêÏó¥ ‚Äú97.45%‚Äù ÌòïÏãùÏù¥ÎØÄÎ°ú Í∑∏ÎåÄÎ°ú ÏÇ¨Ïö©)
	            var percentages = {
	              txType1: percentRow.txType1,  // "97.45%"
	              txType2: percentRow.txType2,
	              txType3: percentRow.txType3,
	              txType4: percentRow.txType4,
	              txType5: percentRow.txType5,
	              txPrc1:  percentRow.txPrc1,
	              txPrc2:  percentRow.txPrc2,
	              txPrc3:  percentRow.txPrc3
	            };

	            // ‚ñº 4) ÌïÑÏöîÌïú Í∞í Í∫ºÎÇ¥Í∏∞
	            var countTotal            = formattedTotals.cnt || 0;      // ÌÜµÍ¥ÄÍ±¥Ïàò
	            var plTotal               = formattedTotals.txPrc1 || 0;   // P/L Ìï©Í≥Ñ
	            var plPercentage          = percentages.txPrc1 || 0;       // P/L ÎπÑÏú®
	            var submissionTotal       = formattedTotals.txPrc2 || 0;   // Ï†úÏ∂úÏÑúÎ•ò Ìï©Í≥Ñ
	            var submissionPercentage  = percentages.txPrc2 || 0;       // Ï†úÏ∂úÏÑúÎ•ò ÎπÑÏú®
	            var inspectionTotal       = formattedTotals.txPrc3 || 0;   // Í≤ÄÏÇ¨ Ìï©Í≥Ñ
	            var inspectionPercentage  = percentages.txPrc3 || 0;       // Í≤ÄÏÇ¨ ÎπÑÏú®
		            
		            
		            // üü¢ ÏÑ§Î™Ö Ï∂îÍ∞Ä (ÏôºÏ™Ω Ï†ïÎ†¨ + Ï§Ñ ÎÇòÎàÑÍ∏∞)
		            doc.setFontSize(9);
		            doc.addFont('/pf/fonts/NanumSquareR.ttf', 'NanumSquareR', 'normal');
		            doc.setFont('NanumSquareR', 'normal');
		            doc.setTextColor(0, 0, 0);
		            var description = [
		            	`Îã§Ïùå ÏûêÎ£åÎäî ${data.rptDate2}Ïõî Ìïú Îã¨ ÏàòÏûÖÌÜµÍ¥Ä ÏûêÎ£åÏù¥Î©∞ Ï¥ù ${countTotal}Í±¥ ÏàòÏûÖÏã†Í≥†Î•º ÏßÑÌñâÌïòÏòÄÏäµÎãàÎã§.`,
		                `ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ ÌòÑÌô©ÏùÄ P/L ${plTotal}Í±¥ (${plPercentage}), ÏÑúÎ•ò Ï†úÏ∂ú ${submissionTotal}Í±¥ (${submissionPercentage}), Í≤ÄÏÇ¨ ${inspectionTotal}Í±¥ (${inspectionPercentage}) ÏûÖÎãàÎã§.`
		            ];
		          
		            let startY = 23; // description ÎÜíÏù¥ ÏúÑÏπò
		            description.forEach((line, index) => {
		            	  doc.text(8, startY, line); // ÏôºÏ™Ω Ï†ïÎ†¨ (x: 8, y: startY)
		            	  startY += 5; // Í∞Å Ï§Ñ Í∞ÑÍ≤©ÏùÑ 5Î°ú ÏÑ§Ï†ïÌïòÏó¨ Îã§Ïùå Ï§ÑÎ°ú ÎÇ¥Î†§Í∞ê
		        	});
		            doc.setFontSize(12);
		            /*doc.addFont('/pf/fonts/NanumSquareR.ttf', 'NanumSquareR', 'normal');
		            doc.setFont('NanumSquareR', 'normal');*/
		            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
		            //doc.setTextColor(71, 140, 114); 
                    doc.setTextColor(108, 179, 63);
                    doc.text(190, 15, "I.ÏàòÏûÖ");
		            
		        if(reportData1.length === 2){
		        	  noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏûÖ ÌÜµÍ¥Ä ÌòÑÌô© ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
	                   
	                   doc.setFont('NanumSquareR', 'normal');
	                   doc.setFontSize(10);
	                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
	                   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
		        }else{
		        	
		        
		         
            	// ÌÖåÏù¥Î∏î Ìó§Îçî
		       var header = [
		    	   	[ 
		    		    { content: 'ÏàòÎ¶¨ÏùºÏûê', rowSpan: 2, border: [true, true, true, true] },  // ÏàòÎ¶¨ÏùºÏûê ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		    { content: 'Í±¥Ïàò', rowSpan: 2, border: [true, true, true, true] },
		    		    { content: 'Í≥ºÏÑ∏Í∞ÄÍ≤©(KRW)', rowSpan: 2, border: [true, true, true, true] },
		    		    { content: 'ÏàòÏûÖ Í±∞ÎûòÌòïÌÉú ÌòÑÌô©', colSpan: 5, border: [true, true, true, true] },  // ÏàòÏûÖ Í±∞ÎûòÌòïÌÉú ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		    { content: 'ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô©', colSpan: 3, border: [true, true, true, true] },  // ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		  ],  // Ï≤´ Î≤àÏß∏ Ìñâ
		    		  [
		    		    { content: 'ÏùºÎ∞ò ÌòïÌÉú ÏàòÏûÖ', border: [true, true, true, true] },
		    		    { content: 'Í∏∞ÌÉÄ ÏàòÏûÖ ÏäπÏù∏ Î©¥Ï†ú', border: [true, true, true, true] },
		    		    { content: 'Í≤¨Ìíà Î∞è Í¥ëÍ≥†Ïö©Ìíà', border: [true, true, true, true] },
		    		    { content: 'ÏàòÏ∂úÎ¨ºÌíà ÎåÄÏ≤¥Ïö©', border: [true, true, true, true] },
		    		    { content: 'Í∏∞ÌÉÄ', border: [true, true, true, true] },
		    		    { content: 'P/L', border: [true, true, true, true] },
		    		    { content: 'Ï†úÏ∂úÏÑúÎ•ò', border: [true, true, true, true] },
		    		    { content: 'Í≤ÄÏÇ¨', border: [true, true, true, true] },
		    		  ]
		    	 ];
		       
		       
            	// üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
            	doc.autoTable({
            	  head: header,
            	  body:datas,
            	  startY: startY + 2, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
            	  theme: 'grid',
            	  styles: {
            	    font: 'NanumSquareR',
            	    fontSize: 7,
            	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
            	    textColor: [0, 0, 0],
            	    valign: 'middle',
            	    halign: 'center',
            	    overflow: 'linebreak', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøà Ï†ÅÏö©
            	  },
            	  headStyles: {
            		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
            		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
            	    fontSize: 8,
            	    textColor: [255, 255, 255],
            	    font: 'NanumSquareEB',
            	    fontStyle: 'bold',
            	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
            	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
            	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
            	  },
            	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
            	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
            	  columnStyles: {
            		  	0: { halign: 'center' , cellWidth: 23 }, // ÏàòÎ¶¨ÏùºÏûê
            	        1: { halign: 'right' , cellWidth: 18}, // Í±¥Ïàò
            	        2: { halign: 'right' , cellWidth: 23}, // Í≥ºÏÑ∏Í∞ÄÍ≤©
            	        3: { halign: 'center' , cellWidth: 17}, // ÏùºÎ∞òÏàòÏûÖ
            	        4: { halign: 'center' , cellWidth: 17}, // ÏàòÎ¶¨Î¨ºÌíà
            	        5: { halign: 'center' , cellWidth: 17}, // Í≤¨Ìíà Î∞è Í¥ëÍ≥†Ïö©Ìíà
            	        6: { halign: 'center' , cellWidth: 17}, // Í∏∞ÌÉÄ ÏàòÏûÖ ÏäπÏù∏Î©¥ÏÑ∏
            	        7: { halign: 'center' , cellWidth: 17}, // Ïû¨ÏàòÏ∂úÏ°∞Í±¥
            	        8: { halign: 'center' , cellWidth: 17 }, // P/L
            	        9: { halign: 'center' , cellWidth: 17}, // Ï†úÏ∂úÏÑúÎ•ò
            	        10: { halign: 'center' , cellWidth: 17}, // Í≤ÄÏÇ¨
            	  },
            	  didParseCell: function(data) {
            		  var firstCellValue = data.row.raw[0]; // Ï≤´ Î≤àÏß∏ Ïª¨Îüº Í∞í Í∞ÄÏ†∏Ïò§Í∏∞

            		  if (firstCellValue === "Ìï©Í≥Ñ" || firstCellValue === "ÎπÑÏú®(%)") {
            		    data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤ΩÏÉâ
            		    data.cell.styles.font = 'NanumSquareB';       // Ìè∞Ìä∏
            		    data.cell.styles.fontStyle = 'bold';          // ÍµµÍ≤å
            		  }
            		  }
        		});
            	
            	// 1Î≤àÏß∏ ÌÖåÏù¥Î∏î yÏ¢åÌëú Ï†ÄÏû• 
            	let lastY1 = doc.lastAutoTable.finalY;
            	 page1 = doc.internal.getCurrentPageInfo().pageNumber;
            	let spaceLeft1 = doc.internal.pageSize.height - lastY1 - 10;
            	chartPage1, chartY1;
            	
            	if (spaceLeft1 < 70) {
            		  doc.addPage(); // Í∑∏ÎÉ• Îí§Ïóê Ï∂îÍ∞Ä
            		  chartPage1 = page1 + 1;
            		  chartY1 = 15;
            		} else {
            		  chartPage1 = page1;
            		  chartY1 = lastY1 + 10;
            		}
            	
            	//ÌîåÎü¨Í∑∏Ïù∏ Îì±Î°ù
            	Chart.register(ChartDataLabels);
            	
            	
            	var percentagesArr = [
            		  percentRow.txType1,  
            		  percentRow.txType2,  
            		  percentRow.txType3,  
            		  percentRow.txType4,
            		  percentRow.txType5
            		];
            	
            	 safeParse = v => {
            		  var num = parseFloat(String(v).replace('%',''));
            		  return isNaN(num) ? 0 : num;
            		};
            		// ÏôºÏ™Ω Ï∞®Ìä∏ Îç∞Ïù¥ÌÑ∞ Î≥ÄÌôò
            		var leftChartData = percentagesArr.map(safeParse); 
            	
            	

            	
            	
            	// ÏôºÏ™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§ ÏÉùÏÑ±
            	canvas = document.createElement('canvas');
            	var ctx = canvas.getContext('2d');
            	canvas.width = 500;
            	canvas.height = 500;

            	
            	var chartDataLabels2 = {
            		    id: 'chartDataLabels',
            		    afterDraw(chart, args, options) {
            		        var ctx2 = chart.ctx; // Ïò¨Î∞îÎ•∏ Ïª®ÌÖçÏä§Ìä∏ ÏÇ¨Ïö©
            		        ctx2.textAlign = "center";
            		        ctx2.textBaseline = "middle";
            		        ctx2.fillStyle = '#000';
            		        ctx2.font = "19px NanumSquareB";
            		        ctx2.lineWidth = 2; // ÏÑ† ÍµµÍ∏∞

            		        let prevTextPositions2 = [];  // ÌÖçÏä§Ìä∏ ÏúÑÏπòÎ•º Ï∂îÏ†ÅÌï† Î∞∞Ïó¥

            		        chart.data.datasets.forEach((dataset, i) => {
            		        	  chart.getDatasetMeta(i).data.forEach((datapoint, index) => {
            		                  var value = dataset.data[index]; // Îç∞Ïù¥ÌÑ∞ Í∞í
            		                  var label = chart.data.labels[index]; // Ìï¥Îãπ Îç∞Ïù¥ÌÑ∞Ïùò ÎùºÎ≤®
            		                  var formattedText = `${label} : ${value}%`; // ÏõêÌïòÎäî ÌòïÏãùÏúºÎ°ú ÎùºÎ≤® ÎßåÎì§Í∏∞

            		                  if (value <= 1) return; // 1% Ïù¥Ìïò Í∞íÏùÄ ÌëúÏãú Ïïà Ìï®

            		                var { x, y } = datapoint.tooltipPosition(); // Îç∞Ïù¥ÌÑ∞ Ï¢åÌëú Í∞ÄÏ†∏Ïò§Í∏∞
            		                var radius2 = chart.outerRadius || (chart.chartArea.width / 2); // ÏõêÏùò Î∞òÏßÄÎ¶Ñ
            		                var angle2 = datapoint.startAngle !== undefined && datapoint.endAngle !== undefined
            		                    ? (datapoint.startAngle + datapoint.endAngle) / 2
            		                    : (index / dataset.data.length) * Math.PI * 2; // Í∞ÅÎèÑ Í≥ÑÏÇ∞

            		                // Ïõê Î∞îÍπ•ÏúºÎ°ú ÏãúÏûëÌïòÎäî Ï¢åÌëú (Ï°∞Ï†ï)
            		                var xOuter2 = x + (radius2 * 0) * Math.cos(angle2);  // 0.6ÏúºÎ°ú Í∞í Î≥ÄÍ≤ΩÌïòÏó¨ ÏõêÏùò Î∞îÍπ•Ï™ΩÏúºÎ°ú
            		                var yOuter2 = y + (radius2 * 0) * Math.sin(angle2);  // 0.6ÏúºÎ°ú Í∞í Î≥ÄÍ≤ΩÌïòÏó¨ ÏõêÏùò Î∞îÍπ•Ï™ΩÏúºÎ°ú

            		                // Í∫æÏù∏ ÏßÄÏ†ê Ïù¥ÌõÑ, ÏÑ† Í∏∏Ïù¥Î•º Îçî Í∏∏Í≤å ÏÑ§Ï†ï
            		                var xMiddle2 = xOuter2 + (Math.cos(angle2) * 10);  // 30ÏúºÎ°ú Í∞í ÎäòÎ†§ ÏÑ† Í∏∏Ïù¥Î•º Îçî Í∏∏Í≤å
            		                var yMiddle2 = yOuter2 + (Math.sin(angle2) * 10);  // 30ÏúºÎ°ú Í∞í ÎäòÎ†§ ÏÑ† Í∏∏Ïù¥Î•º Îçî Í∏∏Í≤å

            		                // ÏµúÏ¢Ö ÎùºÎ≤® ÏúÑÏπò (Í∏∏Ïù¥Î•º Îçî Î©ÄÎ¶¨ ÏÑ§Ï†ï)
            		                let xLine2 = xMiddle2 + (Math.cos(angle2) > 0 ? 10 : -10); // ÌÖçÏä§Ìä∏ ÏµúÏ¢Ö ÏúÑÏπòÎèÑ Îçî Î©ÄÎ¶¨
            		                let yLine2 = yMiddle2;

            		                // ÌÖçÏä§Ìä∏ Í∞ÑÏùò ÏµúÏÜå Í±∞Î¶¨ (ÏõêÌïòÎäî Í∞íÏúºÎ°ú Ï°∞Ï†ï)
            		                var minDistance2 = 30;  // ÏµúÏÜå Í∞ÑÍ≤© ÏÑ§Ï†ï

            		                // ÌÖçÏä§Ìä∏Í∞Ä Í≤πÏπòÏßÄ ÏïäÎèÑÎ°ù Í∞ÑÍ≤© Ï°∞Ï†ï
            		                prevTextPositions2.forEach((prevPos) => {
            		                    let attempts = 0;
            		                    while (Math.abs(yLine2 - prevPos.y) < minDistance2 && attempts < 5) { 
            		                        yLine2 += (Math.sin(angle2) > 0 ? 10 : -10); // ÏúÑÏïÑÎûòÎ°ú Ï°∞Ï†ï
            		                        attempts++;
            		                    }
            		                });
            		                // ÌÖçÏä§Ìä∏ ÏúÑÏπòÎ•º Ïù¥Ï†Ñ ÏúÑÏπò Î∞∞Ïó¥Ïóê Ï∂îÍ∞Ä
            		                prevTextPositions2.push({ x: xLine2, y: yLine2 });

            		                // Ï∫îÎ≤ÑÏä§Ïóê Í∫æÏùÄÏÑ† Í∑∏Î¶¨Í∏∞
            		                ctx2.beginPath();
            		                ctx2.moveTo(xOuter2, yOuter2); // Ïõê ÌÖåÎëêÎ¶¨ÏóêÏÑú ÏãúÏûë
            		                ctx2.lineTo(xMiddle2, yMiddle2); // Í∫æÏù∏ ÏßÄÏ†ê
            		                ctx2.lineTo(xLine2, yLine2); // ÏµúÏ¢Ö ÏúÑÏπò
            		                ctx2.strokeStyle = 'rgba(129,212,250,0.9)';
            		                ctx2.stroke();

            		                // ÌÖçÏä§Ìä∏ Ï†ïÎ†¨
            		                ctx2.textAlign = Math.cos(angle2) > 0 ? "left" : "right";

            		                // ÌÖçÏä§Ìä∏ ÌëúÏãú
            		                ctx2.fillText(formattedText, xLine2, yLine2);
            		            });
            		        });
            		    }
            		};
		       
            	
            	// ÏôºÏ™Ω Ï∞®Ìä∏ ÏÉùÏÑ±
            	var chart = new Chart(ctx, {
            		plugins : [chartDataLabels2],
            		type: 'pie',
            	    data: {
            	        labels: ['ÏùºÎ∞òÌòïÌÉúÏàòÏûÖ', 'Í∏∞ÌÉÄÏàòÏûÖÏäπÏù∏Î©¥Ï†ú', 'Í≤¨Ìíà,Í¥ëÍ≥†Ïö©Ìíà', 'ÏàòÏ∂úÎ¨ºÌíàÎåÄÏ±ÑÏö©', 'Í∏∞ÌÉÄ'],
            	        datasets: [{
            	            data: leftChartData,
            	            /* backgroundColor: [ 'rgb(113,162, 218)',
				            	            	'rgb(48,123,202)', 
				            	            	'rgb(166,196,232)',
				            	            	'rgb(216,225,234)',
				            	            	'rgb(40,101,168)']
	            	        }]
	            	        */
			            	 backgroundColor: [  
			            		'rgb(71,140,114)',
			            		'rgb(49,97,79)', 
			 	            	'rgb(84,166, 135)', 
			 	            	'rgb(186,221,139)',
			 	            	'rgb(231,244,218)']
            	    		}]//Í∑∏Î¶∞
		            	
            	    },
            	    options: {
            	        responsive: false,
            	        maintainAspectRatio: false,  // ÎπÑÏú® Ïú†ÏßÄ Ìï¥Ï†ú
            	        layout: {
            	            padding: {
            	                bottom: 20, // Ï∞®Ìä∏ ÌïòÎã® Ïó¨Î∞± (ÎùºÎ≤® Í≥µÍ∞Ñ ÌôïÎ≥¥)
            	                right : 70,
            	                left : 70
            	            }
            	        },
            	        plugins: {
            	        	datalabels: { 
            	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
            	            },
            	            legend: {
            	                position: 'bottom',
            	                fullWidth: true,
            	                labels: {
            	                    font: {
            	                        size: 18  // ÎùºÎ≤® ÌÅ¨Í∏∞ ÎèôÏùº
            	                        ,weight: 'bold'
            	                    },
            	                    boxWidth: 15,  // ÏïÑÏù¥ÏΩò ÌÅ¨Í∏∞ ÎèôÏùº
            	                    padding: 15
            	                }
            	            },
            	            title: {
            	                display: true,
            	                text: 'Í±∞ÎûòÌòïÌÉú',
            	                font: {
            	                    size: 28,  // Ï†úÎ™© ÌÅ¨Í∏∞ ÎèôÏùº
            	                    weight: 'bold'},
            	                padding: {
            	                    bottom: 20
            	                }
            	            }
            	        }
            	    }
            	});
            	
            	
            	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ (ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô© ÎπÑÏú®)
            	
            	var rightPercentagesArr = [
          		  percentRow.txPrc1,  
          		  percentRow.txPrc2,  
          		  percentRow.txPrc3,  
          		];
            	
            	var rightChartData = rightPercentagesArr.map(safeParse); 
            	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§ ÏÉùÏÑ±
            	rightCanvas = document.createElement('canvas');
            	var rightCtx = rightCanvas.getContext('2d');
            	rightCanvas.width = 500;
            	rightCanvas.height = 500;

            	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ ÏÉùÏÑ±
            	var rightChart = new Chart(rightCtx, {
            		plugins : [chartDataLabels2],
            		type: 'pie',
            	    data: {
            	        labels: ['P/L', 'Ï†úÏ∂úÏÑúÎ•ò', 'Í≤ÄÏÇ¨'],
            	        datasets: [{
            	            data: rightChartData,
            	            /*backgroundColor: [  'rgb(48,123,202)', 				            	             
				            	            	'rgb(113,162, 218)', 
				            	            	'rgb(166,196,232)']
            	        }]*/
            	            backgroundColor: [  
            	            	'rgb(197, 224, 180)', 
			 	            	'rgb(84,166, 135)', 
			 	            	'rgb(49,97,79)']
        	        		}] //Í∑∏Î¶∞
            	    },
            	    options: {
            	        responsive: false,
            	        maintainAspectRatio: false,  
            	        layout: {
            	            padding: {
            	                bottom: 70, // ÏïÑÎûòÏ™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
            	                left: 90,  // ÏôºÏ™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
            	                right: 90  // Ïò§Î•∏Ï™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
            	            }
            	        },
            	        plugins: {
            	        	datalabels: {
             	                color: 'rgb(89,89,89)',
             	                formatter: function(value, context) {
             	                	let label = context.chart.data.labels[context.dataIndex];
             	                   if (value < 10) {  // Í∞íÏù¥ 10% ÎØ∏ÎßåÏù∏ Í≤ΩÏö∞ ÎùºÎ≤®ÏùÑ ÌëúÏãúÌïòÏßÄ ÏïäÏùå
             	                       return null;  
             	                   }
             	                    return label + " : " +value + "%"; // ÎùºÎ≤®Í≥º ÌçºÏÑºÌä∏ ÌëúÏãú
             	                },
             	                font: {
             	                    size: 20,
             	                    weight : 'bold'
             	                },
            	        	}, 
            	        	datalabels: { 
           	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
            	        	},
            	        	legend: {
            	                position: 'bottom',
            	                fullWidth: true,
            	                labels: {
            	                    font: {
            	                        size: 18  // ÎùºÎ≤® ÌÅ¨Í∏∞ ÎèôÏùº
            	                        ,weight: 'bold'
            	                    },
            	                    boxWidth: 15,  // ÏïÑÏù¥ÏΩò ÌÅ¨Í∏∞ ÎèôÏùº
            	                    padding: 15
            	                }
            	            },
            	            title: {
            	                display: true,
            	                text: 'Ïã†Í≥†Ï≤òÎ¶¨',
            	                font: {
            	                    size: 28,  // Ï†úÎ™© ÌÅ¨Í∏∞ ÎèôÏùº
            	                    weight: 'bold'
            	                },
            	                padding: {
            	                    bottom: 10
            	                }
            	            }
            	        }
            	    }
            	});
	        }	
            	// üü¢ ÏÉàÎ°úÏö¥ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                // üü¢ "ÏàòÏûÖÌÜµÍ¥Ä ÏÑ∏Ïï°ÌòÑÌô©" Ï†úÎ™© Ï∂îÍ∞Ä
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "2.ÏàòÏûÖÌÜµÍ¥Ä ÏÑ∏Ïï°ÌòÑÌô©");
	            doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "I.ÏàòÏûÖ");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin2 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth2 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight2 = 18;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                
                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth2, boxHeight2, 'D'); 
	            
                var reportData2 = data.reportData2;
                console.log("reportData2",reportData2);
                var datas2 = reportData2.map(item => {
  	              var formattedCntImp = Intl.NumberFormat("ko-KR").format(item.cntImp);
  	              var formattedTotGs = Intl.NumberFormat("ko-KR").format(item.totGs);
  	              var formattedTotVat= Intl.NumberFormat("ko-KR").format(item.totVat);
  	              var formattedTotTs = Intl.NumberFormat("ko-KR").format(item.totTs);  
  	              var formattedTotGt = Intl.NumberFormat("ko-KR").format(item.totGt); 
  	              var formattedTotHof = Intl.NumberFormat("ko-KR").format(item.totHof); 
  	              var formattedTotKy = Intl.NumberFormat("ko-KR").format(item.totKy); 
  	              var formattedTotNt = Intl.NumberFormat("ko-KR").format(item.totNt); 
  	              var formattedTotAddTax = Intl.NumberFormat("ko-KR").format(item.totAddTax); 
  	              var formattedTotTaxSum = Intl.NumberFormat("ko-KR").format(item.totTaxSum); 
  	              
  	              return [
  	                item.lisDay,        		// ÏàòÎ¶¨ÏùºÏûê
  	                formattedCntImp,			// Í±¥Ïàò
  	                formattedTotGs, 			//Í¥ÄÏÑ∏
  	                formattedTotVat,      	 	// Î∂ÄÍ∞ÄÏÑ∏
  	                formattedTotTs,       		// Í∞úÏÜåÏÑ∏
  	                formattedTotKy,       		// ÍµêÏú°ÏÑ∏
  	                formattedTotNt,        	// ÎÜçÌäπÏÑ∏
  	                formattedTotAddTax,        // Í∞ÄÏÇ∞ÏÑ∏
  	                formattedTotTaxSum,        // Ï¥ùÏÑ∏Ïï°
  	              ];
  	            });
                
                var totalTaxRow = reportData2.find(row => row.lisDay === "Ìï©Í≥Ñ");
                
                var formatTaxtals = {
	                	cntImp:         formatNum(totalTaxRow.cntImp) || 0,
	                	totGs:   		formatNum(totalTaxRow.totGs) || 0,
	                	totVat:     	formatNum(totalTaxRow.totVat) || 0,
	                	totTs:     		formatNum(totalTaxRow.totTs) || 0,
	                	totGt:     		formatNum(totalTaxRow.totGt) || 0,
	                	totHof:     	formatNum(totalTaxRow.totHof) || 0,
	                	totKy:     		formatNum(totalTaxRow.totKy) || 0,
	                	totNt:      	formatNum(totalTaxRow.totNt) || 0,
	                	totAddTax:      formatNum(totalTaxRow.totAddTax) || 0,
	                	totTaxSum:      formatNum(totalTaxRow.totTaxSum) || 0
      	            };
                
                
		         
		         
		         // Í¥ÄÏÑ∏ Î∂ÄÍ∞ÄÏÑ∏ ÏÑ∏Ïï°Ìï©Í≥Ñ 
		         var gsTot = formatTaxtals.totGs; //Í¥ÄÏÑ∏
		         var vatTot = formatTaxtals.totVat; //Î∂ÄÍ≥ºÏÑ∏
		         var taxSumTot = formatTaxtals.totTaxSum; //Ï¥ùÏÑ∏Ïï°
		         
  		        
                // üü¢ ÏÑ§Î™Ö Ï∂îÍ∞Ä (ÏôºÏ™Ω Ï†ïÎ†¨ + Ï§Ñ ÎÇòÎàÑÍ∏∞)
	            doc.setFontSize(9);
	            doc.addFont('/pf/fonts/NanumSquareR.ttf', 'NanumSquareR', 'normal');
	            doc.setFont('NanumSquareR', 'normal');
	            doc.setTextColor(0, 0, 0);
	            var description2 = [
	            	` ${data.rptDate2}Ïõî  Ï¥ù ÎÇ©Î∂ÄÏÑ∏Ïï°ÏùÄ ${taxSumTot}Ïõê Ïù¥Î©∞, ÌÜµÍ¥Ä Í¥ÄÏÑ∏Îäî ${gsTot}Ïõê, Î∂ÄÍ∞ÄÏÑ∏Îäî ${vatTot}ÏõêÏûÖÎãàÎã§.`
	            ];
	          
	             startY = 23; // description ÎÜíÏù¥ ÏúÑÏπò
	            description2.forEach((line, index) => {
	            	  doc.text(8, startY, line); // ÏôºÏ™Ω Ï†ïÎ†¨ (x: 8, y: startY)
	            	  startY += 5; // Í∞Å Ï§Ñ Í∞ÑÍ≤©ÏùÑ 5Î°ú ÏÑ§Ï†ïÌïòÏó¨ Îã§Ïùå Ï§ÑÎ°ú ÎÇ¥Î†§Í∞ê
	        	});
	            if(reportData2.length === 1 ){
	            	 noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏûÖÌÜµÍ¥Ä ÏÑ∏Ïï° ÌòÑÌô©Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
	                   
	                   doc.setFont('NanumSquareR', 'normal');
	                   doc.setFontSize(10);
	                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
	                   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
	            }else{
	            	
	            
	        	// ÌÖåÏù¥Î∏î Ìó§Îçî
			      var header2 = [[
			    	    'ÏàòÎ¶¨ÏùºÏûê', 'Í±¥Ïàò', 'Í¥ÄÏÑ∏','Î∂ÄÍ∞ÄÏÑ∏' ,'Í∞úÏÜåÏÑ∏',
			    	    'ÍµêÏú°ÏÑ∏', 'ÎÜçÌäπÏÑ∏', 'Í∞ÄÏÇ∞ÏÑ∏', 'Ï¥ùÏÑ∏Ïï°'
			    	]];
			        
			     
			   //doc.setPage(chartPage1 === page1 ? page1 + 1 : chartPage1 + 1);
			   // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
	            	doc.autoTable({
	            	  head: header2,
	            	  body:datas2,
	            	  startY: startY + 2, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
	            	  theme: 'grid',
	            	  styles: {
	            	    font: 'NanumSquareR',
	            	    fontSize: 7,
	            	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
	            	    textColor: [0, 0, 0],
	            	    valign: 'middle',
	            	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
	                    wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
	            	  },
	            	  headStyles: {
	            		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
	            		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
	            	    fontSize: 8,
	            	    textColor: [255, 255, 255],
	            	    font: 'NanumSquareEB',
	            	    fontStyle: 'bold',
	            	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
	            	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
	            	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
	            	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
	                    wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
	                    halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
	            	  },
	            	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
	            	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
	            	  columnStyles: {
	            		  	0: { halign: 'center'}, // ÏàòÎ¶¨ÏùºÏûê
	            	        1: { halign: 'center'}, // Í±¥Ïàò
	            	        2: { halign: 'right'}, // Í¥ÄÏÑ∏
	            	        3: { halign: 'right'}, // Î∂ÄÍ∞ÄÏÑ∏
	            	        4: { halign: 'right'}, // Í∞úÏÜåÏÑ∏
	            	        5: { halign: 'right'}, // ÍµêÏú°ÏÑ∏
	            	        6: { halign: 'right'}, // ÎÜçÌäπÏÑ∏
	            	        7: { halign: 'right'}, // Í∞ÄÏÇ∞ÏÑ∏
	            	        8: { halign: 'right'}, // Ï¥ùÏÑ∏Ïï°
	            	  },
	            	  didParseCell: function (data) {
	            	        // üü° ÎßàÏßÄÎßâ Ìñâ (Ìï©Í≥Ñ Ìñâ)Îßå Î∞∞Í≤ΩÏÉâ Î≥ÄÍ≤Ω
	            	        if (data.row.index === datas2.length - 1) {
	            	            data.cell.styles.fillColor = [246, 243, 202]; // Ïó∞Ìïú ÌöåÏÉâ Î∞∞Í≤Ω
	            	            data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
	            	            data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
	            	        }
	            	    }
	        		});
	            	
	            	let lastY2 = doc.lastAutoTable.finalY;
	            	let page2 = doc.internal.getCurrentPageInfo().pageNumber;
	            	let spaceLeft2 = doc.internal.pageSize.height - lastY2 - 10;
	            	 chartPage2, chartY2;

	            	if (spaceLeft2 < 85) {
	            	  doc.addPage();
	            	  chartPage2 = page2 + 1;
	            	  chartY2 = 15;
	            	} else {
	            	  chartPage2 = page2;
	            	  chartY2 = lastY2 + 10;
	            	}
	            	
	            }
	            
	          
	           
	            	var reportData3 = data.reportData3;
	                console.log("reportData3",reportData3);
	                if(reportData3.length > 0){
	                // Ï≤´ Î≤àÏß∏ÏôÄ ÎßàÏßÄÎßâ `lisDay`ÏóêÏÑú ÎÖÑÎèÑÎßå Ï∂îÏ∂ú
	                var firstYear = reportData3[0].lisDay.substring(0, 4);  // Ï≤´ Î≤àÏß∏ ÏöîÏÜåÏóêÏÑú '202401' -> '2024'
	                var lastYear = reportData3[reportData3.length - 1].lisDay.substring(0, 4);  // ÎßàÏßÄÎßâ ÏöîÏÜåÏóêÏÑú '202503' -> '2025'
	                
	                var firstYearData = [];
	                var lastYearData = [];

	                reportData3.forEach(item => {
	                  var year = item.lisDay.substring(0, 4);  // '202401' -> '2024', '202502' -> '2025'
	                  if (year === firstYear) {
	                    // Ï†ÑÎÖÑÎèÑ
	                    firstYearData.push(item.cntImp);  // cntImp Í∞íÏùÑ ÎÑ£Ïùå
	                  } else if (year === lastYear) {
	                	// Ïò¨Ìï¥
	                    lastYearData.push(item.cntImp);  // cntImp Í∞íÏùÑ ÎÑ£Ïùå
	                  }
	                });
	                
	                // Ï≤´ Î≤àÏß∏ÏôÄ Îëê Î≤àÏß∏ Î∞∞Ïó¥ÏóêÏÑú Í∞ÄÏû• ÌÅ∞ Í∞í Ï∂îÏ∂ú
	                var maxFirstYearData = Math.max(...firstYearData);
	                var maxLastYearData = Math.max(...lastYearData);

	                // Îëê Î∞∞Ïó¥ÏóêÏÑú Í∞ÄÏû• ÌÅ∞ Í∞í Ï§ë Îçî ÌÅ∞ Í∞íÏùÑ ÏÑ†ÌÉù
	                var maxValue = Math.max(maxFirstYearData, maxLastYearData) + 20;  // Í∞ÄÏû• ÌÅ∞ Í∞íÏóê 30ÏùÑ ÎçîÌï®

	                
	                // rptDate2Í∞Ä "4" Í∞ôÏùÄ Î¨∏ÏûêÏó¥ ÎòêÎäî Ïà´ÏûêÎùºÍ≥† Í∞ÄÏ†ï
	                var startMonth = Number(data.rptDate2);   // 4

	                // 1) Ïõî Ïù¥Î¶Ñ Í≥†Ï†ï Î∞∞Ïó¥
	                var monthLabels = ['1Ïõî','2Ïõî','3Ïõî','4Ïõî','5Ïõî','6Ïõî',
	                                     '7Ïõî','8Ïõî','9Ïõî','10Ïõî','11Ïõî','12Ïõî'];

	                // 2) Ïû¨Î∞∞Ïó¥: startMonthÎ∂ÄÌÑ∞ ÎÅùÍπåÏßÄ + ÏïûÎ∂ÄÎ∂Ñ
	                //index = startMonth-1  (Î∞∞Ïó¥ÏùÄ 0‚Äëbased)
	                var idx = startMonth - 1;
	                var orderedLabels = [
	                  ...monthLabels.slice(idx),   // idx‚Üí11  : ex) 4Ïõî~12Ïõî
	                  ...monthLabels.slice(0, idx) // 0‚Üíidx-1 : ex) 1Ïõî~3Ïõî
	                ];
	                
	                // Ï∞®Ìä∏ Îç∞Ïù¥ÌÑ∞ (Ï†ÑÎÖÑÎèÑÏôÄ Ïò¨Ìï¥ Îç∞Ïù¥ÌÑ∞)
	            	var barChartData = {
	            	    //labels: orderedLabels,
	            		labels: monthLabels,
	            		datasets: [
	            		    {  // ‚ñí Ï†ÑÎÖÑÎèÑ ÎßâÎåÄ ‚ñí
	            		      type: 'bar',
	            		      label: `${firstYear}ÎÖÑ`,
	            		      data: firstYearData,
	            		      backgroundColor: 'rgba(75,192,192,0.5)',
	            		      borderColor: 'rgba(75,192,192,1)',
	            		      borderWidth: 1
	            		    },
	            		    {  // ‚ñí Ïò¨Ìï¥ ÎßâÎåÄ ‚ñí
	            		      type: 'bar',
	            		      label: `${lastYear}ÎÖÑ`,
	            		      data: lastYearData,
	            		      backgroundColor: 'rgba(255,99,132,0.5)',
	            		      borderColor: 'rgba(255,99,132,1)',
	            		      borderWidth: 1
	            		    },
	            		   
	            		  ]
	            		};
            	
	                
	                
	                //Ï†ÑÎÖÑ ÎèôÏõî ÎåÄÎπÑ Í±¥Ïàò ÎπÑÍµê Ï∞®Ìä∏ 
	            	//  Ï∫îÎ≤ÑÏä§ ÏÉùÏÑ±
		            var pdf2canvas = document.createElement('canvas');
	            	var pdf2ctx = pdf2canvas.getContext('2d');
	            	pdf2canvas.width = 450;
	            	pdf2canvas.height = 210;
	            	// Ï∫îÎ≤ÑÏä§Î•º ÌôîÎ©¥Ïóê Î≥¥Ïù¥ÏßÄ ÏïäÎèÑÎ°ù Ïà®ÍπÄ Ï≤òÎ¶¨
	            	pdf2canvas.style.display = 'none'; // Ïõπ ÌôîÎ©¥ÏóêÏÑú Ïà®ÍπÄ Ï≤òÎ¶¨
	            	
	            	document.body.appendChild(pdf2canvas);  // Ï∫îÎ≤ÑÏä§Î•º DOMÏóê Ï∂îÍ∞Ä (Ï∞®Ìä∏Í∞Ä Î≥¥Ïù¥ÎèÑÎ°ù)
	                
	               
	            	var pdf2chart = new Chart(pdf2ctx, {
	            		  data: barChartData,
	            		  options: {
	            		    responsive: true,
	            		    font: { size: 20 },        // Í∏∞Î≥∏ Ìè∞Ìä∏ ÌÅ¨Í≤å
	            		    scales: {
	            		      x: { ticks: { font:{size:20} } },
	            		      y: {
	            		        beginAtZero:true,
	            		        max:maxValue,
	            		        ticks:{ font:{size:20} }
	            		      },
	            		    },
	            		    plugins: {
	            		      legend: {
	            		        position:'bottom',
	            		        labels:{ font:{size:18,weight:'bold'}, boxWidth:18, padding:18 }
	            		      },
	            		      title: {
	            		        display:true,
	            		        text:'Ï†ÑÎÖÑ ÎèôÏõî ÎåÄÎπÑ Í±¥Ïàò ÎπÑÍµê',
	            		        font:{size:28,weight:'bold'},
	            		        padding:{bottom:15}
	            		      },
	            		      /* ‚îÄ‚îÄ Ïà´Ïûê ÎùºÎ≤® ‚îÄ‚îÄ */
	            		      datalabels: {
	            		        anchor:'end',
	            		        align:'end',
	            		        font:{size:16,weight:'bold'},
	            		        formatter:(v,ctx)=>{
	            		          // Í∫æÏùÄÏÑ†ÏùÄ %Î°ú, ÎßâÎåÄÎäî Ï≤úÎã®ÏúÑ ÏΩ§Îßà
	            		          return ctx.dataset.type==='line'
	            		                 ? v.toFixed(1)+'%'
	            		                 : v.toLocaleString() + 'Í±¥';
	            		        }
	            		      }
	            		    }
	            		  },
	            		  plugins: [ChartDataLabels]    // ‚ë† CDN Ï∂îÍ∞Ä ÌõÑ Îì±Î°ù
            		});
	            }
	            	// üü¢5Î≤àÏß∏ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
	                doc.addPage();
	                
	                doc.setFontSize(16);
	                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
	                doc.setFont('NanumSquareB', 'normal');
	                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
	                doc.setTextColor(71, 140, 114); 
	                doc.text(8, 15, "");
	                doc.text(8, 15, "3.ÏàòÏûÖÎ¨ºÌíà Ï†ÅÏö©ÏÑ∏Ïú®");
	                doc.setFontSize(12);
	                doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
	                doc.setFont('NanumSquareEB', 'bold');
	                doc.setTextColor(108, 179, 63);
	                doc.text(190, 15, "I.ÏàòÏûÖ");
	                
	                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
	                var boxMargin4 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
	                var boxWidth4 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
	                var boxHeight4 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
	                
	                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
	                doc.setDrawColor(35, 69,56); 
	                doc.rect(5, 8, boxWidth4, boxHeight4, 'D');
	                
	                
	                
	                var reportData5 = data.reportData5;
	                console.log("reportData5",reportData5);
	                var datas4 = reportData5.map(item => {
	  	              var formattedCntRan = Intl.NumberFormat("ko-KR").format(item.cntRan); 
	  	              
	  	              return [
	  	            	  item.gsRate,            // Ï†ÅÏö© ÏÑ∏Ïú®
	  	            	  item.gsDivi,        	// Í¥ÄÏÑ∏Íµ¨Î∂Ñ
	  	            	  formattedCntRan,		// ÌÜµÍ¥ÄÎûÄÏàò
	  	            	  item.cntRate
	  	                
	  	              ];
	  	            });
	                if(reportData5.length == 1){
	                	 noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏûÖÎ¨ºÌíà Ï†ÅÏö© ÏÑ∏Ïú® ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
		                   
		                   doc.setFont('NanumSquareR', 'normal');
		                   doc.setFontSize(10);
		                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
		                   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
	                }else{
	                	// ÌÖåÏù¥Î∏î Ìó§Îçî
		            var header4 = [['Ï†ÅÏö©ÏÑ∏Ïú®','Í¥ÄÏÑ∏Íµ¨Î∂Ñ','ÌÜµÍ¥ÄÎûÄÏàò','ÎπÑÏú®']];
		            
		            
		            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
	            	doc.autoTable({
	            	  head: header4,
	            	  body:datas4,
	            	  startY: 26, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
	            	  theme: 'grid',
	            	  styles: {
	            	    font: 'NanumSquareR',
	            	    fontSize: 7,
	            	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
	            	    textColor: [0, 0, 0],
	            	    valign: 'middle',
	            	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
	                    wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
	            	  },
	            	  headStyles: {
	            		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
	            		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
	            	    fontSize: 8,
	            	    textColor: [255, 255, 255],
	            	    font: 'NanumSquareEB',
	            	    fontStyle: 'bold',
	            	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
	            	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
	            	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
	            	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
	                    wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
	                    halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
	            	  },
	            	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
	            	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
	            	  columnStyles: {
	            		  	0: { halign: 'center'}, // Ï†ÅÏö©ÏÑ∏Ïú®
	            	        1: { halign: 'center'}, // Í¥ÄÏÑ∏Íµ¨Î∂Ñ
	            	        2: { halign: 'right'}, // ÌÜµÍ¥ÄÎûÄÏàò
	            	        3: { halign: 'right'}, // ÌÜµÍ¥ÄÎûÄÏàò
	            	  },
	            	  didParseCell: function (data) {
	            	        // üü° ÎßàÏßÄÎßâ Ìñâ (Ìï©Í≥Ñ Ìñâ)Îßå Î∞∞Í≤ΩÏÉâ Î≥ÄÍ≤Ω
	            	        if (data.row.index === datas4.length - 1) {
	            	            data.cell.styles.fillColor = [246, 243, 202]; // Ïó∞Ìïú ÌöåÏÉâ Î∞∞Í≤Ω
	            	            data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
	            	            data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
	            	        }
	            	    }
	        		});
	            	
	            	// 4Î≤àÏß∏ ÌÖåÏù¥Î∏î yÏ¢åÌëú Ï†ÄÏû• 
	            	lastYPage4 = doc.lastAutoTable.finalY;
	            	var pageAfterTable4 = doc.internal.getCurrentPageInfo().pageNumber;
	            	
	            	var spaceLeft4 = doc.internal.pageSize.height - lastYPage4 - 10;
	            	
	            	chartPage4, chartY4;
	            	
	            	if(spaceLeft4< 110){
	            		doc.addPage();
	            		chartPage4 = pageAfterTable4 + 1;
	            		chartY4 = 15;
	            	}else{
	            		 chartPage4 = pageAfterTable4;       // Í∞ôÏùÄ ÌéòÏù¥ÏßÄÏóê Í∑∏Î¶¥ Ïàò ÏûàÏùå
	            		  chartY4 = lastYPage4;
	            	}

	            	var rowsNoTotal = reportData5.filter(r => r.gsRate !== 'Ìï©Í≥Ñ');

	            	var pieLabels2 = rowsNoTotal.map(r => `${r.gsDivi}`);
	            	var pieData2   = rowsNoTotal.map(r => Number(r.cntRan));
	            	var pieRates2  = rowsNoTotal.map(r => r.cntRate);  // ÎπÑÏú® Î∞∞Ïó¥ Ï∂îÍ∞Ä
	            	

	            	var pdf4canvas = document.createElement("canvas");
	            	var pdf4ctx = pdf4canvas.getContext("2d");
	            	
	            	pdf4canvas.width = 1200;
	            	pdf4canvas.height = 1200;
	            	
	            	pdf4canvas.style.display = 'none'; // Ïõπ ÌôîÎ©¥ÏóêÏÑú Ïà®ÍπÄ Ï≤òÎ¶¨
	            	document.body.appendChild(pdf4canvas);
	            	
	            	
	            	
	            	
	            	var chartDataLabels = {
	            			  id: 'chartDataLabels',
	            			  afterDraw(chart, args, options) {
	            			    const ctx = chart.ctx;
	            			    ctx.textAlign = "center";
	            			    ctx.textBaseline = "middle";
	            			    ctx.fillStyle = '#000';
	            			    ctx.font = "35px NanumSquareB";
	            			    ctx.lineWidth = 2;

	            			    let labelPoints = [];

	            			    chart.data.datasets.forEach((dataset, i) => {
	            			      chart.getDatasetMeta(i).data.forEach((datapoint, idx) => {
	            			        const cnt = Number(dataset.data[idx]);
	            			        const rateStr = pieRates2[idx];
	            			        const rateNum = parseFloat(rateStr.replace('%', ''));

	            			        if (rateNum <= 1) return;

	            			        const gs = reportData5[idx].gsDivi;
	            			        const { x, y } = datapoint.tooltipPosition();
	            			        const radius = datapoint.outerRadius || (chart.chartArea.width / 2);
	            			        const angle = (datapoint.startAngle + datapoint.endAngle) / 2;

	            			        const xOuter = x + radius * 0.4 * Math.cos(angle);
	            			        const yOuter = y + radius * 0.4 * Math.sin(angle);
	            			        const xMiddle = xOuter + 20 * Math.cos(angle);
	            			        const yMiddle = yOuter + 20 * Math.sin(angle);
	            			        const xLine = xMiddle + (Math.cos(angle) > 0 ? 30 : -30);
	            			        const yLine = yMiddle;

	            			        labelPoints.push({
	            			          text: `${gs} : ${rateStr}`,
	            			          xOuter,
	            			          yOuter,
	            			          xMiddle,
	            			          yMiddle,
	            			          xLine,
	            			          yLine,
	            			          angle,
	            			          side: Math.cos(angle) > 0 ? 'right' : 'left'
	            			        });
	            			      });
	            			    });

	            			    // Í≤πÏπ® Î∞©ÏßÄÎ•º ÏúÑÌïú ÏµúÏÜå Í∞ÑÍ≤© ÏÑ§Ï†ï
	            			    const minYGap = 40;

	            			    ['left', 'right'].forEach(side => {
	            			      const sideLabels = labelPoints.filter(p => p.side === side)
	            			        .sort((a, b) => a.yLine - b.yLine);  // y Í∏∞Ï§Ä Ï†ïÎ†¨

	            			      for (let i = 1; i < sideLabels.length; i++) {
	            			        const prev = sideLabels[i - 1];
	            			        const curr = sideLabels[i];
	            			        if ((curr.yLine - prev.yLine) < minYGap) {
	            			          curr.yLine = prev.yLine + minYGap;
	            			        }
	            			      }

	            			      // ÏÑ† + ÌÖçÏä§Ìä∏ Îã§Ïãú Í∑∏Î¶¨Í∏∞
	            			      sideLabels.forEach(p => {
	            			        ctx.beginPath();
	            			        ctx.moveTo(p.xOuter, p.yOuter);
	            			        ctx.lineTo(p.xMiddle, p.yMiddle);
	            			        ctx.lineTo(p.xLine, p.yLine);
	            			        ctx.strokeStyle = 'rgba(129,212,250,0.9)';
	            			        ctx.stroke();

	            			        ctx.textAlign = p.side === 'right' ? "left" : "right";
	            			        ctx.fillText(p.text, p.xLine, p.yLine);
	            			      });
	            			    });
	            			  }
	            			};


	            	
	            	var pdf4chart = new Chart(pdf4ctx, {
	            	    plugins : [chartDataLabels],
	            		type: "pie",
	            	    data: {
	            	        labels: pieLabels2,
	            	        datasets: [{
	            	            data: pieData2,
	            	            backgroundColor: [
	            	            	/*'rgba(1,87,155,0.7)',
	            	            	'rgba(2,119,189,0.7)',
	            	            	'rgba(2,136,209,0.7)',
	            	            	'rgba(3,155,229,0.7)',
	            	            	'rgba(3,169,244,0.7)',
	            	            	'rgba(41,182,246,0.7)',
	            	            	'rgba(79,195,247, 0.7)',
	            	            	'rgba(129,212,250,0.7)',
	            	            	'rgba(179,229,252,0.7)',
	            	            	'rgba(166,208,228,0.7)',
	            	            	*/
	            	            	
	            	            	'rgb(49,97,79)',
	            	            	'rgb(71,140,114)',
	            	            	'rgb(84,166,135)',
	            	            	'rgb(123,211,171)',
	            	            	'rgb(153,184,169)',
	            	            	'rgb(102,178,103)',
	            	            	'rgb(154,204,153)',
	            	            	'rgb(186,221,139)',
	            	            	'rgb(238,231,148)',
	            	            	'rgb(231,244,218)',
	            	            	
	            	            	]
	            	        	}]
	            	    	},
	            	    options: {
	            	    	responsive: false,
	            	        maintainAspectRatio: false, //ÎπÑÏú® Î¨¥Ïãú
	            	        layout: {
	            	            padding: 180  // üîπ Ï∞®Ìä∏ Ï£ºÎ≥Ä Ïó¨Î∞± ÌôïÎ≥¥ (Í∞íÏùÑ ÎäòÎ¶¨Î©¥ Ï∞®Ìä∏Í∞Ä ÏûëÏïÑÏßê)
	            	        },
	            	        plugins: {
	            	            legend: { 
	            	            	position: "bottom",
	            	            	display : true,
	            	            	align : 'center',
	            	            	labels : {
	            	            		boxWidth : 18,
	            	            		padding : 20,
	            	            		font : {
	            	            			size : 30,
	            	            			weight : 'bold'
	            	            		}
	            	            	}
	            	            },
	            	            title : {
	            	            	display: true,
	            	            	text: 'ÏàòÏûÖÎ¨ºÌíà Ï†ÅÏö©ÏÑ∏Ïú®',
	            	            	font : {size :43, weight : 'bold'},
	            	            	padding: {bottom : 60}
	            	            },
	            	            tooltip: {
	            	               enabled : false // Ìà¥ÌåÅ ÎπÑÌôúÏÑ±Ìôî
	            	            },
	            	            datalabels: { 
	            	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
	            	            }
	            	        }
	            	    }
	            	  
	            	});
	            	
	                }	
	            // üü¢ 4Î≤àÏß∏ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "4.ÏàòÏûÖÎ¨ºÌíà Í≥ºÏÑ∏ÌòÑÌô©");
                doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "I.ÏàòÏûÖ");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin3 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth3 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight3 = 28;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                var boxX = 5;
                var boxY = 8;
                var textMargin = 4;  // Î∞ïÏä§ ÎÇ¥Î∂Ä Ïó¨Î∞±
                var lineHeight = 5;
                var innerBoxWidth = boxWidth3 - (textMargin * 2);
                
                
               /* doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth3, boxHeight3, 'D'); */
                
                
                var reportData4 = data.reportData4;
                console.log("reportData4",reportData4);
                var datas3 = reportData4.map(item => {
  	              var formattedTaxKrw = Intl.NumberFormat("ko-KR").format(item.taxKrw); 
  	              var formattedGs = Intl.NumberFormat("ko-KR").format(item.gs); 
  	              
  	              return [
  	                item.rowNum,        // ÏàúÎ≤à
  	                item.hs,            // hscode
  	                item.gsDivi,        // Í¥ÄÏÑ∏Íµ¨Î∂Ñ
  	                item.excGname, 		// ÌíàÎ™Ö
  	                item.gsRate,       	// Í¥ÄÏÑ∏Ïú®
  	                formattedTaxKrw,	// Í≥ºÏÑ∏Í∞ÄÍ≤©
  	                formattedGs			// Í¥ÄÏÑ∏Ïï°
  	              ];
  	            });
                
                var defaultColumnCount3 = 7;
	            var defaultRow3 = Array(defaultColumnCount3).fill("");

	            // datasÍ∞Ä Ïú†Ìö®Ìïú Î∞∞Ïó¥Ïù¥Í≥†, ÏµúÏÜåÌïú ÌïòÎÇò Ïù¥ÏÉÅÏùò ÌñâÏù¥ ÏûàÎã§Î©¥ Í∑∏ÎåÄÎ°ú ÏÇ¨Ïö©ÌïòÍ≥†
	            // ÏïÑÎãàÎ©¥ defaultRowÎ•º ÎÑ£Ïñ¥ÏÑú ÏïàÏ†ÑÌïòÍ≤å Ï≤òÎ¶¨
	            var safeDatas3 = (Array.isArray(datas3) && datas3.length > 0)
	              ? datas3
	              : [defaultRow3];

                 
		         	// 1. Ï†ÑÏ≤¥ Í≥ºÏÑ∏Í∞ÄÍ≤© Ï¥ùÌï© Í≥ÑÏÇ∞
	            	var totalTaxKrw = reportData4[reportData4.length - 1].taxKrw;

	            	// 2. ÌååÏù¥ Ï∞®Ìä∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
			            
	            	  var rowsNoTal1 =  reportData4.filter(r =>r.rowNum !== 'Ìï©Í≥Ñ' );
	            	  
	            	   var pieLabels = rowsNoTal1.map(r => r.excGname) || 0;
			           var pieData = rowsNoTal1.map(r => +( (r.taxKrw / totalTaxKrw) * 100 ).toFixed(2));
			           
	            	
	            	// 1. ÏµúÎåÄ ÎπÑÏú® Ï∞æÍ∏∞
	            	var maxPercentage = Math.max(...pieData) || 0;  
	            	
		         // üü¢ ÏÑ§Î™Ö Ï∂îÍ∞Ä (ÏôºÏ™Ω Ï†ïÎ†¨ + Ï§Ñ ÎÇòÎàÑÍ∏∞)
	            doc.setFontSize(9);
	            doc.addFont('/pf/fonts/NanumSquareR.ttf', 'NanumSquareR', 'normal');
	            doc.setFont('NanumSquareR', 'normal');
	            doc.setTextColor(0, 0, 0);
	            var description3 = [
	            	`Îã§Ïùå ÏûêÎ£åÎäî HS CODEÎ•º Í∏∞Ï§ÄÏúºÎ°ú Ï£ºÏöî ÏàòÏûÖ ÌíàÎ™© Í¥ÄÏÑ∏Ïú®ÏùÑ ÎÇòÌÉÄÎÉÖÎãàÎã§.`,
	                `HS CODE ${(reportData4[0] && reportData4[0].hs) ? reportData4[0].hs : "-"}Ïùò ${(reportData4[0] && reportData4[0].gsDivi) ? reportData4[0].gsDivi : "-"} Ï†ÅÏö©  ${(reportData4[0] && reportData4[0].excGname) ? reportData4[0].excGname : "-"}Ïù¥ ÏÉÅÏúÑ 10Í∞ú ÌÜµÍ¥Ä Î¨ºÌíà Í≥ºÏÑ∏Í∞ÄÍ≤© Í∏∞Ï§Ä ${maxPercentage}%Î°ú Í∞ÄÏû• ÎßéÏù¥ ÏàòÏûÖÎêòÏóàÏäµÎãàÎã§.`,
	            	`Ìïú Îã¨Í∞Ñ Ï†ÑÏ≤¥ ÌíàÎ™©Ïùò ÌèâÍ∑† Í¥ÄÏÑ∏Ïú®ÏùÄ ${data.avgRate}% Ïù¥Î©∞ ÏÉÅÏúÑ 10Í∞ú ÌÜµÍ¥Ä Î¨ºÌíà ÌèâÍ∑† Í¥ÄÏÑ∏Ïú®ÏùÄ ${data.topAvgRate}% ÏûÖÎãàÎã§.`
	            ];
	          
	            // 1. ÌÖçÏä§Ìä∏ Ï§Ñ Î∂ÑÌï† Î®ºÏ†Ä Í≥ÑÏÇ∞
	            let splittedLines = [];
	            description3.forEach(line => {
	              var splitted = doc.splitTextToSize(line, innerBoxWidth);
	              splittedLines.push(...splitted);  // Ï§Ñ Ï†ÑÏ≤¥ ÎàÑÏ†Å
	            });

	            // 2. Î∞ïÏä§ ÎÜíÏù¥ Í≥ÑÏÇ∞ (Ï†ÑÏ≤¥ Ï§Ñ * Ï§Ñ ÎÜíÏù¥ + ÏúÑÏïÑÎûò Ïó¨Î∞±)
	            var dynamicBoxHeight = (splittedLines.length * lineHeight + 5) + (textMargin * 2);

	            // 3. Î∞ïÏä§ Î®ºÏ†Ä Í∑∏Î¶º
	            doc.setLineWidth(0.5);
	            doc.setDrawColor(35, 69, 56);
	            doc.rect(boxX, boxY, boxWidth3, dynamicBoxHeight, 'D');

	            // 4. ÌÖçÏä§Ìä∏ Ï∂úÎ†• (Ï§Ñ ÎÇòÎà†ÏÑú ÏàúÏÑúÎåÄÎ°ú Ï∂úÎ†•)
	            let currentY2 = boxY + textMargin + 10;  // ‚úÖ Ìè∞Ìä∏ Í∏∞Ï§ÄÏÑ† Î≥¥Ï†ïÏö© +1

	            splittedLines.forEach(line => {
	              doc.text(boxX + textMargin, currentY2, line);
	              currentY2 += lineHeight;
	            });

	            var nextStartY = currentY2 + 1.5;  // Ïù¥ÌõÑ ÏΩòÌÖêÏ∏† ÏãúÏûë ÏúÑÏπò

	            if(reportData4.length == 1){
	            	noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏûÖÎ¨ºÌíà Í≥ºÏÑ∏ÌòÑÌô© ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
	                   
	                   doc.setFont('NanumSquareR', 'normal');
	                   doc.setFontSize(10);
	                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
	                   doc.text(noDataMsg, 10, 45);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
	            }else{
	            // ÌÖåÏù¥Î∏î Ìó§Îçî
	            var header3 = [['Rank', 'ÏÑ∏Î≤àÎ∂ÄÌò∏', 'Í¥ÄÏÑ∏Íµ¨Î∂Ñ','ÌíàÎ™Ö' ,'Í¥ÄÏÑ∏Ïú®', 'Í≥ºÏÑ∏Í∞ÄÍ≤©(KRW)', 'Í¥ÄÏÑ∏Ïï°']];
	            
	            
	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
            	doc.autoTable({
            	  head: header3,
            	  body:datas3,
            	  startY: nextStartY + 2, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
            	  theme: 'grid',
            	  styles: {
            	    font: 'NanumSquareR',
            	    fontSize: 7,
            	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
            	    textColor: [0, 0, 0],
            	    valign: 'middle',
            	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                    wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
            	  },
            	  headStyles: {
            		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
            		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
            	    fontSize: 8,
            	    textColor: [255, 255, 255],
            	    font: 'NanumSquareEB',
            	    fontStyle: 'bold',
            	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
            	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
            	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
            	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                    wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                    halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
            	  },
            	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
            	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
            	  columnStyles: {
            		  	0: { halign: 'center'}, // Îû≠ÌÅ¨
            	        1: { halign: 'center'}, // ÏÑ∏Î≤àÎ∂ÄÌò∏
            	        2: { halign: 'center'}, // Í¥ÄÏÑ∏Íµ¨Î∂Ñ
            	        3: { halign: 'center'}, // ÌíàÎ™Ö
            	        4: { halign: 'center'}, // Í¥ÄÏÑ∏Ïú®
            	        5: { halign: 'right'}, // Í≥ºÏÑ∏Í∞ÄÍ≤©
            	        6: { halign: 'right'}, // Í¥ÄÏÑ∏Ïï°
            	  },
            	  didParseCell: function (data) {
            	        // üü° ÎßàÏßÄÎßâ Ìñâ (Ìï©Í≥Ñ Ìñâ)Îßå Î∞∞Í≤ΩÏÉâ Î≥ÄÍ≤Ω
            	        if (data.row.index === datas3.length - 1) {
            	            data.cell.styles.fillColor = [246, 243, 202]; // Ïó∞Ìïú ÌöåÏÉâ Î∞∞Í≤Ω
            	            data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
            	            data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
            	        }
            	    }
        		});
            	
            	
            	// 3Î≤àÏß∏ ÌÖåÏù¥Î∏î yÏ¢åÌëú Ï†ÄÏû• 
            	lastYPage3 = doc.lastAutoTable.finalY;  
            	var pageAfterTable3 = doc.internal.getCurrentPageInfo().pageNumber;
            	
            	// üü¢ ÎÇ®ÏùÄ Í≥µÍ∞Ñ Í≥ÑÏÇ∞
            	var spaceLeft3 = doc.internal.pageSize.height - lastYPage3 - 10;
            	
            	 chartPage3, chartY3;
            	
            	if(spaceLeft3< 130){
            		doc.addPage();
            		chartPage3 = pageAfterTable3 + 1;
            		chartY3 = 15;
            	}else{
            		 chartPage3 = pageAfterTable3;       // Í∞ôÏùÄ ÌéòÏù¥ÏßÄÏóê Í∑∏Î¶¥ Ïàò ÏûàÏùå
            		  chartY3 = lastYPage3;
            	}
            	

            	
            	var pdf3canvas = document.createElement("canvas");
            	var pdf3ctx = pdf3canvas.getContext("2d");
            	pdf3canvas.width = 1000;
            	pdf3canvas.height = 1000;
            	pdf3canvas.style.display = 'none'; // Ïõπ ÌôîÎ©¥ÏóêÏÑú Ïà®ÍπÄ Ï≤òÎ¶¨
            	document.body.appendChild(pdf3canvas);
            	
            	let sortedData = [...reportData4]
            	  .map((item, idx) => ({ idx, value: item.cnt })) // indexÏôÄ Í∞í Ï†ÄÏû•
            	  .sort((a, b) => b.value - a.value); // ÌÅ∞ Í∞íÎ∂ÄÌÑ∞ Ï†ïÎ†¨

            	let rankMap = {}; // index -> ÏàúÏúÑ Îß§Ìïë
            	sortedData.forEach((item, i) => {
            	  rankMap[item.idx] = i + 1; // 1Î∂ÄÌÑ∞ ÏãúÏûë
            	})
            	var chartDataLabels1 = {
            		    id: 'chartDataLabels',
            		    afterDraw(chart, args, options) {
            		        var ctx1 = chart.ctx; // Ïò¨Î∞îÎ•∏ Ïª®ÌÖçÏä§Ìä∏ ÏÇ¨Ïö©
            		        ctx1.textAlign = "center";
            		        ctx1.textBaseline = "middle";
            		        ctx1.fillStyle = '#000';
            		        ctx1.font = "18px NanumSquareB";
            		        ctx1.lineWidth = 3; // ÏÑ† ÍµµÍ∏∞

            		        let prevTextPositions1 = [];  // ÌÖçÏä§Ìä∏ ÏúÑÏπòÎ•º Ï∂îÏ†ÅÌï† Î∞∞Ïó¥
            		        var labelPoints = [];

            		        
            		        
            		        chart.data.datasets.forEach((dataset, i) => {
            		            chart.getDatasetMeta(i).data.forEach((datapoint, index) => {
            		            	var value = dataset.data[index];
            		                 if (value <= 3) return;

            		                 var excGname = reportData4[index].excGname;
            		                 var rank = rankMap[index];
            		                 var { x, y } = datapoint.tooltipPosition();
            		                 var radius = chart.outerRadius || (chart.chartArea.width / 2);
            		                 var angle = (datapoint.startAngle + datapoint.endAngle) / 2;

            		                 var xOuter = x + radius * 0.3 * Math.cos(angle);
            		                 var yOuter = y + radius * 0.3 * Math.sin(angle);
            		                 var xMiddle = xOuter + 20 * Math.cos(angle);
            		                 var yMiddle = yOuter + 20 * Math.sin(angle);
            		                 var xLine = xMiddle + (Math.cos(angle) > 0 ? 20 : -20);
            		                 var yLine = yMiddle;

            		                 labelPoints.push({
            		                     index,
            		                     rank,
            		                     text: `${rank}. ${excGname}:${value}%`,
            		                     xOuter,
            		                     yOuter,
            		                     xMiddle,
            		                     yMiddle,
            		                     xLine,
            		                     yLine,
            		                     angle,
            		                     side: Math.cos(angle) > 0 ? 'right' : 'left'
            		                 });
            		             });
            		         });

            		         // ‚õî y Í≤πÏπ® Î∞©ÏßÄ: Ï¢åÏö∞ ÎÇòÎà†ÏÑú Îî∞Î°ú Ï†ïÎ†¨
            		        var minYGap = 22;

            		         ['left', 'right'].forEach(side => {
            		             var sideLabels = labelPoints.filter(p => p.side === side)
            		                 .sort((a, b) => a.yLine - b.yLine);

            		             for (let i = 1; i < sideLabels.length; i++) {
            		                 var prev = sideLabels[i - 1];
            		                 var curr = sideLabels[i];
            		                 if ((curr.yLine - prev.yLine) < minYGap) {
            		                     curr.yLine = prev.yLine + minYGap;
            		                 }
            		             }

            		             // Îã§Ïãú Í∑∏Î¶¨Í∏∞
            		             sideLabels.forEach(p => {
            		                 ctx1.beginPath();
            		                 ctx1.moveTo(p.xOuter, p.yOuter);
            		                 ctx1.lineTo(p.xMiddle, p.yMiddle);
            		                 ctx1.lineTo(p.xLine, p.yLine);
            		                 ctx1.strokeStyle = 'rgba(129,212,250,0.9)';
            		                 ctx1.stroke();

            		                 ctx1.textAlign = p.side === 'right' ? "left" : "right";
            		                 ctx1.fillText(p.text, p.xLine, p.yLine);
            		             });
            		         });
            		    }
            		};
	            }
            	var pdf3chart = new Chart(pdf3ctx, {
            		plugins : [chartDataLabels1],
            			type: "pie",
	            	    data: {
	            	        labels: pieLabels,
	            	        datasets: [{
	            	            data: pieData,
	            	            backgroundColor: [
	            	            	/*'rgba(1,87,155,0.7)',
	            	            	'rgba(2,119,189,0.7)',
	            	            	'rgba(2,136,209,0.7)',
	            	            	'rgba(3,155,229,0.7)',
	            	            	'rgba(3,169,244,0.7)',
	            	            	'rgba(41,182,246,0.7)',
	            	            	'rgba(79,195,247, 0.7)',
	            	            	'rgba(129,212,250,0.7)',
	            	            	'rgba(179,229,252,0.7)',
	            	            	'rgba(166,208,228,0.7)',*/
	            	            	'rgb(49,97,79)',
	            	            	'rgb(71,140,114)',
	            	            	'rgb(84,166,135)',
	            	            	'rgb(123,211,171)',
	            	            	'rgb(153,184,169)',
	            	            	'rgb(102,178,103)',
	            	            	'rgb(154,204,153)',
	            	            	'rgb(186,221,139)',
	            	            	'rgb(238,231,148)',
	            	            	'rgb(231,244,218)',
	            	            	]
	            	        }]
	            	    },
	            	    options: {
	            	    	 responsive: false, // ‚úÖ Ï∞®Ìä∏ ÌÅ¨Í∏∞ ÏûêÎèô Ï°∞Ï†à ÎπÑÌôúÏÑ±Ìôî
	            	         maintainAspectRatio: false, // ‚úÖ ÏõêÌòï ÎπÑÏú® Ïú†ÏßÄ ÎπÑÌôúÏÑ±Ìôî
	            	        //aspectRatio: 1, // Í∞ÄÎ°úÏÑ∏Î°ú ÎπÑÏú®ÏùÑ 1:1Î°ú Í≥†Ï†ïÌïòÏó¨ ÏõêÌòï Ïú†ÏßÄ
	            	        layout: {
	            	            padding: {
	            	            	top: 80, 
	            	            	//bottom :5,
	            	            	left : 240,  
	            	            	right : 240
	            	            }
	            	        },
	            	        
	            	        plugins: {
	            	        	datalabels: { 
	            	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
	            	            },
	            	            legend: { 
	            	            	position: "bottom",
	            	            	 fullWidth: true,
	            	            	labels : {
	            	            		font: { size: 16,weight : 'bold' },
	            	            		boxWidth: 16,
	            	            		padding : 25
	            	            	}
	            	            },
	            	            title : {
	            	            	display: true,
	            	            	text: 'ÏàòÏûÖÎ¨ºÌíà Í≥ºÏÑ∏ ÌòÑÌô©',
	            	            	font : {size :35,weight : 'bold'},
	            	            	padding: {bottom : 30}
	            	            },
	            	            tooltip: {
	             	               enabled : false // Ìà¥ÌåÅ ÎπÑÌôúÏÑ±Ìôî
	             	            },
	             	            datalabels: { 
	             	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
	             	            }
	            	        }
	            	    },
	            	});

            	
            	// üü¢7Î≤àÏß∏ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "5.FTA ÏÇ¨ÌõÑÏ†ÅÏö©Í∏àÏï°");
                doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "I.ÏàòÏûÖ");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin6 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth6 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight6 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                
                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth6, boxHeight6, 'D'); 
                
                
                doc.setFontSize(12);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(4, 30, "ÏÇ¨ÌõÑÏ†ÅÏö© Í±¥Ïàò Î∞è Í∏àÏï°");
                
                var reportData7 = data.reportData7;
                console.log("reportData7",reportData7);

                // üìå 1. ÌÖåÏù¥Î∏îÏù¥ Îì§Ïñ¥Í∞à ÏãúÏûë Y ÏúÑÏπò Ï†ïÏùò
                let tableStartY = 55;
                let datas6 = []; // Ìï≠ÏÉÅ Î∞∞Ïó¥Î°ú ÏÑ†Ïñ∏ (Ï¥àÍ∏∞Í∞í)
                let totals5 = ["", "", "", "", "", "", "", "", ""]; // ÏµúÏÜå 9Ïπ∏ÏßúÎ¶¨ Îπà Í∞í
                let rowCount5 = 0;
                
                if (reportData7.length === 0) {
                  // üõë Îç∞Ïù¥ÌÑ∞ ÏóÜÏùÑ Îïå: ÏïàÎÇ¥ Î¨∏Íµ¨ Ï∂úÎ†•
                   noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà FTA Ï†ÅÏö© Ïã§Ï†ÅÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                  
                  doc.setFont('NanumSquareR', 'normal');
                  doc.setFontSize(10);
                  doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                  doc.text(noDataMsg, 10, 55);
                } else {
                  // ‚úÖ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏùÑ Îïå: ÌÖåÏù¥Î∏î ÏÉùÏÑ±

                   datas6 = reportData7.map(item => {
                    var formattedTransTaxSum = Intl.NumberFormat("ko-KR").format(item.transTaxSum); 
                    var formattedTaxCot = Intl.NumberFormat("ko-KR").format(item.taxCot); 
                    var formattedTaxCoVat = Intl.NumberFormat("ko-KR").format(item.taxCotVat); 
                    
                    return [
                      item.seq,
                      item.reasonCode,
                      item.rptNo,
                      item.impRptDay,
                      item.rptDay,
                      item.petDay,
                      item.cus,
                      formattedTransTaxSum,
                      formattedTaxCot,
                      formattedTaxCoVat
                    ];
                  });

                   rowCount5 = datas6.length; // ‚úÖ Ìñâ Í∞úÏàò Ï†ÄÏû•

                   // Ï¥ùÌï© Í≥ÑÏÇ∞ (6~8Ïó¥)
                   for (let i = 7; i <= 9; i++) {
                     var sum = datas6.reduce((acc, row) => acc + (parseFloat(row[i].replace(/,/g, "")) || 0), 0);
                     totals5[i] = Intl.NumberFormat("ko-KR").format(sum);
                    
                   }
                   
                   var header5 = [['','Ï†ïÏ†ïÏÇ¨Ïú†ÏΩîÎìú','ÏàòÏûÖÏã†Í≥† Î≤àÌò∏','ÏàòÏûÖÏã†Í≥†ÏùºÏûê','Ï†ïÏ†ïÏã†Ï≤≠ÏùºÏûê','ÏäπÏù∏ ÏùºÏûê','ÏàòÏûÖ ÏÑ∏Í¥Ä','Ï¶ùÍ∞êÎÇ¥Ïó≠','Í¥ÄÏÑ∏ Ï¶ùÍ∞êÎÇ¥Ïó≠','Î∂ÄÍ∞ÄÏÑ∏ Ï¶ùÍ∞êÎÇ¥Ïó≠']];
                  

                // ÌÖåÏù¥Î∏î Ìó§Îçî
   	            var header6 = [['Í±¥Ïàò','ÌôòÍ∏âÏï°','Í¥ÄÏÑ∏','Î∂ÄÍ∞ÄÏÑ∏']];
   	            var ftaTotalData = [[rowCount5, totals5[7], totals5[8], totals5[9]]];
   	            
   	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
               	doc.autoTable({
               	  head: header6,
               	  body: ftaTotalData,
               	  startY: 32, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
               	  theme: 'grid',
               	  styles: {
               	    font: 'NanumSquareR',
               	    fontSize: 7,
               	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
               	    textColor: [0, 0, 0],
               	    valign: 'middle',
               	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                       wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
               	  },
               	  headStyles: {
               		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
               		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
               	    fontSize: 8,
               	    textColor: [255, 255, 255],
               	    font: 'NanumSquareEB',
               	    fontStyle: 'bold',
               	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
               	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
               	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
               	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                       wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                       halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
               	  },
               	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
               	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
               	  columnStyles: {
               		  	0: { halign: 'center'}, // Í±¥Ïàò
               		  	1: { halign: 'right'}, // Í±¥Ïàò
               		  	2: { halign: 'right'}, // Í±¥Ïàò
               		  	3: { halign: 'right'}, // Í±¥Ïàò
               	  },
           		});
               	
                   
                   
                   // üü¢ ÌÖåÏù¥Î∏î Í∑∏Î¶¨Í∏∞
                  doc.autoTable({
                    head: header5,
                    body: datas6,
                    startY: tableStartY,
                    theme: 'grid',
                    styles: {
                      font: 'NanumSquareR',
                      fontSize: 7,
                      cellPadding: 2,
                      textColor: [0, 0, 0],
                      valign: 'middle',
                      overflow: 'hidden',
                      wordWrap: 'normal',
                    },
                    headStyles: {
                      fillColor: [35, 69, 56],
                      fontSize: 8,
                      textColor: [255, 255, 255],
                      font: 'NanumSquareEB',
                      fontStyle: 'bold',
                      cellPadding: 2,
                      lineWidth: 0.2,
                      border: [true, true, true, true],
                      overflow: 'linebreak',
                      wordWrap: 'break-word',
                      halign: 'center',
                    },
                    margin: { left: 5, right: 5 },
                    tableWidth: 'auto',
                    columnStyles: {
                    	0: { halign: 'center'}, // Í±¥Ïàò
               		  	1: { halign: 'center'}, // Í±¥Ïàò
               		  	2: { halign: 'center'}, // Í±¥Ïàò
               		  	3: { halign: 'center'}, // Í±¥Ïàò
               		  	4: { halign: 'center'}, // Í±¥Ïàò
               		  	5: { halign: 'center'}, // Í±¥Ïàò
               		  	6: { halign: 'center'}, // Í±¥Ïàò
               	        7: { halign: 'right'}, // ÌôòÍ∏âÏï°
               	        8: { halign: 'right'}, // Í¥ÄÏÑ∏
               	        9: { halign: 'right'}, // Î∂ÄÍ∞ÄÏÑ∏
                    },
                  });
                }

                
                
            	
               
	            
	           
            	
            	// ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "6.FTA Í¥ÄÏÑ∏ Ï†àÍ∞êÌö®Í≥º");
                doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "I.ÏàòÏûÖ");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin14 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth14 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight14 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                
                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth14, boxHeight14, 'D'); 
                
                
                
                var reportData15 = data.reportData15;
                console.log("reportData15",reportData15);
                
                if(reportData15.length === 1){
                	/* noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà FTA SAVING ÏÑ∏Ïï°Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                	 
                	  doc.setFont('NanumSquareR', 'normal');
                	  doc.setFontSize(9);
                	  doc.setTextColor(150);
                	  doc.text(noDataMsg, 10, 30);*/
                	  
                	  lastYPage10 = 16;
                }else{
                	var datas13 = reportData15.map(item => {
        	              var amountKrw = parseFloat(item.amountKrw) || 0;  // ÏõêÎ≥∏ Í∞í
        	              var formattedCnt = Intl.NumberFormat("ko-KR").format(item.cnt);  // Ìè¨Îß§ÌåÖÎêú Í∞í
        	              var formattedTotalFtaRate = Intl.NumberFormat("ko-KR").format(item.ftaRate);  // Ìè¨Îß§ÌåÖÎêú Í∞í
        	              var formattedTotalGs = Intl.NumberFormat("ko-KR").format(item.gs);  // Ìè¨Îß§ÌåÖÎêú Í∞í
        	              var formattedTotalDuty = Intl.NumberFormat("ko-KR").format(item.duty);  // Ìè¨Îß§ÌåÖÎêú Í∞í
        	              
        	              return [
        	                item.gsRate,       		// Íµ¨Î∂Ñ
        	                item.gsDivi,            // ÏÑ∏Ï¢Ö
        	                formattedCnt, 			// Ïã†Í≥†Í±¥Ïàò
        	                formattedTotalFtaRate,  // Ï†ÅÏö© Ï†Ñ Í¥ÄÏÑ∏
        	                formattedTotalGs,       // Ï†ÅÏö© ÌõÑ Í¥ÄÏÑ∏
        	                formattedTotalDuty      // Ï†àÍ∞êÏÑ∏Ïï°
        	              ];
        	            });
        		         
                    	// ÌÖåÏù¥Î∏î Ìó§Îçî
        		       var header14 = [
        		    	   	[ 
        		    		    { content: 'Íµ¨Î∂Ñ', rowSpan: 2, border: [true, true, true, true] },  // ÏàòÎ¶¨ÏùºÏûê ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
        		    		    { content: 'ÏÑ∏Ï¢Ö', rowSpan: 2, border: [true, true, true, true] },
        		    		    { content: 'FTA SAVING ÏÑ∏Ïï°', colSpan: 4, border: [true, true, true, true] },  // ÏàòÏûÖ Í±∞ÎûòÌòïÌÉú ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
        		    		  ],  // Ï≤´ Î≤àÏß∏ Ìñâ
        		    		  [
        		    		    { content: 'Ïã†Í≥†Í±¥Ïàò', border: [true, true, true, true] },
        		    		    { content: 'Ï†ÅÏö© Ï†Ñ Í¥ÄÏÑ∏', border: [true, true, true, true] },
        		    		    { content: 'Ïã§Ï†ú ÎÇ©Î∂Ä Í¥ÄÏÑ∏', border: [true, true, true, true] },
        		    		    { content: 'Ï†àÍ∞ê ÏÑ∏Ïï°', border: [true, true, true, true] },
        		    		  ]
        		    	 ];
        		       
        		       
                    	// üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                    	doc.autoTable({
                    	  head: header14,
                    	  body:datas13,
                    	  startY: 26, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                    	  theme: 'grid',
                    	  styles: {
                    	    font: 'NanumSquareR',
                    	    fontSize: 7,
                    	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                    	    textColor: [0, 0, 0],
                    	    valign: 'middle',
                    	    halign: 'center',
                    	    overflow: 'linebreak', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøà Ï†ÅÏö©
                    	  },
                    	  headStyles: {
                    		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                    		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                    	    fontSize: 8,
                    	    textColor: [255, 255, 255],
                    	    font: 'NanumSquareEB',
                    	    fontStyle: 'bold',
                    	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                    	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                    	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                    	  },
                    	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                    	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                    	  columnStyles: {
                    		  	0: { halign: 'center'}, // Íµ¨Î∂Ñ
                    	        1: { halign: 'center'}, // ÏÑ∏Ï¢Ö
                    	        2: { halign: 'right' }, // Ïã†Í≥†Í±¥Ïàò
                    	        3: { halign: 'right'}, // Ï†ÅÏö© Ï†Ñ Í¥ÄÏÑ∏
                    	        4: { halign: 'right'}, // Ï†ÅÏö© ÌõÑ Í¥ÄÏÑ∏
                    	        5: { halign: 'right'}, // Ï†àÍ∞ê ÏÑ∏Ïï°
                    	  },
                    	 didParseCell: function (data) {
               		    // Îç∞Ïù¥ÌÑ∞ ÏÖÄÏù¥Í≥†, 'Ìï©Í≥Ñ'Ïù∏ Í≤ΩÏö∞
               		    if (data.section === 'body' && data.row.raw[0] === 'Ìï©Í≥Ñ') {
               		      data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤Ω
             	              data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
             	              data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
               		    }
               		  }
                		});
                    	
                    	 lastYPage10 = doc.lastAutoTable.finalY;  
                }
		         
                
              	 var reportData16 = data.reportData16;
                 console.log("reportData16",reportData16);
 		         
                 if(reportData16.length === 0){
                	 
                 }else{
                	 let totalCnt = 0;
                	 let totalBeforeFta = 0;
                	 let totalAfterFta = 0;
                	 let totalSaving = 0;

                	 let datas14 = reportData16.map(item => {
                	   totalCnt += Number(item.cnt || 0);
                	   totalBeforeFta += Number(item.beforeFta || 0);
                	   totalAfterFta += Number(item.afterFta || 0);
                	   totalSaving += Number(item.saving || 0);

                	   return [
                	     item.gsname,
                	     item.gsDivi,
                	     Intl.NumberFormat("ko-KR").format(item.cnt),
                	     Intl.NumberFormat("ko-KR").format(item.beforeFta),
                	     Intl.NumberFormat("ko-KR").format(item.afterFta),
                	     Intl.NumberFormat("ko-KR").format(item.saving),
                	   ];
                	 });

                	 datas14.push([
                	   'Ìï©Í≥Ñ',
                	   '',
                	   Intl.NumberFormat("ko-KR").format(totalCnt),
                	   Intl.NumberFormat("ko-KR").format(totalBeforeFta),
                	   Intl.NumberFormat("ko-KR").format(totalAfterFta),
                	   Intl.NumberFormat("ko-KR").format(totalSaving),
                	 ]);
          		         
                      	// ÌÖåÏù¥Î∏î Ìó§Îçî
          		       var header15 = [
          		    	   	[ 
          		    		    { content: 'Íµ¨Î∂Ñ', rowSpan: 2, border: [true, true, true, true] },  // ÏàòÎ¶¨ÏùºÏûê ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
          		    		    { content: 'ÏÑ∏Ï¢Ö', rowSpan: 2, border: [true, true, true, true] },
          		    		    { content: 'FTA Ï∂îÍ∞Ä SAVING Í∞ÄÎä• ÏÑ∏Ïï°', colSpan: 4, border: [true, true, true, true] },  // ÏàòÏûÖ Í±∞ÎûòÌòïÌÉú ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
          		    		  ],  // Ï≤´ Î≤àÏß∏ Ìñâ
          		    		  [
          		    		    { content: 'Ïã†Í≥†Í±¥Ïàò', border: [true, true, true, true] },
          		    		    { content: 'Ïã§Ï†ú ÎÇ©Î∂Ä Í¥ÄÏÑ∏', border: [true, true, true, true] },
          		    		    { content: 'Ï†ÅÏö© ÌõÑ Í¥ÄÏÑ∏', border: [true, true, true, true] },
          		    		    { content: 'Ï†àÍ∞ê Í∞ÄÎä• ÏÑ∏Ïï°', border: [true, true, true, true] },
          		    		  ]
          		    	 ];
          		       
          		       
                      	// üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                      	 doc.autoTable({
                      	  head: header15,
                      	  body:datas14,
                      	  startY: lastYPage10 + 10, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                      	  theme: 'grid',
                      	  styles: {
                      	    font: 'NanumSquareR',
                      	    fontSize: 7,
                      	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                      	    textColor: [0, 0, 0],
                      	    valign: 'middle',
                      	    halign: 'center',
                      	    overflow: 'linebreak', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøà Ï†ÅÏö©
                      	  },
                      	  headStyles: {
                      		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                      		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                      	    fontSize: 8,
                      	    textColor: [255, 255, 255],
                      	    font: 'NanumSquareEB',
                      	    fontStyle: 'bold',
                      	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                      	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                      	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                      	  },
                      	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                      	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                      	  columnStyles: {
                      		  	0: { halign: 'center'}, // Íµ¨Î∂Ñ
                      	        1: { halign: 'center'}, // ÏÑ∏Ï¢Ö
                      	        2: { halign: 'right' }, // Ïã†Í≥†Í±¥Ïàò
                      	        3: { halign: 'right'}, // Ï†ÅÏö© Ï†Ñ Í¥ÄÏÑ∏
                      	        4: { halign: 'right'}, // Ï†ÅÏö© ÌõÑ Í¥ÄÏÑ∏
                      	        5: { halign: 'right'}, // Ï†àÍ∞ê ÏÑ∏Ïï°
                      	  },
                      	 didParseCell: function (data) {
                 		    // Îç∞Ïù¥ÌÑ∞ ÏÖÄÏù¥Í≥†, 'Ìï©Í≥Ñ'Ïù∏ Í≤ΩÏö∞
                 		    if (data.section === 'body' && data.row.raw[0] === 'Ìï©Í≥Ñ') {
                 		      data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤Ω
               	              data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
               	              data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
                 		    }
                 		  }
                  		});
                      	
                      	var explanationY = doc.lastAutoTable.finalY + 8;
                      	doc.setFont('NanumSquareR', 'normal');
                      	doc.setFontSize(8);
                      	doc.setTextColor(64, 64, 64);  // ÌöåÏÉâ ÎäêÎÇå

                      	var explanation = [
                      	 ` * FTA Ï∂îÍ∞Ä SAVING Í∞ÄÎä•Ìïú ÏÑ∏Ïï°ÏùÄ,ÏõêÏÇ∞ÏßÄ, Ï†ÅÏ∂úÍµ≠, Í≤∞Ï†ï Í∏∞Ï§Ä Îì± ÏõêÏÇ∞ÏßÄ Ï†ÅÏö© ÏõêÏπôÏùÑ Ï∂©Ï°±ÌïòÎäî Í≤ΩÏö∞, ÏàòÏûÖ Ïã†Í≥† ÏàòÎ¶¨ ÏùºÎ°úÎ∂ÄÌÑ∞ 1ÎÖÑ Ïù¥ÎÇ¥Ïóê ÌôòÍ∏âÏù¥ Í∞ÄÎä•Ìïú ÏÑ∏Ïï°ÏùÑ ÏùòÎØ∏Ìï©ÎãàÎã§.`
                      	];

                      	let lineHeight = 4.5; // Ï§ÑÍ∞ÑÍ≤©
                      	let currentY = doc.lastAutoTable.finalY + 5;

                      	doc.setFont('NanumSquareR', 'normal');
                      	doc.setFontSize(8);
                      	doc.setTextColor(64, 64, 64);

                      	explanation.forEach((line, index) => {
                      	    doc.text(line, 8, currentY); // Í∞Å Ï§ÑÏùÑ Ï∂úÎ†•
                      	    currentY += lineHeight; // Ï§ÑÍ∞ÑÍ≤©ÎßåÌÅº YÏ¢åÌëú ÏóÖÎç∞Ïù¥Ìä∏
                      	});
                 }
                 
                 if(reportData15.length === 1 && reportData16.length === 0){
                	 noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà FTA ÏÇ¨ÌõÑÏ†ÅÏö© Ïã§Ï†ÅÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                     
                     doc.setFont('NanumSquareR', 'normal');
                     doc.setFontSize(10);
                     doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                     doc.text(noDataMsg, 10, 40);

                 }
                 
                 
                 
            	
            	// üü¢8Î≤àÏß∏ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "7.Ï£ºÏöî Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò");
                doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "I.ÏàòÏûÖ");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin7 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth7 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight7 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                
                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth7, boxHeight7, 'D'); 
                
                var reportData8 = data.reportData8;
               console.log("reportData8",reportData8);
                if(reportData8.length == 0 ){
                	 // üõë Îç∞Ïù¥ÌÑ∞ ÏóÜÏùÑ Îïå: ÏïàÎÇ¥ Î¨∏Íµ¨ Ï∂úÎ†•
                	console.log("xxxxx");
                	noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                   
                   doc.setFont('NanumSquareR', 'normal');
                   doc.setFontSize(10);
                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
                }else{
                	// ÏàòÏûÖÍ∏àÏï°(ÏõêÌôî)Ïùò Ï¥ùÌï© Í≥ÑÏÇ∞
                    var totalTotRptKrw = reportData8.reduce((sum, item) => sum + item.conTotAmt, 0);
                    
                    // percentage 0.01% Ïù¥ÏÉÅÏù∏ Ìï≠Î™© ÌïÑÌÑ∞ÎßÅ
                    let filtered = reportData8.filter(item => {
                      var ratio = item.conTotAmt / totalTotRptKrw;
                      return ratio * 100 >= 0.01;
                    });
                    
                    // conTotAmt Í∏∞Ï§Ä ÎÇ¥Î¶ºÏ∞®Ïàú Ï†ïÎ†¨
                    filtered.sort((a, b) => b.conTotAmt - a.conTotAmt);

                    // 10Í∞ú Ï¥àÍ≥º Ïãú ÏÉÅÏúÑ 10Í∞úÎßå ÏÑ†ÌÉù
                    if (filtered.length > 10) {
                      filtered = filtered.slice(0, 10);
                    }
                   
                    var datas7 = filtered.map(item => {
      	              var formattedTotImp = Intl.NumberFormat("ko-KR").format(item.totImp); 
      	              var formattedConTotAmt = Intl.NumberFormat("ko-KR").format(item.conTotAmt);
      	              
      	              // ÎπÑÏú® Í≥ÑÏÇ∞ (Ï¥ùÏï° ÎåÄÎπÑ Î∞±Î∂ÑÏú®)
      	            var percentage = totalTotRptKrw > 0 ? ((item.conTotAmt / totalTotRptKrw) * 100).toFixed(2) + "%" : "0%";

      	              
      	              return [
      	            	  item.supFirm,            // Ìï¥Ïô∏Í±∞ÎûòÏ≤ò
      	            	  item.supStSht,        	// Íµ≠Í∞Ä
      	            	  formattedTotImp,			//Í±¥Ïàò
      	            	  formattedConTotAmt,    	// ÏàòÏûÖÍ∏àÏï°(ÏõêÌôî)
      	            	  percentage
      	              ];
      	            });
    	            
    	            // ÌÖåÏù¥Î∏î Ìó§Îçî
    	            var header5 = [['Ìï¥Ïô∏Í±∞ÎûòÏ≤ò','Íµ≠Í∞Ä','Í±¥Ïàò','ÏàòÏûÖÍ∏àÏï°(ÏõêÌôî)','ÎπÑÏú®']];
    	            
    	            let sortedData = [...reportData8]
	              	  .map((item, idx) => ({ idx, value: item.cnt })) // indexÏôÄ Í∞í Ï†ÄÏû•
	              	  .sort((a, b) => b.value - a.value); // ÌÅ∞ Í∞íÎ∂ÄÌÑ∞ Ï†ïÎ†¨
	
	              	let rankMap = {}; // index -> ÏàúÏúÑ Îß§Ìïë
	              	sortedData.forEach((item, i) => {
	              	  rankMap[item.idx] = i + 1; // 1Î∂ÄÌÑ∞ ÏãúÏûë
	              	})
    	            
    	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                	doc.autoTable({
                	  head: header5,
                	  body:datas7,
                	  startY: 24, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                	  theme: 'grid',
                	  styles: {
                	    font: 'NanumSquareR',
                	    fontSize: 7,
                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                	    textColor: [0, 0, 0],
                	    valign: 'middle',
                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
                	  },
                	  headStyles: {
                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                	    fontSize: 8,
                	    textColor: [255, 255, 255],
                	    font: 'NanumSquareEB',
                	    fontStyle: 'bold',
                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
                	  },
                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                	  columnStyles: {
                		  	0: { halign: 'center'}, // Ìï¥Ïô∏Í±∞ÎûòÏ≤ò
                	        1: { halign: 'center'}, // Íµ≠Í∞Ä
                	        2: { halign: 'right'}, // Í±¥Ïàò
                	        3: { halign: 'right'}, // ÏàòÏûÖÍ∏àÏï°(ÏõêÌôî)
                	        4: { halign: 'right'}, // ÎπÑÏú®
                	  },
            		});
                	
                	
                	lastYPage6 = doc.lastAutoTable.finalY;  
                	var pageAfterTable6 = doc.internal.getCurrentPageInfo().pageNumber;
                	
                	var spaceLeft6 = doc.internal.pageSize.height - lastYPage6 - 10;
                	
                	
                	
                	if(spaceLeft6< 120){
                		doc.addPage();
                		chartPage6 = pageAfterTable6 + 1;
                		chartY6 = 15;
                	}else{
                		 chartPage6 = pageAfterTable6;       // Í∞ôÏùÄ ÌéòÏù¥ÏßÄÏóê Í∑∏Î¶¥ Ïàò ÏûàÏùå
                		  chartY6 = lastYPage6;
                	}
                	
                	
                   	 pdf7canvas = document.createElement("canvas");
                	 pdf7ctx = pdf7canvas.getContext("2d");
                	pdf7canvas.width = 1000;
                	pdf7canvas.height = 1000;
                	pdf7canvas.style.visibility = 'hidden';
                	document.body.appendChild(pdf7canvas);
                	
                	// ÌîåÎü¨Í∑∏Ïù∏ Ï†ïÏùò
                	var chartDataLabels3 = {
                	  id: 'chartDataLabels',
                	  afterDraw(chart, args, options) {
                	    var ctx3 = chart.ctx;
                	    ctx3.textAlign = "center";
                	    ctx3.textBaseline = "middle";
                	    ctx3.fillStyle = '#000';
                	    ctx3.font = "16px NanumSquare";
                	    ctx3.lineWidth =3;

                	    var prevTextPositions3 = [];
                	    var labelPoints = [];

                	    chart.data.datasets.forEach((dataset, i) => {
                	      chart.getDatasetMeta(i).data.forEach((datapoint, index) => {
                	        var supFirm = chart.data.labels[index]; // supFirm Ïù¥Î¶Ñ
                	        var percentage = dataset.data[index];   // ÎπÑÏú® Ïà´Ïûê
                	        var rank = rankMap[index];
                	        
                	        if (percentage < 1) return;

                	        var { x, y } = datapoint.tooltipPosition();
                	        var radius = chart.outerRadius || (chart.chartArea.width / 2);
                	        var angle = (datapoint.startAngle + datapoint.endAngle) / 2;

                	        var xOuter = x + (radius * 0.4) * Math.cos(angle);
                	        var yOuter = y + (radius * 0.4) * Math.sin(angle);


                	        var xOuter = x + radius * 0.3 * Math.cos(angle);
                	        var yOuter = y + radius * 0.3 * Math.sin(angle);
                	        var xMiddle = xOuter + 20 * Math.cos(angle);
                	        var yMiddle = yOuter + 20 * Math.sin(angle);
                	        var xLine = xMiddle + (Math.cos(angle) > 0 ? 20 : -20);
                	        var yLine = yMiddle;
                	        
                	        

                	        labelPoints.push({
                	            index,
                	            rank,
                	            text: ` ${rank}. ${supFirm} : ${percentage.toFixed(2)}%`,
                	            xOuter,
                	            yOuter,
                	            xMiddle,
                	            yMiddle,
                	            xLine,
                	            yLine,
                	            angle,
                	            side: Math.cos(angle) > 0 ? 'right' : 'left'
                	        });
                	    });
                	});

                	// ‚õî y Í≤πÏπ® Î∞©ÏßÄ: Ï¢åÏö∞ ÎÇòÎà†ÏÑú Îî∞Î°ú Ï†ïÎ†¨
                	var minYGap = 22;

                	['left', 'right'].forEach(side => {
                	    var sideLabels = labelPoints.filter(p => p.side === side)
                	        .sort((a, b) => a.yLine - b.yLine);

                	    for (let i = 1; i < sideLabels.length; i++) {
                	        var prev = sideLabels[i - 1];
                	        var curr = sideLabels[i];
                	        if ((curr.yLine - prev.yLine) < minYGap) {
                	            curr.yLine = prev.yLine + minYGap;
                	        }
                	    }

                	    // Îã§Ïãú Í∑∏Î¶¨Í∏∞
                	    sideLabels.forEach(p => {
                	        ctx3.beginPath();
                	        ctx3.moveTo(p.xOuter, p.yOuter);
                	        ctx3.lineTo(p.xMiddle, p.yMiddle);
                	        ctx3.lineTo(p.xLine, p.yLine);
                	        ctx3.strokeStyle = 'rgba(129,212,250,0.9)';
                	        ctx3.stroke();

                	        ctx3.textAlign = p.side === 'right' ? "left" : "right";
                	        ctx3.fillText(p.text, p.xLine, p.yLine);
                	    });
                		});

                	  }
                	};

                	
                	// 1% Ïù¥ÏÉÅÏù∏ Îç∞Ïù¥ÌÑ∞Îßå ÌïÑÌÑ∞ÎßÅ
                	var chartDataFiltered = reportData8
                	  .map(item => {
                	    var percentage = totalTotRptKrw > 0 ? (item.conTotAmt / totalTotRptKrw) * 100 : 0;
                	    return {
                	      supFirm: item.supFirm,
                	      percentage: percentage
                	    };
                	  })
                	  .filter(item => item.percentage >= 5); // üî•5% Ïù¥ÏÉÅÎßå

                	// ÎùºÎ≤®: supFirm Ïù¥Î¶Ñ
                	var supFirmLabels = chartDataFiltered.map(item => item.supFirm);

                	// Îç∞Ïù¥ÌÑ∞: ÎπÑÏú® (ÏÜåÏàòÏ†ê 2ÏûêÎ¶¨)
                	var impPieData = chartDataFiltered.map(item => Number(item.percentage.toFixed(2)));
                	
                	var pdf7chart = new Chart(pdf7ctx, {
                		plugins : [chartDataLabels3],
                			type: "pie",
    	            	    data: {
    	            	        labels: supFirmLabels,
    	            	        datasets: [{
    	            	            data: impPieData,
    	            	            backgroundColor: [
    	            	            	/*'rgba(1,87,155,0.7)',
    	            	            	'rgba(2,119,189,0.7)',
    	            	            	'rgba(2,136,209,0.7)',
    	            	            	'rgba(3,155,229,0.7)',
    	            	            	'rgba(3,169,244,0.7)',
    	            	            	'rgba(41,182,246,0.7)',
    	            	            	'rgba(79,195,247, 0.7)',
    	            	            	'rgba(129,212,250,0.7)',
    	            	            	'rgba(179,229,252,0.7)',
    	            	            	'rgba(166,208,228,0.7)',*/
    	            	            	'rgb(49,97,79)',
    	            	            	'rgb(71,140,114)',
    	            	            	'rgb(84,166,135)',
    	            	            	'rgb(123,211,171)',
    	            	            	'rgb(153,184,169)',
    	            	            	'rgb(102,178,103)',
    	            	            	'rgb(154,204,153)',
    	            	            	'rgb(186,221,139)',
    	            	            	'rgb(238,231,148)',
    	            	            	'rgb(231,244,218)',
    	            	            	]
    	            	        }]
    	            	    },
    	            	    options: {
    	            	    	 responsive: false, // ‚úÖ Ï∞®Ìä∏ ÌÅ¨Í∏∞ ÏûêÎèô Ï°∞Ï†à ÎπÑÌôúÏÑ±Ìôî
    	            	         maintainAspectRatio: false, // ‚úÖ ÏõêÌòï ÎπÑÏú® Ïú†ÏßÄ ÎπÑÌôúÏÑ±Ìôî
    	            	         //radius: '50%',
    	            	        //aspectRatio: 1, // Í∞ÄÎ°úÏÑ∏Î°ú ÎπÑÏú®ÏùÑ 1:1Î°ú Í≥†Ï†ïÌïòÏó¨ ÏõêÌòï Ïú†ÏßÄ
    	            	        layout: {
    	            	        	padding: {
    	            	                top: 300,
    	            	                right: 320,
    	            	                bottom: 30,
    	            	                left: 320
    	            	            }
    	            	        	//padding:250
    	            	        },
    	            	        plugins: {
    	            	            legend: { 
    	            	            	position: "bottom",
    	            	            	 fullWidth: true,
    	            	            	labels : {
    	            	            		boxWidth : 8,
    	            	            		padding : 10,
    	            	            		font : {
    	            	            			size : 13,
    	            	            			weight : 'bold'
    	            	            		}
    	            	            	}

    	            	            },
    	            	            title : {
    	            	            	display: true,
    	            	            	text: 'Ï£ºÏöî Ìï¥Ïô∏Í±∞ÎûòÏ≤ò',
    	            	            	font : {size :24 ,weight : 'bold'},
    	            	            	padding: {bottom :30}
    	            	            },
    	            	            tooltip: {
    	             	               enabled : false // Ìà¥ÌåÅ ÎπÑÌôúÏÑ±Ìôî
    	             	            },
    	             	            datalabels: { 
    	             	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
    	             	            }
    	            	        }
    	            	    },
    	            	});
                }

            	// üü¢ 9Î≤à  ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                doc.addPage();
                
                doc.setFontSize(16);
                doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                doc.setFont('NanumSquareB', 'normal');
                //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                doc.setTextColor(71, 140, 114); 
                doc.text(8, 15, "8.ÏàòÏ∂úÌÜµÍ¥ÄÌòÑÌô©");
                doc.setFontSize(12);
	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                doc.setFont('NanumSquareEB', 'bold');
                doc.setTextColor(108, 179, 63);
                doc.text(190, 15, "II.ÏàòÏ∂ú");
                
                // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                var boxMargin8 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                var boxWidth8 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                var boxHeight8 = 23;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                
                doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                doc.setDrawColor(35, 69,56); 
                doc.rect(5, 8, boxWidth8, boxHeight8, 'D'); 
                
                
                var reportData9 = data.reportData9;  
                	console.log("reportData9",reportData9);
    	            var datas8 = reportData9.map(item => {
    	              var amountKrw = parseFloat(item.amountKrw) || 0;  // ÏõêÎ≥∏ Í∞í
    	              var formattedAmountKrw = Intl.NumberFormat("ko-KR").format(amountKrw);  // Ìè¨Îß§ÌåÖÎêú Í∞í
    	              
    	              return [
    	                item.expLisDay,        // ÏàòÎ¶¨ÏùºÏûê
    	                item.expCnt,           // Í±¥Ïàò
    	                formattedAmountKrw, // Ïã†Í≥†Í∞ÄÍ≤©
    	                item.exType1,       // ÏùºÎ∞òÏàòÏ∂ú
    	                item.exType2,       // ÏõêÏÉÅÌÉú
    	                item.exType3,       // Î∞òÏÜ°ÏàòÏ∂ú
    	                item.exType4,       // ÏàòÎ¶¨Ïö©
    	                item.exType5,       // Í∏∞ÌÉÄÎ¨¥ÏÉÅÏàòÏ∂ú
    	                item.exPrc1,        // P/L
    	                item.exPrc3,        // Ï†úÏ∂úÏÑúÎ•ò
    	                item.exPrc2,        // Í≤ÄÏÇ¨
    	              ];
    	            });
    		         
    	            // ‚ñº 1) ‚ÄòÌï©Í≥Ñ‚Äô¬∑‚ÄòÎπÑÏú®(%)‚Äô Ìñâ Ï∂îÏ∂ú
    	             totalRow    = reportData9.find(row => row.expLisDay === "Ìï©Í≥Ñ");
    	             percentRow  = reportData9.find(row => row.expLisDay === "ÎπÑÏú®(%)");
    	             
    	             
    	                // Ìï©Í≥Ñ Ìñâ Ìè¨Îß∑
    		            var formattedTotal_1 = {
    		              cnt:         formatNum(totalRow.expCnt),
    		              amountKrw:   formatNum(totalRow.expAmountKrw),
    		              exType1:     formatNum(totalRow.exType1),
    		              exType2:     formatNum(totalRow.exType2),
    		              exType3:     formatNum(totalRow.exType3),
    		              exType4:     formatNum(totalRow.exType4),
    		              exType5:     formatNum(totalRow.exType5),
    		              exPrc1:      formatNum(totalRow.exPrc1),
    		              exPrc3:      formatNum(totalRow.exPrc3),
    		              exPrc2:      formatNum(totalRow.exPrc2)
    		            };
    		            
    		            var percentage_1 = {
  			            	  exType1: percentRow.exType1,  
  			            	  exType2: percentRow.exType2,
  			            	  exType3: percentRow.exType3,
  			            	  exType4: percentRow.exType4,
  			            	  exType5: percentRow.exType5,
  			            	  exPrc1:  percentRow.exPrc1,
  			            	  exPrc3:  percentRow.exPrc3,
  			            	  exPrc2:  percentRow.exPrc2
  			  	            };
    	             
    	            
    	            
    		         
    		     	// üü¢ Í±¥Ïàò, P/L, Ï†úÏ∂úÏÑúÎ•ò, Í≤ÄÏÇ¨ Í∞ÄÏ†∏Ïò§Í∏∞
    		         var countTotal1 = formattedTotal_1.cnt || 0;              // ÌÜµÍ¥ÄÍ±¥Ïàò
    		         var plTotal1 = formattedTotal_1.exPrc1 || 0;                 // P/L Ìï©Í≥Ñ
    		         var plPercentage1 = percentage_1.exPrc1 || 0;                // P/L ÎπÑÏú®
    		         var submissionTotal1 = formattedTotal_1.exPrc3 || 0;         // Ï†úÏ∂úÏÑúÎ•ò Ìï©Í≥Ñ
    		         var submissionPercentage1 = percentage_1.exPrc3 || 0;        // Ï†úÏ∂úÏÑúÎ•ò ÎπÑÏú®
    		         var inspectionTotal1 = formattedTotal_1.exPrc2 || 0;        // Í≤ÄÏÇ¨ Ìï©Í≥Ñ
    		         var inspectionPercentage1 = percentage_1.exPrc2 || 0;       // Í≤ÄÏÇ¨ ÎπÑÏú®
    	       
    		            // üü¢ ÏÑ§Î™Ö Ï∂îÍ∞Ä (ÏôºÏ™Ω Ï†ïÎ†¨ + Ï§Ñ ÎÇòÎàÑÍ∏∞)
    		            doc.setFontSize(9);
    		            doc.addFont('/pf/fonts/NanumSquareR.ttf', 'NanumSquareR', 'normal');
    		            doc.setFont('NanumSquareR', 'normal');
    		            doc.setTextColor(0, 0, 0);
    		            var description4 = [
    		            	`Îã§Ïùå ÏûêÎ£åÎäî ${data.rptDate2}Ïõî Ìïú Îã¨ ÏàòÏ∂úÌÜµÍ¥Ä ÏûêÎ£åÏù¥Î©∞ Ï¥ù ${countTotal1}Í±¥ ÏàòÏ∂úÏã†Í≥†Î•º ÏßÑÌñâÌïòÏòÄÏäµÎãàÎã§.`,
    		                `ÏàòÏ∂úÏã†Í≥† Ï≤òÎ¶¨ ÌòÑÌô©ÏùÄ P/L ${plTotal1}Í±¥ (${plPercentage1}), ÏÑúÎ•ò Ï†úÏ∂ú ${submissionTotal1}Í±¥ (${submissionPercentage1}), Í≤ÄÏÇ¨ ${inspectionTotal1}Í±¥ (${inspectionPercentage1}) ÏûÖÎãàÎã§.`
    		            ];
    		          
    		             startY = 23; // description ÎÜíÏù¥ ÏúÑÏπò
    		            description4.forEach((line, index) => {
    		            	  doc.text(8, startY, line); // ÏôºÏ™Ω Ï†ïÎ†¨ (x: 8, y: startY)
    		            	  startY += 5; // Í∞Å Ï§Ñ Í∞ÑÍ≤©ÏùÑ 5Î°ú ÏÑ§Ï†ïÌïòÏó¨ Îã§Ïùå Ï§ÑÎ°ú ÎÇ¥Î†§Í∞ê
    		        	});
    		         
		            if(reportData9.length === 2 ){
		            	  noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏ∂ú ÌÜµÍ¥Ä ÌòÑÌô© ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
		                   
		                   doc.setFont('NanumSquareR', 'normal');
		                   doc.setFontSize(10);
		                   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
		                   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
		            	
		            }else{
    		            	
		    		        // ÌÖåÏù¥Î∏î Ìó§Îçî
		    		       var header7 = [
		    		    	   	[ 
		    		    		    { content: 'ÏàòÎ¶¨ÏùºÏûê', rowSpan: 2, border: [true, true, true, true] },  // ÏàòÎ¶¨ÏùºÏûê ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		    		    { content: 'Í±¥Ïàò', rowSpan: 2, border: [true, true, true, true] },
		    		    		    { content: 'Ïã†Í≥†Í∞ÄÍ≤©(KRW)', rowSpan: 2, border: [true, true, true, true] },
		    		    		    { content: 'ÏàòÏ∂úÏã†Í≥† Í±∞ÎûòÌòïÌÉú ÌòÑÌô©', colSpan: 5, border: [true, true, true, true] },  // ÏàòÏûÖ Í±∞ÎûòÌòïÌÉú ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		    		    { content: 'ÏàòÏ∂úÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô©', colSpan: 3, border: [true, true, true, true] },  // ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô© ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		    		    		  ],  // Ï≤´ Î≤àÏß∏ Ìñâ
		    		    		  [
		    		    		    { content: 'ÏùºÎ∞ò ÌòïÌÉú', border: [true, true, true, true] },
		    		    		    { content: 'ÏúÑÌÉÅ Í∞ÄÍ≥µ ÏõêÏûêÏû¨', border: [true, true, true, true] },
		    		    		    { content: 'Í∏∞ÌÉÄ ÏàòÏ∂ú ÏäπÏù∏ Î©¥Ï†ú', border: [true, true, true, true] },
		    		    		    { content: 'Î¨¥ÏÉÅ Í≤¨Ìíà', border: [true, true, true, true] },
		    		    		    { content: 'Í∏∞ÌÉÄ', border: [true, true, true, true] },
		    		    		    { content: 'P/L', border: [true, true, true, true] },
		    		    		    { content: 'Ï†úÏ∂úÏÑúÎ•ò', border: [true, true, true, true] },
		    		    		    { content: 'Í≤ÄÏÇ¨', border: [true, true, true, true] },
		    		    		  ]
		    		    	 ];
		    		       
		    		       
		                	// üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
		                	doc.autoTable({
		                	  head: header7,
		                	  body:datas8,
		                	  startY: startY + 2, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
		                	  theme: 'grid',
		                	  styles: {
		                	    font: 'NanumSquareR',
		                	    fontSize: 7,
		                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
		                	    textColor: [0, 0, 0],
		                	    valign: 'middle',
		                	    halign: 'center',
		                	    overflow: 'linebreak', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøà Ï†ÅÏö©
		                	  },
		                	  headStyles: {
		                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
		                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
		                	    fontSize: 8,
		                	    textColor: [255, 255, 255],
		                	    font: 'NanumSquareEB',
		                	    fontStyle: 'bold',
		                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
		                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
		                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		                	  },
		                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
		                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
		                	  columnStyles: {
		                		  	0: { halign: 'center' , cellWidth: 23 }, // ÏàòÎ¶¨ÏùºÏûê
		                	        1: { halign: 'right' , cellWidth: 18}, // Í±¥Ïàò
		                	        2: { halign: 'right' , cellWidth: 23}, // Í≥ºÏÑ∏Í∞ÄÍ≤©
		                	        3: { halign: 'center' , cellWidth: 17}, // ÏùºÎ∞òÏàòÏûÖ
		                	        4: { halign: 'center' , cellWidth: 17}, // ÏàòÎ¶¨Î¨ºÌíà
		                	        5: { halign: 'center' , cellWidth: 17}, // Í≤¨Ìíà Î∞è Í¥ëÍ≥†Ïö©Ìíà
		                	        6: { halign: 'center' , cellWidth: 17}, // Í∏∞ÌÉÄ ÏàòÏûÖ ÏäπÏù∏Î©¥ÏÑ∏
		                	        7: { halign: 'center' , cellWidth: 17}, // Ïû¨ÏàòÏ∂úÏ°∞Í±¥
		                	        8: { halign: 'center' , cellWidth: 17 }, // P/L
		                	        9: { halign: 'center' , cellWidth: 17}, // Ï†úÏ∂úÏÑúÎ•ò
		                	        10: { halign: 'center' , cellWidth: 17}, // Í≤ÄÏÇ¨
		                	  },
		                	  didParseCell: function(data) {
		                		  var firstCellValue = data.row.raw[0];
		                		  
		                		  if (firstCellValue === "Ìï©Í≥Ñ" || firstCellValue === "ÎπÑÏú®(%)") {
		                  		    data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤ΩÏÉâ
		                  		    data.cell.styles.font = 'NanumSquareB';       // Ìè∞Ìä∏
		                  		    data.cell.styles.fontStyle = 'bold';          // ÍµµÍ≤å
		                  		  }
		                	 }
		            		});
		                	
		                	// 5Î≤àÏß∏ ÌÖåÏù¥Î∏î yÏ¢åÌëú Ï†ÄÏû• 
		                	lastYPage5 = doc.lastAutoTable.finalY; 
		                	var pageAfterTable5 = doc.internal.getCurrentPageInfo().pageNumber;
		                	
		                	var spaceLeft5 = doc.internal.pageSize.height - lastYPage5 - 10;
		                	
		                	
		                	if(spaceLeft5< 70){
		                		doc.addPage();
		                		chartPage5 = pageAfterTable5 + 1;
		                		chartY5 = 15;
		                	}else{
		                		 chartPage5 = pageAfterTable5;       // Í∞ôÏùÄ ÌéòÏù¥ÏßÄÏóê Í∑∏Î¶¥ Ïàò ÏûàÏùå
		                		  chartY5 = lastYPage5;
		                	}
		
				            var percentagesArr1 = [
			            	   percentRow.exType1,  
			            	   percentRow.exType2,
			            	   percentRow.exType3,
			            	   percentRow.exType4,
			            	   percentRow.exType5,
		            	   ];
		  	             
		                	var pdf5ImgData = percentagesArr1.map(safeParse); 
		                	
		                	// ÏôºÏ™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§ ÏÉùÏÑ±
		                	pdf5canvas = document.createElement('canvas');
		                	var pdf5ctx = pdf5canvas.getContext('2d');
		                	pdf5canvas.width = 500;
		                	pdf5canvas.height = 500;
		
		                	
		                	
		                	
		                	// ÏôºÏ™Ω Ï∞®Ìä∏ ÏÉùÏÑ±
		                	var pdf5chart = new Chart(pdf5ctx, {
		                		plugins : [chartDataLabels2],
		                		type: 'pie',
		                	    data: {
		                	        labels: ['ÏùºÎ∞òÌòïÌÉú', 'ÏúÑÌÉÅÍ∞ÄÍ≥µÏõêÏûêÏû¨', 'Í∏∞ÌÉÄÏàòÏ∂úÏäπÏù∏Î©¥Ï†ú', 'Î¨¥ÏÉÅÍ≤¨Ìíà', 'Í∏∞ÌÉÄ'],
		                	        datasets: [{
		                	            data: pdf5ImgData,
		                	            backgroundColor: [  'rgb(71,140,114)',
						    			            		'rgb(49,97,79)', 
						    			 	            	'rgb(84,166, 135)', 
						    			 	            	'rgb(186,221,139)',
						    			 	            	'rgb(231,244,218)']
		    	            	        }]
		    			            	
		                	    },
		                	    options: {
		                	        responsive: false,
		                	        maintainAspectRatio: false,  // ÎπÑÏú® Ïú†ÏßÄ Ìï¥Ï†ú
		                	        layout: {
		                	            padding: {
		                	                bottom: 20, // Ï∞®Ìä∏ ÌïòÎã® Ïó¨Î∞± (ÎùºÎ≤® Í≥µÍ∞Ñ ÌôïÎ≥¥)
		                	                right : 90,
		                	                left : 90
		                	            }
		                	        },
		                	        plugins: {
		                	        	datalabels: { 
		                	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
		                	            },
		                	            legend: {
		                	                position: 'bottom',
		                	                fullWidth: true,
		                	                labels: {
		                	                    font: {
		                	                        size: 18  // ÎùºÎ≤® ÌÅ¨Í∏∞ ÎèôÏùº
		                	                        ,weight: 'bold'
		                	                    },
		                	                    boxWidth: 15,  // ÏïÑÏù¥ÏΩò ÌÅ¨Í∏∞ ÎèôÏùº
		                	                    padding: 15
		                	                }
		                	            },
		                	            title: {
		                	                display: true,
		                	                text: 'Í±∞ÎûòÌòïÌÉú',
		                	                font: {
		                	                    size: 28,  // Ï†úÎ™© ÌÅ¨Í∏∞ ÎèôÏùº
		                	                    weight: 'bold'},
		                	                padding: {
		                	                    bottom: 20
		                	                }
		                	            }
		                	        }
		                	    }
		                	});
		                	
		                	
		                	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ (ÏàòÏûÖÏã†Í≥† Ï≤òÎ¶¨ÌòÑÌô© ÎπÑÏú®)
		                	var percentagesArr2 = [
		                		      percentRow.exPrc1,
					            	  percentRow.exPrc3,
					            	  percentRow.exPrc2
		                		];
		                	var pdf6ImgData = percentagesArr2.map(safeParse); 
		                	
		                	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§ ÏÉùÏÑ±
		                	pdf6canvas = document.createElement('canvas');
		                	var pdf6Ctx = pdf6canvas.getContext('2d');
		                	pdf6canvas.width = 500;
		                	pdf6canvas.height = 500;
		
		                	// Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ ÏÉùÏÑ±
		                	var pdf6chart = new Chart(pdf6Ctx, {
		                		plugins : [chartDataLabels2],
		                		type: 'pie',
		                	    data: {
		                	        labels: ['P/L', 'Ï†úÏ∂úÏÑúÎ•ò', 'Í≤ÄÏÇ¨'],
		                	        datasets: [{
		                	            data: pdf6ImgData,
		                	            backgroundColor: [  'rgb(197, 224, 180)', 
		    			 	            					'rgb(84,166, 135)', 
		    			 	            					'rgb(65,115,70)']
		                	        }]
		                	    },
		                	    options: {
		                	        responsive: false,
		                	        maintainAspectRatio: false,  
		                	        layout: {
		                	            padding: {
		                	                bottom: 70, // ÏïÑÎûòÏ™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
		                	                left: 90,  // ÏôºÏ™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
		                	                right: 90  // Ïò§Î•∏Ï™Ω Ïó¨Î∞± Ï∂îÍ∞Ä
		                	            }
		                	        },
		                	        plugins: {
		                	        	datalabels: {
		                 	                color: 'rgb(89,89,89)',
		                 	                formatter: function(value, context) {
		                 	                	let label = context.chart.data.labels[context.dataIndex];
		                 	                   if (value < 10) {  // Í∞íÏù¥ 10% ÎØ∏ÎßåÏù∏ Í≤ΩÏö∞ ÎùºÎ≤®ÏùÑ ÌëúÏãúÌïòÏßÄ ÏïäÏùå
		                 	                       return null;  
		                 	                   }
		                 	                    return label + " : " +value + "%"; // ÎùºÎ≤®Í≥º ÌçºÏÑºÌä∏ ÌëúÏãú
		                 	                },
		                 	                font: {
		                 	                    size: 20,
		                 	                    weight : 'bold'
		                 	                },
		                	        	}, 
		                	        	datalabels: { 
		               	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
		                	        	},
		                	        	legend: {
		                	                position: 'bottom',
		                	                fullWidth: true,
		                	                labels: {
		                	                    font: {
		                	                        size: 18  // ÎùºÎ≤® ÌÅ¨Í∏∞ ÎèôÏùº
		                	                        ,weight: 'bold'
		                	                    },
		                	                    boxWidth: 15,  // ÏïÑÏù¥ÏΩò ÌÅ¨Í∏∞ ÎèôÏùº
		                	                    padding: 15
		                	                }
		                	            },
		                	            title: {
		                	                display: true,
		                	                text: 'Ïã†Í≥†Ï≤òÎ¶¨',
		                	                font: {
		                	                    size: 28,  // Ï†úÎ™© ÌÅ¨Í∏∞ ÎèôÏùº
		                	                    weight: 'bold'
		                	                },
		                	                padding: {
		                	                    bottom: 10
		                	                }
		                	            }
		                	        }
		                	    }
		                	});
			            }
                	// üü¢ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                    doc.addPage();
                    
                    doc.setFontSize(16);
                    doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                    doc.setFont('NanumSquareB', 'normal');
                    //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                    doc.setTextColor(71, 140, 114); 
                    doc.text(8, 15, "9.Ï£ºÏöî Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò");
                    doc.setFontSize(12);
    	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
                    doc.setTextColor(108, 179, 63);
                    doc.text(190, 15, "II.ÏàòÏ∂ú");
                    
                    // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                    var boxMargin9 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                    var boxWidth9 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                    var boxHeight9 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                    
                    doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                    doc.setDrawColor(35, 69,56); 
                    doc.rect(5, 8, boxWidth9, boxHeight9, 'D'); 
                    
                    var reportData10 = data.reportData10;
                   console.log("reportData10",reportData10);
                   if(reportData10.length == 0){
                		noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà Ìï¥Ïô∏ Í±∞ÎûòÏ≤ò ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                	   
                	   doc.setFont('NanumSquareR', 'normal');
                	   doc.setFontSize(10);
                	   doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                	   doc.text(noDataMsg, 10, 40);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
                   }else{
                		// ÏàòÏ∂úÍ∏àÏï°(ÏõêÌôî)Ïùò Ï¥ùÌï© Í≥ÑÏÇ∞
                		var totalTotRptKrw = reportData10.reduce((sum, item) => sum + item.totRptKrw, 0);
                		
                		// percentage 0.01% Ïù¥ÏÉÅÏù∏ Ìï≠Î™© ÌïÑÌÑ∞ÎßÅ
                		let filtered = reportData10.filter(item => {
                		  var ratio = item.cmtExp / totalTotRptKrw;
                		  return ratio * 100 >= 0.01;
                		});
                		
                		// conTotAmt Í∏∞Ï§Ä ÎÇ¥Î¶ºÏ∞®Ïàú Ï†ïÎ†¨
                		filtered.sort((a, b) => b.cmtExp - a.cmtExp);

                		// 10Í∞ú Ï¥àÍ≥º Ïãú ÏÉÅÏúÑ 10Í∞úÎßå ÏÑ†ÌÉù
                		if (filtered.length > 10) {
                		  filtered = filtered.slice(0, 10);
                		}  
                 
                   
                    var datas9 = reportData10.map(item => {
      	              var formattedTotExp = Intl.NumberFormat("ko-KR").format(item.cmtExp); 
      	              var formattedConTotRptKrw = Intl.NumberFormat("ko-KR").format(item.totRptKrw);
      	              
      	            var expPercentage = totalTotRptKrw > 0 ? ((item.totRptKrw / totalTotRptKrw) * 100).toFixed(2) + "%" : "0%";
      	            
      	              
      	              return [
      	            	  item.buyFirm,            // Ìï¥Ïô∏Í±∞ÎûòÏ≤ò
      	            	  item.taStIsonm,        	// Íµ≠Í∞Ä
      	            	  formattedTotExp,			// Í±¥Ïàò
      	            	  formattedConTotRptKrw,    // ÏàòÏ∂úÍ∏àÏï°
      	            	  expPercentage				// ÎπÑÏú®
      	              ];
      	            });
    	            
    	            // ÌÖåÏù¥Î∏î Ìó§Îçî
    	            var header8 = [['Ìï¥Ïô∏Í±∞ÎûòÏ≤ò','Íµ≠Í∞Ä','Í±¥Ïàò','ÏàòÏ∂úÍ∏àÏï°','ÎπÑÏú®']];
    	            
    	            
    	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                	doc.autoTable({
                	  head: header8,
                	  body:datas9,
                	  startY: 24, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                	  theme: 'grid',
                	  styles: {
                	    font: 'NanumSquareR',
                	    fontSize: 7,
                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                	    textColor: [0, 0, 0],
                	    valign: 'middle',
                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
                	  },
                	  headStyles: {
                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                	    fontSize: 8,
                	    textColor: [255, 255, 255],
                	    font: 'NanumSquareEB',
                	    fontStyle: 'bold',
                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
                	  },
                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                	  columnStyles: {
                		    0: { halign: 'center'}, // Ìï¥Ïô∏Í±∞ÎûòÏ≤ò
	              			1: { halign: 'center'}, // Íµ≠Í∞Ä
	              			2: { halign: 'right'}, // Í±¥Ïàò
	              			3: { halign: 'right'}, // ÏàòÏûÖÍ∏àÏï°(ÏõêÌôî)
	              			4: { halign: 'right'}, // ÎπÑÏú®
                	  },
            		});
                	
                	lastYPage7 = doc.lastAutoTable.finalY;  
                	var pageAfterTable7 = doc.internal.getCurrentPageInfo().pageNumber;
                	
                	var spaceLeft7 = doc.internal.pageSize.height - lastYPage7 - 10;
                	
                	
                	
                	if(spaceLeft7< 120){
                		doc.addPage();
                		chartPage7 = pageAfterTable7 + 1;
                		chartY7 = 15;
                	}else{
                		 chartPage7 = pageAfterTable7;       // Í∞ôÏùÄ ÌéòÏù¥ÏßÄÏóê Í∑∏Î¶¥ Ïàò ÏûàÏùå
                		  chartY7 = lastYPage7;
                	}
                	
                	
                	
                	pdf8canvas = document.createElement("canvas");
                	pdf8ctx = pdf8canvas.getContext("2d");
                	pdf8canvas.width = 1000;
                	pdf8canvas.height = 1000;
                	pdf8canvas.style.visibility = 'hidden';
                	document.body.appendChild(pdf8canvas);
                	
            		let sortedData = [...reportData10]
	              	  .map((item, idx) => ({ idx, value: item.cnt })) // indexÏôÄ Í∞í Ï†ÄÏû•
	              	  .sort((a, b) => b.value - a.value); // ÌÅ∞ Í∞íÎ∂ÄÌÑ∞ Ï†ïÎ†¨

	              	let rankMap = {}; // index -> ÏàúÏúÑ Îß§Ìïë
	              	sortedData.forEach((item, i) => {
	              	  rankMap[item.idx] = i + 1; // 1Î∂ÄÌÑ∞ ÏãúÏûë
	              	});
                	
                	// ÌîåÎü¨Í∑∏Ïù∏ Ï†ïÏùò
                	var chartDataLabels4 = {
                	  id: 'chartDataLabels',
                	  afterDraw(chart, args, options) {
                	    var ctx4 = chart.ctx;
                	    ctx4.textAlign = "center";
                	    ctx4.textBaseline = "middle";
                	    ctx4.fillStyle = '#000';
                	    ctx4.font = "16px NanumSquare";
                	    ctx4.lineWidth =3;

                	    var prevTextPositions4 = [];
                	    var labelPoints = [];

                	    chart.data.datasets.forEach((dataset, i) => {
                	      chart.getDatasetMeta(i).data.forEach((datapoint, index) => {
                	        var exsupFirm = chart.data.labels[index]; // supFirm Ïù¥Î¶Ñ
                	        var expPercentage = dataset.data[index];   // ÎπÑÏú® Ïà´Ïûê
                	        var rank = rankMap[index];
                	        
                	        
                	        if (expPercentage < 1) return;

                	        var { x, y } = datapoint.tooltipPosition();
                	        var radius = chart.outerRadius || (chart.chartArea.width / 2);
                	        var angle = (datapoint.startAngle + datapoint.endAngle) / 2;

                	        var xOuter = x + radius * 0.3 * Math.cos(angle);
                	        var yOuter = y + radius * 0.3 * Math.sin(angle);
                	        var xMiddle = xOuter + 20 * Math.cos(angle);
                	        var yMiddle = yOuter + 20 * Math.sin(angle);
                	        var xLine = xMiddle + (Math.cos(angle) > 0 ? 20 : -20);
                	        var yLine = yMiddle;

                	        labelPoints.push({
                	            index,
                	            rank,
                	            text: ` ${rank}. ${exsupFirm} : ${expPercentage.toFixed(2)}%`,
                	            xOuter,
                	            yOuter,
                	            xMiddle,
                	            yMiddle,
                	            xLine,
                	            yLine,
                	            angle,
                	            side: Math.cos(angle) > 0 ? 'right' : 'left'
                	        });
                	    });
                	});

                	// ‚õî y Í≤πÏπ® Î∞©ÏßÄ: Ï¢åÏö∞ ÎÇòÎà†ÏÑú Îî∞Î°ú Ï†ïÎ†¨
                	var minYGap = 22;

                	['left', 'right'].forEach(side => {
                	    var sideLabels = labelPoints.filter(p => p.side === side)
                	        .sort((a, b) => a.yLine - b.yLine);

                	    for (let i = 1; i < sideLabels.length; i++) {
                	        var prev = sideLabels[i - 1];
                	        var curr = sideLabels[i];
                	        if ((curr.yLine - prev.yLine) < minYGap) {
                	            curr.yLine = prev.yLine + minYGap;
                	        }
                	    }

                	    // Îã§Ïãú Í∑∏Î¶¨Í∏∞
                	    sideLabels.forEach(p => {
                	        ctx4.beginPath();
                	        ctx4.moveTo(p.xOuter, p.yOuter);
                	        ctx4.lineTo(p.xMiddle, p.yMiddle);
                	        ctx4.lineTo(p.xLine, p.yLine);
                	        ctx4.strokeStyle = 'rgba(129,212,250,0.9)';
                	        ctx4.stroke();

                	        ctx4.textAlign = p.side === 'right' ? "left" : "right";
                	        ctx4.fillText(p.text, p.xLine, p.yLine);
                	    });
                		});
                	  }
                	};

                	
                	// 1% Ïù¥ÏÉÅÏù∏ Îç∞Ïù¥ÌÑ∞Îßå ÌïÑÌÑ∞ÎßÅ
                	var chartDataFilter = reportData10
                	  .map(item => {
                	    	var rpt = Number(item.totRptKrw || 0); // Í∏àÏï°
                	        var percentage = totalTotRptKrw > 0 ? (rpt / totalTotRptKrw) * 100 : 0;
                	        
                	        return {
                	          buyFirm: item.buyFirm,
                	          percentage: percentage
                	        };
                	      })
                	  .filter(item => item.percentage >= 5); //  üî•3% Ïù¥ÏÉÅÎßå

                	// ÎùºÎ≤®: supFirm Ïù¥Î¶Ñ
                	var expLabels = chartDataFilter.map(item => item.buyFirm);

                	// Îç∞Ïù¥ÌÑ∞: ÎπÑÏú® (ÏÜåÏàòÏ†ê 2ÏûêÎ¶¨)
                	var expPieData = chartDataFilter.map(item => Number(item.percentage.toFixed(2)));
                	
                	var pdf8chart = new Chart(pdf8ctx, {
                		plugins : [chartDataLabels4],
                			type: "pie",
    	            	    data: {
    	            	        labels: expLabels,
    	            	        datasets: [{
    	            	            data: expPieData,
    	            	            backgroundColor: [
    	            	            	'rgb(49,97,79)',
    	        						'rgb(71,140,114)',
    	        						'rgb(84,166,135)',
    	        						'rgb(123,211,171)',
    	        						'rgb(153,184,169)',
    	        						'rgb(102,178,103)',
    	        						'rgb(154,204,153)',
    	        						'rgb(186,221,139)',
    	        						'rgb(238,231,148)',
    	        						'rgb(231,244,218)',
    	            	            	]
    	            	        }]
    	            	    },
    	            	    options: {
    	            	    	 responsive: false, // ‚úÖ Ï∞®Ìä∏ ÌÅ¨Í∏∞ ÏûêÎèô Ï°∞Ï†à ÎπÑÌôúÏÑ±Ìôî
    	            	         maintainAspectRatio: true, // ‚úÖ ÏõêÌòï ÎπÑÏú® Ïú†ÏßÄ ÎπÑÌôúÏÑ±Ìôî
    	            	        layout: {
    	            	        	padding: {
    	            	                top: 300,
    	            	                right: 320,
    	            	                bottom: 30,
    	            	                left: 320
    	            	            }
    	            	        },
    	            	        plugins: {
    	            	            legend: { 
    	            	            	position: "bottom",
    	            	            	 fullWidth: true,
    	            	            	labels : {
    	            	            		boxWidth : 8,
    	            	            		padding : 10,
    	            	            		font : {
    	            	            			size : 13,
    	            	            			//weight : 'bold'
    	            	            		}
    	            	            	}

    	            	            },
    	            	            title : {
    	            	            	display: true,
    	            	            	text: 'Ï£ºÏöî Ìï¥Ïô∏Í±∞ÎûòÏ≤ò',
    	            	            	font : {size :24 ,weight : 'bold'},
    	            	            	padding: {bottom :30}
    	            	            },
    	            	            tooltip: {
    	             	               enabled : false // Ìà¥ÌåÅ ÎπÑÌôúÏÑ±Ìôî
    	             	            },
    	             	            datalabels: { 
    	             	            	 display: false // ‚úÖ Ï∞®Ìä∏ ÎÇ¥Î∂Ä Îç∞Ïù¥ÌÑ∞ Ïà®ÍπÄ
    	             	            }
    	            	        }
    	            	    },
    	            	});
                   }
                	
                	// üü¢ ÌéòÏù¥ÏßÄ Ï∂îÍ∞Ä
                    doc.addPage();
                    
                    doc.setFontSize(16);
                    doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                    doc.setFont('NanumSquareB', 'normal');
                    //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                    doc.setTextColor(71, 140, 114); 
                    doc.text(8, 15, "10.ÏàòÏ∂úÏûÖ Ï†ïÏ†ï Í∑ÄÏ±ÖÏûêÎ≥Ñ ÎπÑÏú®");
                    doc.setFontSize(12);
    	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
                    doc.setTextColor(108, 179, 63);
                    doc.text(190, 15, "III.Í≥µÌÜµ");
                    
                    // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                    var boxMargin10 = 5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                    var boxWidth10 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                    var boxHeight10 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                    
                    doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                    doc.setDrawColor(35, 69,56); 
                    doc.rect(5, 8, boxWidth10, boxHeight10, 'D'); 
                    
                    var reportData11 = data.reportData11;
                   console.log("reportData11",reportData11);
                   
                   var datas10 = [];

                   
                   for (let i = 0; i < reportData11.length; i += 2) {
                	   var row1 = reportData11[i];     // Í±¥Ïàò
                	   var row2 = reportData11[i + 1]; // ÎπÑÏú®

                	   datas10.push([
                	     {
                	       content: row1.div1,  // ÏàòÏûÖ or ÏàòÏ∂ú
                	       rowSpan: 2,
                	       styles: { halign: 'center', valign: 'middle' }
                	     },
                	     { content: row1.div2, styles: { halign: 'center' } },
                	     { content: row1.cunt1, styles: { halign: 'right' } },
                	     { content: row1.cunt2, styles: { halign: 'right' } },
                	     { content: row1.cunt3, styles: { halign: 'right' } },
                	     { content: row1.cunt4, styles: { halign: 'right' } },
                	     { content: row1.total, styles: { halign: 'right' } }
                	   ]);

                	   datas10.push([
                	     { content: row2.div2, styles: { halign: 'center' } },
                	     { content: row2.cunt1, styles: { halign: 'right' } },
                	     { content: row2.cunt2, styles: { halign: 'right' } },
                	     { content: row2.cunt3, styles: { halign: 'right' } },
                	     { content: row2.cunt4, styles: { halign: 'right' } },
                	     { content: row2.total, styles: { halign: 'right' } }
                	   ]);
                	 }
                
    	            // ÌÖåÏù¥Î∏î Ìó§Îçî
    	            var header9 = [
    	            	  	[
    	            		    { content: 'Íµ¨Î∂Ñ', colSpan: 2, styles: { halign: 'center' } },
    	            		    { content: 'Ïã†Í≥†Ïù∏', styles: { halign: 'center' } },
    	            		    { content: 'Ïã†Í≥†ÏùòÎ¢∞Ïù∏(ÌôîÏ£º Îì±)', styles: { halign: 'center' } },
    	            		    { content: 'Ìï¥Ïô∏Í±∞ÎûòÏ≤ò', styles: { halign: 'center' } },
    	            		    { content: 'Í∏∞ÌÉÄ', styles: { halign: 'center' } },
    	            		    { content: 'Ìï©Í≥Ñ', styles: { halign: 'center' } }
    	            		  ]
    	            		];
    	            
    	            
    	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                	doc.autoTable({
                	  head: header9,
                	  body:datas10,
                	  startY: 24, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                	  theme: 'grid',
                	  styles: {
                	    font: 'NanumSquareR',
                	    fontSize: 7,
                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                	    textColor: [0, 0, 0],
                	    valign: 'middle',
                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
                	  },
                	  headStyles: {
                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                	    fontSize: 8,
                	    textColor: [255, 255, 255],
                	    font: 'NanumSquareEB',
                	    fontStyle: 'bold',
                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
                	  },
                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                	  columnStyles: {
                		  0: { halign: 'center' },
                		  1: { halign: 'center' },
                		  2: { halign: 'right' },
                		  3: { halign: 'right' },
                		  4: { halign: 'right' },
                		  5: { halign: 'right' },
                		  6: { halign: 'right' }
                	  },
                	  didDrawCell: function (data) {
                		  const doc = data.doc;
                		  const rowIndex = data.row.index;

                		  // ‚úÖ ÌäπÏ†ï Ìñâ(rowIndex === 1)Ïùò Ï≤´ Î≤àÏß∏ Ïó¥ÏóêÏÑúÎßå Ìïú Î≤à ÏÑ† Í∑∏Î¶¨Í∏∞
                		  if (data.section === 'body' && rowIndex === 1) {
                		    const y = data.cell.y + data.cell.height;

                		    // ÏÑ† ÏãúÏûëÍ≥º ÎÅù Ï¢åÌëú ÏÑ§Ï†ï (ÌÖåÏù¥Î∏î Ï†ÑÏ≤¥ Ìè≠ Í∏∞Ï§Ä)
                		    const startX = 5;
                		    const endX = 205;
                		    doc.setLineWidth(0.8); // ÏÑ† ÍµµÍ∏∞
                		    doc.setDrawColor(64, 64, 64); // ÏÑ† ÏÉâÏÉÅ (ÏßÑÌïú ÌöåÏÉâ)
                		    doc.line(startX, y, endX, y); // ÏÑ† Í∑∏Î¶¨Í∏∞

                		  }
                		}
            		});
                	
                	lastYPage8 = doc.lastAutoTable.finalY;
                    
                    doc.setFontSize(16);
                    doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                    doc.setFont('NanumSquareB', 'normal');
                    //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                    doc.setTextColor(71, 140, 114); 
                    doc.text(8, lastYPage8 + 20, "11.ÏàòÏ∂úÏûÖ Ï†ïÌòïÏ°∞Í±¥");
                    doc.setFontSize(12);
    	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
                    doc.setTextColor(108, 179, 63);
                    doc.text(190, lastYPage8 + 20, "III.Í≥µÌÜµ");
                    
                    // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                    var boxMargin11 =  5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                    var boxWidth11 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                    var boxHeight11 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                    
                    doc.setLineWidth(0.8);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                    doc.setDrawColor(35, 69,56); 
                    doc.rect(5, lastYPage8 + 13, boxWidth11, boxHeight11, 'D'); 
                    
                    var reportData12 = data.reportData12;
                   console.log("reportData12",reportData12);

                   if(reportData12.length == 0){
                	   noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏàòÏ∂úÏûÖ Ï†ïÌòïÏ°∞Í±¥ ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                       
                       doc.setFont('NanumSquareR', 'normal');
                       doc.setFontSize(10);
                       doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                       doc.text(noDataMsg, 10, 93);
                   }else{
                	
                   // 1. Í∞ÅÍ∞Å Ï¥ùÌï© Í≥ÑÏÇ∞
                   var totalImpAmt = reportData12.reduce((sum, item) => sum + Number(item.impAmt || 0), 0);
                   var totalExpAmt = reportData12.reduce((sum, item) => sum + Number(item.expAmt || 0), 0);

                   // 2. map ÎèåÎ©¥ÏÑú ÎπÑÏú® Í≥ÑÏÇ∞
                   var datas11 = reportData12.map(item => {
                	 var formattedlmpAmt = Intl.NumberFormat("ko-KR").format(item.impAmt); 
                	 var formattedEmpAmt = Intl.NumberFormat("ko-KR").format(item.expAmt); 
                     var impAmt = Number(item.impAmt || 0);
                     var expAmt = Number(item.expAmt || 0);

                     // ÏàòÏûÖ ÎπÑÏú®
                     var impRate = totalImpAmt === 0 ? '0.0%' : ((impAmt / totalImpAmt) * 100).toFixed(1) + '%';
                     // ÏàòÏ∂ú ÎπÑÏú®
                     var expRate = totalExpAmt === 0 ? '0.0%' : ((expAmt / totalExpAmt) * 100).toFixed(1) + '%';

                     return [
                       item.incoterms,  // Ïù∏ÏΩîÌÖÄÏ¶à
                       item.impCnt,     // ÏàòÏûÖ Í±¥Ïàò
                       formattedlmpAmt, // ÏàòÏûÖ Í∏àÏï°
                       impRate,         // ÏàòÏûÖ ÎπÑÏú®
                       item.expCnt,     // ÏàòÏ∂ú Í±¥Ïàò
                       formattedEmpAmt, // ÏàòÏ∂ú Í∏àÏï°
                       expRate          // ÏàòÏ∂ú ÎπÑÏú®
                     ];
                   });
                   
                   
                // ÌÖåÏù¥Î∏î Ìó§Îçî
    		       var header10 = [
    		    	   	[ 
    		    		    { content: 'Ïù∏ÏΩîÌÖÄÏ¶à', rowSpan: 3, border: [true, true, true, true] },  // ÏàòÎ¶¨ÏùºÏûê ÏÖÄÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
    		    		    { content: 'ÏàòÏûÖ', colSpan: 3, border: [true, true, true, true] },
    		    		    { content: 'ÏàòÏ∂ú', colSpan: 3, border: [true, true, true, true] },
    		    		  ],  // Ï≤´ Î≤àÏß∏ Ìñâ
    		    		  [
      		    		    { content: 'Ïã†Í≥†Í∏àÏï°',colSpan: 3, border: [true, true, true, true] },
      		    		    { content: 'Ïã†Í≥†Í∏àÏï°',colSpan: 3, border: [true, true, true, true] },
      		    		    
      		    		  ],
    		    		  [
    		    		    { content: 'Í±¥Ïàò', border: [true, true, true, true] },
    		    		    { content: 'Í∏àÏï°(USD)', border: [true, true, true, true] },
    		    		    { content: 'ÎπÑÏú®', border: [true, true, true, true] },
    		    		    { content: 'Í±¥Ïàò', border: [true, true, true, true] },
    		    		    { content: 'Í∏àÏï°(USD)', border: [true, true, true, true] },
    		    		    { content: 'ÎπÑÏú®', border: [true, true, true, true] },
    		    		  ]
    		    	 ];
    		       
    	            // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
                	doc.autoTable({
                	  head: header10,
                	  body:datas11,
                	  startY: lastYPage8 + 29, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
                	  theme: 'grid',
                	  styles: {
                	    font: 'NanumSquareR',
                	    fontSize: 7,
                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
                	    textColor: [0, 0, 0],
                	    valign: 'middle',
                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
                	  },
                	  headStyles: {
                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
                	    fontSize: 8,
                	    textColor: [255, 255, 255],
                	    font: 'NanumSquareEB',
                	    fontStyle: 'bold',
                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
                	  },
                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
                	  columnStyles: {
                		  0: { halign: 'center' },
                		  1: { halign: 'right' },
                		  2: { halign: 'right' },
                		  3: { halign: 'right' },
                		  4: { halign: 'right' },
                		  5: { halign: 'right' },
                		  6: { halign: 'right' }
                	  },
                	  /** üîµ Ïó¨Í∏∞Ïóê ÍµµÏùÄ ÏÑ∏Î°úÏÑ† Ï∂îÍ∞Ä **/
                	  didDrawCell: function (data) {
                		  const colIndex = data.column.index;
                		  const cell = data.cell;
                		  const doc = data.doc;

                		  // Î≥∏Î¨∏(body) ÏÖÄÏóêÏÑúÎßå Ïã§Ìñâ
                		  if (data.section === 'body' && colIndex === 4) {
                		    doc.setLineWidth(0.5);       // ÏÑ† ÍµµÍ∏∞
                		    doc.setDrawColor(64, 64, 64); // ÏÑ† ÏÉâÏÉÅ
                		    doc.line(cell.x, cell.y, cell.x, cell.y + cell.height); // ÏôºÏ™Ω ÏÑ∏Î°úÏÑ†
                		  }
                		}
                	});
                   }
                	
                	lastYPage9 = doc.lastAutoTable.finalY;
                	if(lastYPage9 == 58.605000000000004){
                		lastYPage9 = 130;
                	}
                	
                    doc.setFontSize(16);
                    doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                    doc.setFont('NanumSquareB', 'normal');
                    //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                    doc.setTextColor(71, 140, 114); 
                    doc.text(8, lastYPage9 + 20, "12.ÏÑ∏Í¥ÄÎ≥Ñ Ïã†Í≥†Í±¥Ïàò Î∞è Í∏àÏï°");
                    doc.setFontSize(12);
    	            doc.addFont('/pf/fonts/NanumSquareEB.ttf', 'NanumSquareEB', 'bold');
                    doc.setFont('NanumSquareEB', 'bold');
                    doc.setTextColor(108, 179, 63);
                    doc.text(190, lastYPage9 + 20, "III.Í≥µÌÜµ");
                    
                    // Ï†úÎ™© + ÏÑ§Î™ÖÏùÑ ÎÑ£ÏùÑ ÏòÅÏó≠ÏùÑ ÎÑ§Î™®Î∞ïÏä§Î°ú Í∑∏Î¶¨Í∏∞
                    var boxMargin12 =  5;  // ÌÖåÎëêÎ¶¨ÏôÄÏùò Ïó¨Î∞±
                    var boxWidth12 = 200;  // Î∞ïÏä§Ïùò ÎÑàÎπÑ
                    var boxHeight12 = 15;  // Î∞ïÏä§Ïùò ÎÜíÏù¥ (ÏÑ§Î™Ö Ìè¨Ìï®)
                    
                    doc.setLineWidth(0.5);  // ÌÖåÎëêÎ¶¨ ÎëêÍªò ÏÑ§Ï†ï (Í∏∞Î≥∏Í∞íÏùÄ 0.2)
                    doc.setDrawColor(35, 69,56); 
                    doc.rect(5, lastYPage9 + 13, boxWidth12, boxHeight12, 'D'); 
                    
                    var reportData13 = data.reportData13;
                    console.log("reportData13",reportData13);
                    if(reportData13.length == 0){
                    	 noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏÑ∏Í¥ÄÎ≥Ñ ÏàòÏûÖ Ïã†Í≥†Í±¥Ïàò ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                         
                         doc.setFont('NanumSquareR', 'normal');
                         doc.setFontSize(10);
                         doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                         doc.text(noDataMsg, 10, 165);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
                    }else{
                    
	                    var datas12 = [];
	                    let currentGroupStartRow = 0;
	
	                    reportData13.forEach((item, index) => {
	                      var formattedCnt = Intl.NumberFormat("ko-KR").format(item.cnt);
	                      var formattedTaxKrw = Intl.NumberFormat("ko-KR").format(item.taxKrw);
	                      var formattedTaxSum = Intl.NumberFormat("ko-KR").format(item.taxSum);
	                      var formattedTaxUsd = Intl.NumberFormat("ko-KR").format(item.taxUsd);
	
	
	                      datas12.push([
	                    	item.al,
	                        item.cus,
	                        item.cusnm,
	                        formattedCnt,
	                        formattedTaxUsd,
	                        formattedTaxKrw,
	                        formattedTaxSum,
	                        item.taxRate,
	                      ]);
	                    });
	                    
	                 // ÌÖåÏù¥Î∏î Ìó§Îçî
	    	            var header11 = [['Íµ¨Î∂Ñ','ÏÑ∏Í¥ÄÏΩîÎìú','ÏÑ∏Í¥ÄÎ™Ö','Ïã†Í≥†Í±¥Ïàò','Ïã†Í≥†Í∏àÏï°(USD)','Í≥ºÏÑ∏Í∞ÄÍ≤©(ÏõêÌôî)','ÎÇ©Î∂ÄÏÑ∏Ïï°','ÎπÑÏ§ë']];
	                    
	    	         // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
	                	doc.autoTable({
	                	  head: header11,
	                	  body:datas12,
	                	  startY: lastYPage9 + 29, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
	                	  theme: 'grid',
	                	  styles: {
	                	    font: 'NanumSquareR',
	                	    fontSize: 7,
	                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
	                	    textColor: [0, 0, 0],
	                	    valign: 'middle',
	                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
	                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
	                	  },
	                	  headStyles: {
	                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
	                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
	                	    fontSize: 8,
	                	    textColor: [255, 255, 255],
	                	    font: 'NanumSquareEB',
	                	    fontStyle: 'bold',
	                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
	                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
	                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
	                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
	                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
	                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
	                	  },
	                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
	                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
	                	  columnStyles: {
	                		  	0: { halign: 'center'},
	                	        1: { halign: 'center'},
	                	        2: { halign: 'center'},
	                	        3: { halign: 'right'},
	                	        4: { halign: 'right'},
	                	        5: { halign: 'right'},
	                	        6: { halign: 'right'},
	                	        7: { halign: 'right'},
	                	  },
	                	  didParseCell: function (data) {
	                		    // Îç∞Ïù¥ÌÑ∞ ÏÖÄÏù¥Í≥†, 'Ìï©Í≥Ñ'Ïù∏ Í≤ΩÏö∞
	                		    if (data.section === 'body' && data.row.raw[0] === 'Ìï©Í≥Ñ') {
	                		      data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤Ω
	              	              data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
	              	              data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
	                		    }
	                		  }
	                		});
                    }
                    
                    lastYPage12 = doc.lastAutoTable.finalY;
                    
                    var reportData14 = data.reportData14;
                    console.log("reportData14",reportData14);
                    if(reportData14.length == 1){
                    	 noDataMsg = "* Ï°∞ÌöåÍ∏∞Í∞Ñ ÎèôÏïà ÏÑ∏Í¥ÄÎ≥Ñ ÏàòÏ∂ú Ïã†Í≥†Í±¥Ïàò ÎÇ¥Ïó≠Ïù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.";
                         
                         doc.setFont('NanumSquareR', 'normal');
                         doc.setFontSize(10);
                         doc.setTextColor(64,64,64); // ÌöåÏÉâ ÎäêÎÇå
                         doc.text(noDataMsg, 10, 165);  // ÏúÑÏπò Ï°∞Ï†ïÌï¥ÏÑú Ï∂úÎ†•
                    }else{
                    
	                    var datas15 = [];
	                    let currentGroupStartRow = 0;
	
	                    reportData14.forEach((item, index) => {
	                      var formattedCnt = Intl.NumberFormat("ko-KR").format(item.cnt);
	                      var formattedTaxSum = Intl.NumberFormat("ko-KR").format(item.taxSum);
	                      var formattedTaxUsd = Intl.NumberFormat("ko-KR").format(item.taxUsd);
	
	
	                      datas15.push([
	                    	item.al,
	                        item.cus,
	                        item.cusnm,
	                        formattedCnt,
	                        formattedTaxUsd,
	                        formattedTaxSum,
	                        item.taxSd,
	                        item.taxRate,
	                      ]);
	                    });
	                    
	                 // ÌÖåÏù¥Î∏î Ìó§Îçî
	    	            var header12 = [['Íµ¨Î∂Ñ','ÏÑ∏Í¥ÄÏΩîÎìú','ÏÑ∏Í¥ÄÎ™Ö','Ïã†Í≥†Í±¥Ïàò','Ïã†Í≥†Í∏àÏï°(USD)','ÏàòÏ∂úÍ∏àÏï°(FOB)','ÎÇ©Î∂ÄÏÑ∏Ïï°','ÎπÑÏ§ë']];
	                    
	    	         // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
	                	doc.autoTable({
	                	  head: header12,
	                	  body:datas15,
	                	  startY: lastYPage12 + 5, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
	                	  theme: 'grid',
	                	  styles: {
	                	    font: 'NanumSquareR',
	                	    fontSize: 7,
	                	    cellPadding: 2,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
	                	    textColor: [0, 0, 0],
	                	    valign: 'middle',
	                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
	                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
	                	  },
	                	  headStyles: {
	                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
	                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
	                	    fontSize: 8,
	                	    textColor: [255, 255, 255],
	                	    font: 'NanumSquareEB',
	                	    fontStyle: 'bold',
	                	    cellPadding: 2, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
	                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
	                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
	                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
	                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
	                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
	                	  },
	                	  tableWidth: 'auto', // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
	                	  margin: { left: 5, right: 5 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
	                	  columnStyles: {
	                		  	0: { halign: 'center'},
	                	        1: { halign: 'center'},
	                	        2: { halign: 'center'},
	                	        3: { halign: 'right'},
	                	        4: { halign: 'right'},
	                	        5: { halign: 'right'},
	                	        6: { halign: 'center'},
	                	        7: { halign: 'right'},
	                	  },
	                	  didParseCell: function (data) {
	                		    // Îç∞Ïù¥ÌÑ∞ ÏÖÄÏù¥Í≥†, 'Ìï©Í≥Ñ'Ïù∏ Í≤ΩÏö∞
	                		    if (data.section === 'body' && data.row.raw[0] === 'Ìï©Í≥Ñ') {
	                		      data.cell.styles.fillColor = [246, 243, 202]; // Î∞∞Í≤Ω
	              	              data.cell.styles.font = 'NanumSquareB'; // ÍµµÏùÄ Ìè∞Ìä∏ Ï†ÅÏö©
	              	              data.cell.styles.fontStyle = 'bold'; // Î≥ºÎìú Ï≤òÎ¶¨
	                		    }
	                		  }
	                		});
                    }
                    
                   
                    
                    lastYPage11 = doc.lastAutoTable.finalY;
                	if(lastYPage11 == 58.605000000000004){
                		lastYPage11 = 170;
                	}
                   
                    var reportData17 = data.reportData17;
                    console.log("reportData17",reportData17);
                  
                    if(reportData17.length > 0){
                    	
                    	doc.setFontSize(8.5);
                        doc.addFont('/pf/fonts/NanumSquareB.ttf', 'NanumSquareB', 'normal');
                        doc.setFont('NanumSquareB', 'normal');
                        //doc.setTextColor(62, 113, 175); //ÌååÎûÄÏÉâ
                        doc.setTextColor(71, 140, 114); 
                        doc.text(85, lastYPage11 + 13, "Ï†ÑÎã¥ Í¥ÄÏÑ∏ÏÇ¨ & ÌÜµÍ¥Ä Îã¥ÎãπÏûê");
                	   
		                    var datas13 = [];
		
		                    reportData17.forEach((item, index) => {
		
		                      datas13.push([
		                    	item.cmpnyNm,
		                        item.usrType,
		                        item.usrNm,
		                        item.usrEmail,
		                        item.usrTel
		                      ]);
		                    });
		                    
		                 // ÌÖåÏù¥Î∏î Ìó§Îçî
		    	            var header12 = [['ÌöåÏÇ¨','Íµ¨Î∂Ñ','Ïù¥Î¶Ñ','Ïù¥Î©îÏùº','Ï†ÑÌôîÎ≤àÌò∏']];
		                    
		    	         // üü¢ ÌÖåÏù¥Î∏î Ïä§ÌÉÄÏùº Ï†ÅÏö©
		                	doc.autoTable({
		                	  head: header12,
		                	  body:datas13,
		                	  startY: lastYPage11 + 15, // ÏÑ§Î™Ö ÏïÑÎûòÏóê ÌÖåÏù¥Î∏î Î∞∞Ïπò
		                	  theme: 'grid',
		                	  styles: {
		                	    font: 'NanumSquareR',
		                	    fontSize: 7,
		                	    cellPadding: 1,   // ÏÖÄ Ìå®Îî©ÏùÑ Ï§ÑÏó¨ÏÑú Ìñâ ÎÜíÏù¥ Ï§ÑÏù¥Í∏∞
		                	    textColor: [0, 0, 0],
		                	    valign: 'middle',
		                	    overflow: 'hidden', // ÌÖçÏä§Ìä∏ Ï§ÑÎ∞îÍøàÏùÑ Î∞©ÏßÄÌïòÍ≥† ÎÑòÏπòÏßÄ ÏïäÍ≤å ÏÑ§Ï†ï
		                        wordWrap: 'normal', // Ï§ÑÎ∞îÍøà Î∞©ÏßÄ (Ìïú Ï§ÑÎ°úÎßå Î≥¥Ïù¥Í≤å)
		                	  },
		                	  headStyles: {
		                		//fillColor: [36, 83, 118], // Ìó§Îçî Î∞∞Í≤Ω (ÌååÎûÄ)
		                		fillColor: [35, 69, 56], // Ìó§Îçî Î∞∞Í≤Ω (Ï¥àÎ°ù)
		                	    fontSize: 7,
		                	    textColor: [255, 255, 255],
		                	    font: 'NanumSquareEB',
		                	    fontStyle: 'bold',
		                	    cellPadding: 1, // Ìó§Îçî ÎÜíÏù¥Î•º Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ Ìå®Îî©ÏùÑ Ï†ÅÍ≤å ÏÑ§Ï†ï
		                	    lineWidth: 0.2, // ÌÖåÎëêÎ¶¨ ÎëêÍªò
		                	    border: [true, true, true, true],  // Ìó§ÎçîÏóê ÌÖåÎëêÎ¶¨ Ï∂îÍ∞Ä
		                	    overflow: 'linebreak', // Ìó§ÎçîÏùò ÌÖçÏä§Ìä∏Í∞Ä Îëê Ï§ÑÎ°ú ÎÑòÏñ¥Í∞ÄÎèÑÎ°ù ÏÑ§Ï†ï
		                        wordWrap: 'break-word', // ÌÖçÏä§Ìä∏Í∞Ä ÏÖÄ ÎÑàÎπÑÎ•º ÎÑòÏñ¥ÏÑúÎ©¥ Ï§ÑÎ∞îÍøà ÎêòÎèÑÎ°ù ÏÑ§Ï†ï
		                        halign: 'center', // ÌÖçÏä§Ìä∏ Í∞ÄÏö¥Îç∞ Ï†ïÎ†¨
		                	  },
		                	  tableWidth: 120, // PDF ÌÅ¨Í∏∞Ïóê ÎßûÍ≤å ÏûêÎèô Ï°∞Ï†ï
		                	  margin: { left:85,right: 10 }, // Ï¢åÏö∞ Í≥µÎ∞± Ï∂îÍ∞Ä
		                	  columnStyles: {
		                		  	0: { halign: 'center'},
		                	        1: { halign: 'center'},
		                	        2: { halign: 'center'},
		                	        3: { halign: 'center'},
		                	        4: { halign: 'center'},
		                	  },
		                		});
             
                    	}
            			            	
	            setTimeout(() => {
	            	
	            	let pdf3ImgData,pdf4ImgData,pdf2ImgData,pdf5ImgData, pdf6ImgData,pdf7ImgData, imgData, rightImgData; 
	            	
	            	if(reportData1.length > 2 ){
	            	 imgData = canvas.toDataURL('image/png'); // ÏôºÏ™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§Î•º PNGÎ°ú Î≥ÄÌôò
	                 rightImgData = rightCanvas.toDataURL('image/png'); // Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§Î•º PNGÎ°ú Î≥ÄÌôò
	            	}
	            	if(reportData3.length > 0){
	            	 pdf2ImgData = pdf2canvas.toDataURL('image/png');
	            	}
	            	if(reportData4.length > 1){
	            	 pdf3ImgData = pdf3canvas.toDataURL('image/png');
	            	}
	            	if(reportData5.length > 1){
	            	 pdf4ImgData = pdf4canvas.toDataURL('image/png');
	            	}
	                
	                
	                if(reportData9.length > 2 ){
	                 pdf5ImgData = pdf5canvas.toDataURL('image/png');
	                 pdf6ImgData = pdf6canvas.toDataURL('image/png');
	                }
	                if(reportData8.length > 0 ){
	                 pdf7ImgData = pdf7canvas.toDataURL('image/png');
	                }
	                if(reportData10.length > 0 ){
	                 pdf8ImgData = pdf8canvas.toDataURL('image/png');
	                }

	                if(reportData1.length > 2 ){
	                doc.setPage(chartPage1);
	                doc.addImage(imgData, 'PNG', 25, chartY1, 60, 60);      // ÏôºÏ™Ω Ï∞®Ìä∏
	                doc.addImage(rightImgData, 'PNG', 125, chartY1, 60, 60); // Ïò§Î•∏Ï™Ω Ï∞®Ìä∏
	                }
	                
	                if(reportData3.length > 2 ){
	                doc.setPage(chartPage2);
            	    doc.addImage(pdf2ImgData, 'PNG', 15, chartY2, 180, 70); // Ï†ÑÏõî ÎåÄÎπÑ Ï∞®Ìä∏ (x, y, width, height)
	                }
	                
	                if(reportData4.length > 1){
	                doc.setPage(chartPage3);
            	    doc.addImage(pdf3ImgData, 'PNG', 43, chartY3, 120, 120);
	                }
            	    
	                if(reportData5.length > 1){
            	    doc.setPage(chartPage4);
            	    doc.addImage(pdf4ImgData, 'PNG', 55, chartY4-10,100,100);
            	    }

            	    if(reportData9.length > 2 ){
            	    doc.setPage(chartPage5);  
            	    doc.addImage(pdf5ImgData, 'PNG', 25, chartY5+5, 60, 60); // ÏôºÏ™Ω Ï∞®Ìä∏ (x, y, width, height)
            	    doc.addImage(pdf6ImgData, 'PNG', 125, chartY5+5 , 60, 60); // Ïò§Î•∏Ï™Ω Ï∞®Ìä∏ (x, y, width, height)
            	    }
            	    
            	   
            	    if(reportData8.length > 0 ){
            	    doc.setPage(chartPage6);
            	    doc.addImage(pdf7ImgData, 'PNG', 15, chartY6-45,180,180);
            	    doc.setPage(chartPage7);
            	    }
            	    
            	    if(reportData10.length > 0 ){
            	    doc.setPage(chartPage7);
            	    doc.addImage(pdf8ImgData, 'PNG', 15, chartY7-45,180,180);
            	    //doc.addImage(pdf7ImgData, 'PNG', 15, lastYPage6 , pdfWidth, pdfHeight);
            	    }
            	    // üü¢ ÌéòÏù¥ÏßÄ Î≤àÌò∏ Ï∂îÍ∞Ä
            	    let totalPages = doc.getNumberOfPages();
            	    for (let i = 3; i <= totalPages; i++) {
            	        doc.setPage(i);
            	        doc.setFontSize(9);
            	        doc.setTextColor(0, 0, 0);
            	        doc.text(`-${i-2}-`, 105, 290, { align: "center" }); // Ï§ëÏïô Ï†ïÎ†¨
            	    }
            	    
            	    // üü¢ PDF Ï†ÄÏû•
	               doc.save(String(data.rptDate1) + 'ÎÖÑ ' + String(data.rptDate2) + 'Ïõî_' + String(data.cmpnyInfo) +'_'+'_report.pdf');
	               //fn_loading(false);
	                $("#analySts1").html('<img class="completeReport" src="/pf/css/images/complete.png" />');
				    fn_dashInfo1("02");
					fn_dashManagerInfo();
					fn_dashSrch();

	            }, 3000); // 3Ï¥à ÎîúÎ†àÏù¥ (Ï∞®Ìä∏ Î†åÎçîÎßÅ Í∏∞Îã§Î¶¨Í∏∞)
        }

        img.onerror = function() {
            console.error("Failed to load background image");
        };

	}




