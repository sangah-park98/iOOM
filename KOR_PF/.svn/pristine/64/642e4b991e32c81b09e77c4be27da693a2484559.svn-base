var exportUpdateHot;
var exportUpdateSettings;
var exportUpdatePopupSettings;
var exportUpdateIndex = 9999;
var exportUpdateScrollTp = true;
var exportUpdateData = {};

$( document ).ready(function() {
	
      $('.band-calendar').each(function(){ regCal(this) ;})
      $('.datepicker').datepicker("option","dateFormat",calFormat);

      var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  var today = new Date().toISOString().substring(0,10);
	  var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	  
	  $("#exportUpdate_srch2").val(mtoday);
	  $("#exportUpdate_srch3").val(today);
	  
	  var exportUpdateElement = document.querySelector('#exportUpdateTable');
	  var exportUpdateElementContainer = exportUpdateElement.parentNode;

	  exportUpdateHot = new Handsontable(exportUpdateElement, exportUpdateSettings);


	  $("#exportUpdate_div1").show();
	  $("#exportUpdate_div2").show();
	  $("#exportUpdate_div3").hide();
	  $("#exportUpdate_div4").hide();
	  $("#btnExportViewSave").hide();
	  $("#expViewInfo1").hide();
	  $("#expViewInfo2").hide();
	  fn_changeExportView('read');
	 
	  //scroll 이벤트
	  fn_expViewasEventReg();
	  $("#expUpdateTextView").text("전체");
      $("#expUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
	  
	  
});

$(document).mousedown(function(e){	
	if(e.target.name == "exportUpdate1_date" || e.target.name == "exportUpdate2_date"){
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			return;
		}
		$(".calendar-popup-container").remove();
		$('.band-calendar').each(function(){ regCal(this);});
	}else{
		if($(".calendar-popup-container").hasClass("calendar-popup-container_active")){
			$(".calendar-popup-container").attr("class", "calendar-popup-container");
		}	
	}
});



$("input[name=exportUpdate_srch1]").change(function(){
	
	var selectedValue = $(this).val();
    if(selectedValue === "01") {
        $("#expUpdateTextView").text("전체");
        $("#expUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else if(selectedValue === "02") {
        $("#expUpdateTextView").text("승인");
        $("#expUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } else  {
        $("#expUpdateTextView").text("미결");
        $("#expUpdateTextView").prepend('<i class="fa-duotone fa-chart-network text-primary-900"></i>'); 
    } 
});

$("input:radio[name=exportUpdate_srch20]").change(function(){
	$("input[name=exportUpdateType][value=read]").prop("checked", true);
	fn_changeExportView("read");
})



function fn_expUpchgDate1() {
	  var date = new Date();
	  var month = date.getMonth();
	  var dayday = date.getDate();
	  var day = date.getDay();
	  var today = new Date().toISOString().substring(0,10).replace(/-/g,'-');
	  var mtoday = new Date(new Date().setMonth(month - 1)).toISOString().substring(0,10).replace(/-/g,'-');
	  
	  $("#exportUpdate_srch2").val(today);
	  $("#exportUpdate_srch3").val(today);
}

function fn_expUpchgDate2() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	var today = new Date().toISOString().substring(0,10).replace(/-/g,'-');
	var mtoday = new Date(new Date().setDate(dayday - day)).toISOString().substring(0,10).replace(/-/g,'-');
	
	$("#exportUpdate_srch2").val(mtoday);
	$("#exportUpdate_srch3").val(today);
}
function fn_expUpchgDate3() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	var today = new Date().toISOString().substring(0,10).replace(/-/g,'-');
	var mtoday = new Date(new Date().setDate(dayday - dayday + 1)).toISOString().substring(0,10).replace(/-/g,'-');
	
	$("#exportUpdate_srch2").val(mtoday);
	$("#exportUpdate_srch3").val(today);
}
function fn_expUpchgDate4() {
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var day = date.getDay();
	var startDt = new Date();
	startDt.setMonth(startDt.getMonth() - 1);
	startDt.setDate(1);

	var endDt = new Date();
	endDt.setMonth(endDt.getMonth(), 1);
	endDt.setDate(endDt.getDate() - 1);
	
	var today = startDt.toISOString().substring(0,10).replace(/-/g,'-')
	var mtoday = endDt.toISOString().substring(0,10).replace(/-/g,'-')
	
	$("#exportUpdate_srch2").val(today);
	$("#exportUpdate_srch3").val(mtoday);
}


//row 수
$("select[name=exportUpdatePageCnt]").change(function(){
	  fn_searchExportUpdate();
});


// 스크롤할 때 행이 자동으로 추가 로드될 수 있게 하는 함수
function fn_expViewasEventReg(){
	$("#exportUpdateTable .wtHolder").scroll(function(){
		var scrollTop = $("#exportUpdateTable .wtHolder").scrollTop();
  	  	var countPerPage = $("#exportUpdatePageCnt option:selected").val();
  	  	var rowHeight = exportUpdateHot.getRowHeight();
  	  	var addCnt = 994;
  	  	if(countPerPage == "50"){
  		  addCnt = 994;
  	  	}else if(countPerPage == "100"){
  		  addCnt = 2040;
  	  	}else if(countPerPage == "200"){
  		  addCnt = 3290;
  	  	}else if(countPerPage == "500"){
  		  addCnt = 4540;
  	  	}
  	  	if(exportUpdateScrollTp && exportUpdateIndex != 9999 && scrollTop >= (countPerPage * exportUpdateIndex * rowHeight) + addCnt){
  		  fn_exportUpdateScroll();
  	  	}
	});
}


// 스크롤
function fn_exportUpdateScroll(){
	if( $("input[name=exportUpdateType]:checked").val() == "enrol")
		return;
	fn_loading(true);
	exportUpdateScrollTp = false;
	exportUpdateIndex++;

	$.ajax({
		type : "POST",
		url : "/export/selectExportUpdateList.do",
		data : fn_setExportUpdateForm(),
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	var getData = exportUpdateHot.getSourceData();
        	var meargeJson = getData.concat(data.resultList);
        	exportUpdateHot.loadData(meargeJson);
        	exportUpdateScrollTp = true;
        	fn_loading(false);
        },
        error : function(e, textStatus, errorThrown) {
        	if(e.status == 400){
        		alert("Your request is up. Please log back in if you wish continue");
        		location.href = document.referrer;
        	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
        	}
        }
	});
}


function fn_searchExportUpdate(){
	exportUpdateIndex = 0;
	$("#expViewSrch2").val($("#exportUpdate_srch2").val());
	$("#expViewSrch3").val($("#exportUpdate_srch3").val());
	$("#expViewSrch4").val($("#exportUpdate_srch4").val());
	$("#expViewSrch5").val($("#exportUpdate_srch5").val());
	$("#expViewSrch6").val($("#exportUpdate_srch6").val());
	$("#expViewSrch7").val($("#exportUpdate_srch7").val());
	
	var data = fn_setExportUpdateForm();
	var valid = fn_validateSearchDate(data["srch2"], data["srch3"]);
	
	if(valid === "false"){
		data["srch2"] = null;
		data["srch3"] = null;
		$("#exportUpdate_srch2").val("");
		$("#exportUpdate_srch3").val("");
		return;
	} else {
		data["srch2"] = $("#exportUpdate_srch2").val();
		data["srch3"] = $("#exportUpdate_srch3").val();
	}
	
	if(data["srch2"] == null || data["srch2"] == "" || data["srch3"] == "" || data["srch3"] == null){
		alert("날짜를 입력해 주세요.");
		return;
	}
	
	
	fn_loading(true);

	$.ajax({
		type : "POST",
		url : "/export/selectExportUpdateList.do",
		data : fn_setExportUpdateForm(),
		beforeSend : function(xmlHttpRequest){
			xmlHttpRequest.setRequestHeader("AJAX", "true");
		},
		dataType: "json",
        success : function(data) {
        	exportUpdateHot.loadData([]);
        	exportUpdateHot.loadData(data.resultList);
        	var totCnt = (data.resultList.length > 0) ? data.resultList[0].cnt : 0;
        	$("#exportUpdateCnt").text(totCnt); 
    	fn_loading(false);
	    },
	    error : function(e, textStatus, errorThrown) {
	    	if(e.status == 400){
	    		alert("Your request is up. Please log back in if you wish continue");
	    		location.href = document.referrer;
	    	} else {
	        	console.log(errorThrown);
	        	alert(msgSearchError);
	    	}
	    }
	});
};


function enterkey() {
	if (window.event.keyCode == 13) {
		fn_searchExportUpdate();
    }
}


// 검색조건 생성
function fn_setExportUpdateForm(){
	var sData = {};
	sData["srch1"] = $("input:radio[name=exportUpdate_srch1]:checked").val();
	sData["srch2"] = $("#exportUpdate_srch2").val();
	sData["srch3"] = $("#exportUpdate_srch3").val();
	sData["srch4"] = $("#exportUpdate_srch4").val();
	sData["srch5"] = $("#exportUpdate_srch5").val();
	sData["srch6"] = $("#exportUpdate_srch6").val();
	sData["srch7"] = $("#exportUpdate_srch7").val();
	sData["srch8"] = $("#exportUpdateDateType option:selected").val();
	sData["recordCountPerPage"] = $("#exportUpdatePageCnt option:selected").val();
	sData["pageIndex"] = exportUpdateIndex;
	
	return sData;
};

//검색조건 초기화
function fn_clearExportUpdate(){
	var date = new Date();
	var month = date.getMonth();
	var dayday = date.getDate();
	var today = new Date().toISOString().substring(0,10);
	var mtoday = new Date(new Date().setDate(dayday - 6)).toISOString().substring(0,10);
	  
	$("input:radio[name=exportUpdate_srch1][value=01]").prop('checked', true);
	$("#exportUpdate_srch2").val(mtoday);
	$("#exportUpdate_srch3").val(today);
	$("#exportUpdate_srch4").val("");
	$("#exportUpdate_srch5").val("");
	$("#exportUpdate_srch6").val("");
	$("#exportUpdate_srch7").val("");
	$("#exportUpdateDateType").val("01");
};

//테이블 컬럼
function fn_expUpdateTableCol(){
	var tableType = $("input:radio[name=exportUpdateType]:checked").val();
	// 사용여부
	var exportUpdate_srch20 = $("input:radio[name=exportUpdate_srch20]:checked").val(); 

	var cusMemoRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		var $cusMemo = $('<input type="text" id="cusMemo" /><div class="btn btn-primary new-button">SAVE</div>');
		$(td).empty().append(value+"	").append($cusMemo).css("text-align", "right");
	};
	
	var unreMemoRenderer = function (instance, td, row, col, prop, value, cellProperties) {
		  var $unreMemo = $('<input type="text" class="row-start-3 col-start-2 bg-gray-50 border border-gray-300 rounded-lg" id="unreMemo" style="height:8px; width:150px" /><button type="button" class="save-button p-0.5 text-sm rounded text-white hover:opacity-50 duration-150 bg-rose-700 ml-1 hover:bg-rose-500">저장</button>');
		  $(td).empty().append(value ? value + " " : "").append($unreMemo).css("text-align", "right");
	};

	function chipRenderer(hotInstance, td, row, column, prop, value, cellProperties) {
	   Handsontable.renderers.BaseRenderer.apply(this, arguments);
	   td.classList.add('chip-cell');
	   td.classList.add('text-center');
	   switch (value) {
	    case "화면심사":
	      td.innerHTML = `<span class="chip chip-green">${value}</span>`
	      break
	    case "서류심사":
	      td.innerHTML = `<span class="chip chip-yellow">${value}</span>`
	      break
	   }
	}
	
	var chipRenderer22 = function (instance, td, row, col, prop, value, cellProperties) {
        Handsontable.renderers.BaseRenderer.apply(this, arguments);
        td.classList.add('chip-cell');
        td.classList.add('text-center');
        switch (value) {
          case "예":
          case "접수":
          case "Y":
            td.innerHTML = `<span class="chip chip-blue">${value}</span>`
            break
          case "수리":
            td.innerHTML = `<span class="chip chip-green">${value}</span>`
            break
          case "N":
          case "서류 미비":
            td.innerHTML = `<span class="chip chip-red">${value}</span>`
            break
          case "자수":
            td.innerHTML = `<span class="chip chip-yellow">${value}</span>`
            break
          case "기각":
			  td.innerHTML = `<span class="chip chip-primary">${value}</span>`
		      break
          case "":
            td.innerHTML = `<span>${value}</span>`
            break
          default:
            td.innerHTML = `<span class="chip chip-green">${value}</span>`
            break
        }
   };
	
	this.expUpdateViewCol =  [
		{data : 'factoryCode', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'srOrdr', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'rece', className : "htCenter", width: 50, wordWrap: false, className : "htCenter", readOnly:true, renderer: chipRenderer22},
		{data : 'modiSeq', className : "htCenter", width: 60, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'modiCot1', className : "htCenter", width: 230, wordWrap: false, className : "htCenter", readOnly:true/*, renderer : unreMemoRenderer*/}, // 정정사유
		{data : 'receResult', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true, renderer : chipRenderer},
		{data : 'rptNo', className : "htCenter", width: 160, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'invoice', className : "htCenter", width: 140, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'expFirm', className : "htCenter", width: 180, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'buyFirm', className : "htCenter", width: 250, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'taStIso', className : "htCenter", width: 60, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'rptDay', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'expLisDay', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'jukDay', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'excCot', className : "htCenter", width: 160, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'conMetnm', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'incoterms', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'totPackCnt', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'totWt', className : "htCenter", width: 100, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'shipDay', className : "htCenter", width: 90, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'expDetails', className : "htCenter", width: 100, wordWrap: false, className : "htCenter", readOnly:true},
		{data : 'approval', className : "htCenter", width: 120, wordWrap: false, className : "htCenter", readOnly:true},
		//{data : 'userMemo', className : "htCenter", width: 300, wordWrap: false, className : "htCenter"},
		//{data : 'cusMemo', className : "htCenter", wordWrap: false, className : "htCenter"},
	] 

}
// 테이블 헤더
function fn_expUpdateTableHeader(){
	var tableType = $("input:radio[name=exportUpdateType]:checked").val(); 

	this.expUpdateViewHeader = [
		 "부서코드", "SO", "상태", "차수", "정정사유", "C/S검사", "신고번호", "Invoice번호","수출자", "해외거래처", "목적국", "신고일자", "수리일자", "적재의무기한", "거래구분",
		 "결제방법", "인코텀즈", "총포장수", "총중량", "선적여부", "수출이행내역","요건승인"
	 ] ;
}
	

// 테이블 히든컬럼
function fn_expUpdateTableHidden(){
	var tableType = $("input:radio[name=exportUpdateType]:checked").val();
	this.expUpdateViewHidden = [];
}


// table
function fn_handsonGridUpdateViewOption(col, header, hidden){
	var tableType = $("input:radio[name=exportUpdateType]:checked").val();

	exportUpdateSettings = {
		  columns : col,
		  colHeaders : header,
		  hiddenColumns : {
	    	  copyPasteEnabled : false,
	    	  indicators : false,
	    	  columns : hidden
	      },
		  stretchH : 'all',
		  width : '100%',
		  autoWrapRow : true,
		  height : 487,
		  rowHeights : 25,
		  rowHeaders : true,
		  columnHeaderHeight : 25,
		  manualRowResize : true,
		  manualColumnResize : true,
		  manualRowMove : true,
		  manualColumnMove : false,
		  licenseKey: 'non-commercial-and-evaluation',
		  //dropdownMenu : true,

		  contextMenu : (tableType == "enrol") ? ['row_above', 'row_below', '---------', 'undo', 'redo', 'remove_row'] : false,
		  filters : true,
		  readOnly : (tableType == "read") ? true : false,
		  allowInsertRow : true,
		  allowRemoveRow : true,
		 // columnSorting : {indicator : true},
	      autoColumnSize : {samplingRatio : 23},
	      
	      mergeCells : false,
	      wordWrap : true,
		};

	return exportUpdateSettings;
}


// 테이블 타입 변경
function fn_changeExportView(type){

	var searchTp = $("input:radio[name=exportUpdate_srch1]:checked").val();

	$("#btnExportViewSave").hide();
	$("#expExcel").show();
	$("#docBtn").children().show();
	fn_changeExportUpdateType(searchTp);
};

// 검색구분 변경
function fn_changeExportUpdateType(type){
	
	let expUpdateViewCol = new fn_expUpdateTableCol();
	let expUpdateViewHeader = new fn_expUpdateTableHeader();
	let expUpdateViewHidden = new fn_expUpdateTableHidden();
	var col, header, hidden;
	
	col = expUpdateViewCol.expUpdateViewCol;
	header = expUpdateViewHeader.expUpdateViewHeader;
	hidden = expUpdateViewHidden.expUpdateViewHidden;
	
	exportUpdateHot.updateSettings(fn_handsonGridUpdateViewOption(col, header, hidden));

	fn_searchExportUpdate();
};
	

function fn_expViewExcelSrch(type){
	$("#expViewSrch1").val($("input:radio[name=exportUpdate_srch1]:checked").val());
	if(type == '01'){
		$("#expViewExTit").val(colPurchLedgrInfo);
		$("#expViewExCol").val(String([colPlntCd+"*",colVndrCd+"*",colPurchsNo+"*",colSaleOrdr+"*",colItemAllCd+"*",colItemNm,colTaxbilNo,colExportViewDt+"*",colInvoiceNo,
		     colCustomExpNo,colStndrdNo,colNatCd+"*",colExportViewQty+"*",colUsedQty,colLeftQty,
		      colInctrm,colPuchaseAmt,colCurrentUnt,colExchngRt,colExportViewAmtVn+"*",colPurchPriceCif])+",");
		$("#expViewExCd").val("plntCd,vndrCd,exportUpdateNo,exportUpdateOrdr,itemCd,itemNm,taxbilNo,exportUpdateDt,invoiceNo,customExpNo,stndrdNo,natCd,exportUpdateQty,usedQty,leftQty,incoterms,exportUpdatePriceVn,crrncyUnt,exchngRt,exportUpdatePriceFr,exportUpdateCifPrice,");
		$("#expViewExType").val("cd,cd,cd,cd,cd,text,cd,cd,cd,cd,cd,cd,floatString,floatString,floatString,cd,floatString,cd,floatString,floatString,floatString,");
	}else if(type == '02'){
		$("#expViewExTit").val(colOriginCnftmnInfo);
		$("#expViewExCol").val(String([colPlntCd+"*",colVndrCd+"*",colExportViewNo+"*",colExportViewOrdr+"*",colItemAllCd+"*",colFtaCd+"*",colHsVer,colHsCd,
			colPsr+"*",colReqDtm,colDocuFile,colOriginYn,colConfmSttus,colRecvDt,colStateMsg+","]));
		$("#expViewExCd").val("plntCd,vndrCd,exportUpdateNo,exportUpdateOrdr,itemCd,ftaCd,hsVer,hsCd,psrSumry,reqDtm,docuOrgFile,originYn,approvedState,recvDtm,stateMsg,");
		$("#expViewExType").val("cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,");
	} else{
		$("#expViewExTit").val(colImportViewUsed);
		$("#expViewExCol").val(String([colPlntCd+"*",colVndrCd+"*",colPurchsNo+"*",colSaleOrdr+"*",colItemAllCd+"*",colTaxbilNo,colExportViewDt+"*",colInvoiceNo,
		     colCustomExpNo,colSalesNo,colUsedQty])+",");
		$("#expViewExCd").val("plntCd,vndrCd,exportUpdateNo,exportUpdateOrdr,itemCd,taxbilNo,exportUpdateDt,invoiceNo,customExpNo,salesNo,exportUpdateQty,");
		$("#expViewExType").val("cd,cd,cd,cd,cd,cd,cd,cd,cd,cd,floatString,");
	}
}


function fn_exportUpdateExcelDownload(){
	var type = $("input:radio[name=exportUpdate_srch1]:checked").val();
	$("#exportUpdateForm").html("");
	$("#exportUpdateForm").attr("action","/export/exportUpdatedownloadExcel.do");
	//검색조건
	$.each(fn_setExportUpdateForm(),function(attrName,attrValue){
	 $("#exportUpdateForm").append("<input type='hidden' value=" + attrValue + " name=" + attrName + ">");
	});
	//엑셀옵션
	var exTit = "";
	var exCol = "";
	let expUpdateCol = new fn_expUpdateTableCol();
	let expUpdateHeader = new fn_expUpdateTableHeader();
	
	exCol = fn_getExcelCol(expUpdateCol.expUpdateViewCol); 
	exTit = fn_getExcelHead(expUpdateHeader.expUpdateViewHeader);
   
    $("#exportUpdateForm").append("<input type='hidden' name='exCol' value="+ exCol +">");
    $("#exportUpdateForm").append("<input type='hidden' name='exTit' value="+ exTit +">");
    $("#exportUpdateForm").append("<input type='hidden' name='exType' value="+ type +">");
    $("#exportUpdateForm").submit();
   
   function fn_getExcelCol(updateCol){
       return updateCol.map(item => item['data'] + '|' + item['className'] + '|' + item['width']).join("||");
   }
    
   function fn_getExcelHead(updateHead){
       var result = [];
       
       if(updateHead.length > 1 && typeof(updateHead[0][0]) == 'object') {
           for(var i=0; i < updateHead.length; i++) {
               if(i == updateHead.length -1){
                   result.push(updateHead[i].join("|null||") + "|null");
               }else {
                   result.push(updateHead[i].map(item => (item['label'] ? item['label'] : 'null') + '|' + (item['colspan'] ? item['colspan'] : 'null')).join("||"));
               }
           }
           return result.join("|||");
       }else{
           return updateHead.join("|null||") + "|null";
       };
   }
}
