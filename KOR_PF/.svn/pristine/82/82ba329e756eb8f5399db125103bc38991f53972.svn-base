package egovframework.pf.news.web;

import java.io.File;
import java.io.FileInputStream;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import egovframework.pf.cmmn.service.CmmnService;
import egovframework.pf.cmmn.service.SearchVO;
import egovframework.pf.cmmn.service.UserSessionVO;
import egovframework.pf.news.service.pfNewsService;
import egovframework.rte.psl.dataaccess.util.EgovMap;

@Controller
public class NewsController {

	@Resource(name = "pfNewsService")
	private pfNewsService pfnewsService;
	
	@Resource(name = "CmmnService")
	private CmmnService CmmnService;

	@RequestMapping(value = "/cmmn/news.do")
	public String news(HttpServletRequest request, ModelMap model) throws Exception {
		HttpSession httpSession = request.getSession(true);
		UserSessionVO userVO = (UserSessionVO) httpSession.getAttribute("USER");
		SearchVO vo = new SearchVO();
		String grpCd = userVO.getGrpCd();
		model.addAttribute("grpCd", grpCd);
		vo.setLang(userVO.getLang());
		vo.setSrch2("news");
		List<?> msgList = CmmnService.selectMsgList(vo);
		for(int i=0; i<msgList.size(); i++) {
			EgovMap map = (EgovMap)msgList.get(i);
			model.addAttribute((String)map.get("msgId"), map.get("msgNm"));
		}
		List<?> resultList = null;
		int cnt = 0;
		vo.setRecordCountPerPage(0);
		if ("KORD Mst".equals(grpCd)) {
		    resultList = pfnewsService.selectNewsViewAllList(vo);
		    cnt = pfnewsService.selectNewsViewtotCnt(vo);
		} else {
		    resultList = pfnewsService.selectNewsViewList(vo);
		    cnt = pfnewsService.selectNewsViewtotCnt(vo);
		}
		model.addAttribute("totCnt", cnt);
	    model.addAttribute("resultList", resultList);

	    return "cmmn/news";
	}
	
	@RequestMapping(value = "/cmmn/selectNewsViewList.do")
	public ModelAndView selectNewsViewList(@ModelAttribute("searchVO") SearchVO vo, HttpServletRequest request, ModelMap model) throws Exception {
		HttpSession httpSession = request.getSession(true);
		UserSessionVO userVO = (UserSessionVO) httpSession.getAttribute("USER");
		vo.setCmpnyCd(userVO.getCmpnyCd());
		String grpCd = userVO.getGrpCd();
		List<?> resultList = null;
		int cnt = 0;
		
		if ("KORD Mst".equals(grpCd)) {
		    resultList = pfnewsService.selectNewsViewAllList(vo);
		    cnt = pfnewsService.selectNewsViewtotCnt(vo);
		} else {
		    resultList = pfnewsService.selectNewsViewList(vo);
		    cnt = pfnewsService.selectNewsViewtotCnt(vo);
		}
		model.addAttribute("totCnt", cnt);
	    model.addAttribute("resultList", resultList);
		ModelAndView mav = new ModelAndView("jsonView", model);
		return mav;
	}
	
	@RequestMapping(value = "/cmmn/updateNewsActive.do")
	@ResponseBody
	public ModelAndView updateNewsActive(@RequestBody SearchVO vo, HttpServletRequest request, ModelMap model) throws Exception {
	    pfnewsService.updateNewsActive(vo);
	    List<?> resultList = null;
		resultList = pfnewsService.selectNewsActiveStatus(vo);
		model.addAttribute("resultList", resultList);
		ModelAndView mav = new ModelAndView("jsonView", model);
		return mav;
	}

	@RequestMapping(value = "/cmmn/selectNewsModalViewList.do")
	public ModelAndView selectNewsModalViewList(@ModelAttribute("searchVO") SearchVO vo, HttpServletRequest request, ModelMap model) throws Exception {
		HttpSession httpSession = request.getSession(true);
		UserSessionVO userVO = (UserSessionVO) httpSession.getAttribute("USER");
		vo.setLang(userVO.getLang());
		vo.setCmpnyCd(userVO.getCmpnyCd());
		
		List<?> resultList = null;
		resultList = pfnewsService.selectNewsModalViewList(vo);
		model.addAttribute("resultList", resultList);
		ModelAndView mav = new ModelAndView("jsonView", model);
		return mav;
	}
	
	@RequestMapping(value = "/cmmn/deleteNewsViewList.do")
	public ModelAndView deleteNewsViewList(@ModelAttribute("searchVO") SearchVO vo, HttpServletRequest request, ModelMap model) throws Exception {
		HttpSession httpSession = request.getSession(true);
		UserSessionVO userVO = (UserSessionVO) httpSession.getAttribute("USER");
		String regId = userVO.getId();
		vo.setLang(userVO.getLang());
		vo.setCmpnyCd(userVO.getCmpnyCd());
		
		pfnewsService.deleteNewsViewList(vo);
		ModelAndView mav = new ModelAndView("jsonView", model);
		return mav ;
	}
	
	@RequestMapping(value = "/cmmn/newssFileDown.do")
  	public void newssFileDown(
  			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String fileOrgNm = request.getParameter("newssFileDown");
  		String saveDir = "/home/files";
  		File file = new File(saveDir + "/" + fileOrgNm);
  		fileOrgNm = new String(fileOrgNm.getBytes("UTF-8"), "ISO-8859-1");
  		response.setHeader("Content-Disposition","attachment;filename=\"" + fileOrgNm + "\";");

  		FileInputStream fileInputStream = new FileInputStream(file);
  		ServletOutputStream servletOutputStream = response.getOutputStream();

  		byte b [] = new byte[1024];
  		int data = 0;

  		while((data=(fileInputStream.read(b, 0, b.length))) != -1)
  		{
  			servletOutputStream.write(b, 0, data);
  		}
  		servletOutputStream.flush();
  		servletOutputStream.close();
  		fileInputStream.close();
  	}
	
}

